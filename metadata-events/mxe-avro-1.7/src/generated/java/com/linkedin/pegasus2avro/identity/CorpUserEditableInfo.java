/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.identity;  
@SuppressWarnings("all")
/** Linkedin corp user information that can be edited from UI */
@org.apache.avro.specific.AvroGenerated
public class CorpUserEditableInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CorpUserEditableInfo\",\"namespace\":\"com.linkedin.pegasus2avro.identity\",\"doc\":\"Linkedin corp user information that can be edited from UI\",\"fields\":[{\"name\":\"aboutMe\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"About me section of the user\",\"default\":null},{\"name\":\"teams\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"doc\":\"Teams that the user belongs to e.g. Metadata\",\"default\":[],\"Searchable\":{\"/*\":{\"fieldType\":\"TEXT\"}}},{\"name\":\"skills\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"doc\":\"Skills that the user possesses e.g. Machine Learning\",\"default\":[],\"Searchable\":{\"/*\":{\"fieldType\":\"TEXT\"}}},{\"name\":\"pictureLink\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"A URL which points to a picture which user wants to set as a profile photo\",\"default\":\"https://raw.githubusercontent.com/datahub-project/datahub/master/datahub-web-react/src/images/default_avatar.png\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.url.Url\",\"coercerClass\":\"com.linkedin.pegasus2avro.common.url.UrlCoercer\"}},{\"name\":\"displayName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"DataHub-native display name\",\"default\":null,\"Searchable\":{\"boostScore\":10.0,\"fieldType\":\"WORD_GRAM\",\"queryByDefault\":true}},{\"name\":\"title\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"DataHub-native Title, e.g. 'Software Engineer'\",\"default\":null},{\"name\":\"slack\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Slack handle for the user\",\"default\":null},{\"name\":\"phone\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Phone number to contact the user\",\"default\":null},{\"name\":\"email\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Email address to contact the user\",\"default\":null}],\"Aspect\":{\"EntityUrns\":[\"com.linkedin.pegasus2avro.common.CorpuserUrn\"],\"name\":\"corpUserEditableInfo\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** About me section of the user */
  @Deprecated public java.lang.String aboutMe;
  /** Teams that the user belongs to e.g. Metadata */
  @Deprecated public java.util.List<java.lang.String> teams;
  /** Skills that the user possesses e.g. Machine Learning */
  @Deprecated public java.util.List<java.lang.String> skills;
  /** A URL which points to a picture which user wants to set as a profile photo */
  @Deprecated public java.lang.String pictureLink;
  /** DataHub-native display name */
  @Deprecated public java.lang.String displayName;
  /** DataHub-native Title, e.g. 'Software Engineer' */
  @Deprecated public java.lang.String title;
  /** Slack handle for the user */
  @Deprecated public java.lang.String slack;
  /** Phone number to contact the user */
  @Deprecated public java.lang.String phone;
  /** Email address to contact the user */
  @Deprecated public java.lang.String email;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public CorpUserEditableInfo() {}

  /**
   * All-args constructor.
   */
  public CorpUserEditableInfo(java.lang.String aboutMe, java.util.List<java.lang.String> teams, java.util.List<java.lang.String> skills, java.lang.String pictureLink, java.lang.String displayName, java.lang.String title, java.lang.String slack, java.lang.String phone, java.lang.String email) {
    this.aboutMe = aboutMe;
    this.teams = teams;
    this.skills = skills;
    this.pictureLink = pictureLink;
    this.displayName = displayName;
    this.title = title;
    this.slack = slack;
    this.phone = phone;
    this.email = email;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return aboutMe;
    case 1: return teams;
    case 2: return skills;
    case 3: return pictureLink;
    case 4: return displayName;
    case 5: return title;
    case 6: return slack;
    case 7: return phone;
    case 8: return email;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: aboutMe = (java.lang.String)value$; break;
    case 1: teams = (java.util.List<java.lang.String>)value$; break;
    case 2: skills = (java.util.List<java.lang.String>)value$; break;
    case 3: pictureLink = (java.lang.String)value$; break;
    case 4: displayName = (java.lang.String)value$; break;
    case 5: title = (java.lang.String)value$; break;
    case 6: slack = (java.lang.String)value$; break;
    case 7: phone = (java.lang.String)value$; break;
    case 8: email = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'aboutMe' field.
   * About me section of the user   */
  public java.lang.String getAboutMe() {
    return aboutMe;
  }

  /**
   * Sets the value of the 'aboutMe' field.
   * About me section of the user   * @param value the value to set.
   */
  public void setAboutMe(java.lang.String value) {
    this.aboutMe = value;
  }

  /**
   * Gets the value of the 'teams' field.
   * Teams that the user belongs to e.g. Metadata   */
  public java.util.List<java.lang.String> getTeams() {
    return teams;
  }

  /**
   * Sets the value of the 'teams' field.
   * Teams that the user belongs to e.g. Metadata   * @param value the value to set.
   */
  public void setTeams(java.util.List<java.lang.String> value) {
    this.teams = value;
  }

  /**
   * Gets the value of the 'skills' field.
   * Skills that the user possesses e.g. Machine Learning   */
  public java.util.List<java.lang.String> getSkills() {
    return skills;
  }

  /**
   * Sets the value of the 'skills' field.
   * Skills that the user possesses e.g. Machine Learning   * @param value the value to set.
   */
  public void setSkills(java.util.List<java.lang.String> value) {
    this.skills = value;
  }

  /**
   * Gets the value of the 'pictureLink' field.
   * A URL which points to a picture which user wants to set as a profile photo   */
  public java.lang.String getPictureLink() {
    return pictureLink;
  }

  /**
   * Sets the value of the 'pictureLink' field.
   * A URL which points to a picture which user wants to set as a profile photo   * @param value the value to set.
   */
  public void setPictureLink(java.lang.String value) {
    this.pictureLink = value;
  }

  /**
   * Gets the value of the 'displayName' field.
   * DataHub-native display name   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Sets the value of the 'displayName' field.
   * DataHub-native display name   * @param value the value to set.
   */
  public void setDisplayName(java.lang.String value) {
    this.displayName = value;
  }

  /**
   * Gets the value of the 'title' field.
   * DataHub-native Title, e.g. 'Software Engineer'   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * Sets the value of the 'title' field.
   * DataHub-native Title, e.g. 'Software Engineer'   * @param value the value to set.
   */
  public void setTitle(java.lang.String value) {
    this.title = value;
  }

  /**
   * Gets the value of the 'slack' field.
   * Slack handle for the user   */
  public java.lang.String getSlack() {
    return slack;
  }

  /**
   * Sets the value of the 'slack' field.
   * Slack handle for the user   * @param value the value to set.
   */
  public void setSlack(java.lang.String value) {
    this.slack = value;
  }

  /**
   * Gets the value of the 'phone' field.
   * Phone number to contact the user   */
  public java.lang.String getPhone() {
    return phone;
  }

  /**
   * Sets the value of the 'phone' field.
   * Phone number to contact the user   * @param value the value to set.
   */
  public void setPhone(java.lang.String value) {
    this.phone = value;
  }

  /**
   * Gets the value of the 'email' field.
   * Email address to contact the user   */
  public java.lang.String getEmail() {
    return email;
  }

  /**
   * Sets the value of the 'email' field.
   * Email address to contact the user   * @param value the value to set.
   */
  public void setEmail(java.lang.String value) {
    this.email = value;
  }

  /** Creates a new CorpUserEditableInfo RecordBuilder */
  public static com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.Builder();
  }
  
  /** Creates a new CorpUserEditableInfo RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.Builder newBuilder(com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.Builder other) {
    return new com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.Builder(other);
  }
  
  /** Creates a new CorpUserEditableInfo RecordBuilder by copying an existing CorpUserEditableInfo instance */
  public static com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.Builder newBuilder(com.linkedin.pegasus2avro.identity.CorpUserEditableInfo other) {
    return new com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.Builder(other);
  }
  
  /**
   * RecordBuilder for CorpUserEditableInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CorpUserEditableInfo>
    implements org.apache.avro.data.RecordBuilder<CorpUserEditableInfo> {

    private java.lang.String aboutMe;
    private java.util.List<java.lang.String> teams;
    private java.util.List<java.lang.String> skills;
    private java.lang.String pictureLink;
    private java.lang.String displayName;
    private java.lang.String title;
    private java.lang.String slack;
    private java.lang.String phone;
    private java.lang.String email;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.aboutMe)) {
        this.aboutMe = data().deepCopy(fields()[0].schema(), other.aboutMe);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.teams)) {
        this.teams = data().deepCopy(fields()[1].schema(), other.teams);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.skills)) {
        this.skills = data().deepCopy(fields()[2].schema(), other.skills);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.pictureLink)) {
        this.pictureLink = data().deepCopy(fields()[3].schema(), other.pictureLink);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.displayName)) {
        this.displayName = data().deepCopy(fields()[4].schema(), other.displayName);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.title)) {
        this.title = data().deepCopy(fields()[5].schema(), other.title);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.slack)) {
        this.slack = data().deepCopy(fields()[6].schema(), other.slack);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.phone)) {
        this.phone = data().deepCopy(fields()[7].schema(), other.phone);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.email)) {
        this.email = data().deepCopy(fields()[8].schema(), other.email);
        fieldSetFlags()[8] = true;
      }
    }
    
    /** Creates a Builder by copying an existing CorpUserEditableInfo instance */
    private Builder(com.linkedin.pegasus2avro.identity.CorpUserEditableInfo other) {
            super(com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.SCHEMA$);
      if (isValidValue(fields()[0], other.aboutMe)) {
        this.aboutMe = data().deepCopy(fields()[0].schema(), other.aboutMe);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.teams)) {
        this.teams = data().deepCopy(fields()[1].schema(), other.teams);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.skills)) {
        this.skills = data().deepCopy(fields()[2].schema(), other.skills);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.pictureLink)) {
        this.pictureLink = data().deepCopy(fields()[3].schema(), other.pictureLink);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.displayName)) {
        this.displayName = data().deepCopy(fields()[4].schema(), other.displayName);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.title)) {
        this.title = data().deepCopy(fields()[5].schema(), other.title);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.slack)) {
        this.slack = data().deepCopy(fields()[6].schema(), other.slack);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.phone)) {
        this.phone = data().deepCopy(fields()[7].schema(), other.phone);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.email)) {
        this.email = data().deepCopy(fields()[8].schema(), other.email);
        fieldSetFlags()[8] = true;
      }
    }

    /** Gets the value of the 'aboutMe' field */
    public java.lang.String getAboutMe() {
      return aboutMe;
    }
    
    /** Sets the value of the 'aboutMe' field */
    public com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.Builder setAboutMe(java.lang.String value) {
      validate(fields()[0], value);
      this.aboutMe = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'aboutMe' field has been set */
    public boolean hasAboutMe() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'aboutMe' field */
    public com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.Builder clearAboutMe() {
      aboutMe = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'teams' field */
    public java.util.List<java.lang.String> getTeams() {
      return teams;
    }
    
    /** Sets the value of the 'teams' field */
    public com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.Builder setTeams(java.util.List<java.lang.String> value) {
      validate(fields()[1], value);
      this.teams = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'teams' field has been set */
    public boolean hasTeams() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'teams' field */
    public com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.Builder clearTeams() {
      teams = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'skills' field */
    public java.util.List<java.lang.String> getSkills() {
      return skills;
    }
    
    /** Sets the value of the 'skills' field */
    public com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.Builder setSkills(java.util.List<java.lang.String> value) {
      validate(fields()[2], value);
      this.skills = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'skills' field has been set */
    public boolean hasSkills() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'skills' field */
    public com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.Builder clearSkills() {
      skills = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'pictureLink' field */
    public java.lang.String getPictureLink() {
      return pictureLink;
    }
    
    /** Sets the value of the 'pictureLink' field */
    public com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.Builder setPictureLink(java.lang.String value) {
      validate(fields()[3], value);
      this.pictureLink = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'pictureLink' field has been set */
    public boolean hasPictureLink() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'pictureLink' field */
    public com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.Builder clearPictureLink() {
      pictureLink = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'displayName' field */
    public java.lang.String getDisplayName() {
      return displayName;
    }
    
    /** Sets the value of the 'displayName' field */
    public com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.Builder setDisplayName(java.lang.String value) {
      validate(fields()[4], value);
      this.displayName = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'displayName' field has been set */
    public boolean hasDisplayName() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'displayName' field */
    public com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.Builder clearDisplayName() {
      displayName = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'title' field */
    public java.lang.String getTitle() {
      return title;
    }
    
    /** Sets the value of the 'title' field */
    public com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.Builder setTitle(java.lang.String value) {
      validate(fields()[5], value);
      this.title = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'title' field has been set */
    public boolean hasTitle() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'title' field */
    public com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.Builder clearTitle() {
      title = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'slack' field */
    public java.lang.String getSlack() {
      return slack;
    }
    
    /** Sets the value of the 'slack' field */
    public com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.Builder setSlack(java.lang.String value) {
      validate(fields()[6], value);
      this.slack = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'slack' field has been set */
    public boolean hasSlack() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'slack' field */
    public com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.Builder clearSlack() {
      slack = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'phone' field */
    public java.lang.String getPhone() {
      return phone;
    }
    
    /** Sets the value of the 'phone' field */
    public com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.Builder setPhone(java.lang.String value) {
      validate(fields()[7], value);
      this.phone = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'phone' field has been set */
    public boolean hasPhone() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'phone' field */
    public com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.Builder clearPhone() {
      phone = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'email' field */
    public java.lang.String getEmail() {
      return email;
    }
    
    /** Sets the value of the 'email' field */
    public com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.Builder setEmail(java.lang.String value) {
      validate(fields()[8], value);
      this.email = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'email' field has been set */
    public boolean hasEmail() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'email' field */
    public com.linkedin.pegasus2avro.identity.CorpUserEditableInfo.Builder clearEmail() {
      email = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    public CorpUserEditableInfo build() {
      try {
        CorpUserEditableInfo record = new CorpUserEditableInfo();
        record.aboutMe = fieldSetFlags()[0] ? this.aboutMe : (java.lang.String) defaultValue(fields()[0]);
        record.teams = fieldSetFlags()[1] ? this.teams : (java.util.List<java.lang.String>) defaultValue(fields()[1]);
        record.skills = fieldSetFlags()[2] ? this.skills : (java.util.List<java.lang.String>) defaultValue(fields()[2]);
        record.pictureLink = fieldSetFlags()[3] ? this.pictureLink : (java.lang.String) defaultValue(fields()[3]);
        record.displayName = fieldSetFlags()[4] ? this.displayName : (java.lang.String) defaultValue(fields()[4]);
        record.title = fieldSetFlags()[5] ? this.title : (java.lang.String) defaultValue(fields()[5]);
        record.slack = fieldSetFlags()[6] ? this.slack : (java.lang.String) defaultValue(fields()[6]);
        record.phone = fieldSetFlags()[7] ? this.phone : (java.lang.String) defaultValue(fields()[7]);
        record.email = fieldSetFlags()[8] ? this.email : (java.lang.String) defaultValue(fields()[8]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
