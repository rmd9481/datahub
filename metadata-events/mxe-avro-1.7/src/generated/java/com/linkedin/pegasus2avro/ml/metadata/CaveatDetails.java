/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.ml.metadata;  
@SuppressWarnings("all")
/** This section should list additional concerns that were not covered in the previous sections. For example, did the results suggest any further testing? Were there any relevant groups that were not represented in the evaluation dataset? Are there additional recommendations for model use? */
@org.apache.avro.specific.AvroGenerated
public class CaveatDetails extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CaveatDetails\",\"namespace\":\"com.linkedin.pegasus2avro.ml.metadata\",\"doc\":\"This section should list additional concerns that were not covered in the previous sections. For example, did the results suggest any further testing? Were there any relevant groups that were not represented in the evaluation dataset? Are there additional recommendations for model use?\",\"fields\":[{\"name\":\"needsFurtherTesting\",\"type\":[\"null\",\"boolean\"],\"doc\":\"Did the results suggest any further testing?\",\"default\":null},{\"name\":\"caveatDescription\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Caveat Description\\nFor ex: Given gender classes are binary (male/not male), which we include as male/female. Further work needed to evaluate across a spectrum of genders.\",\"default\":null},{\"name\":\"groupsNotRepresented\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"Relevant groups that were not represented in the evaluation dataset?\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Did the results suggest any further testing? */
  @Deprecated public java.lang.Boolean needsFurtherTesting;
  /** Caveat Description
For ex: Given gender classes are binary (male/not male), which we include as male/female. Further work needed to evaluate across a spectrum of genders. */
  @Deprecated public java.lang.String caveatDescription;
  /** Relevant groups that were not represented in the evaluation dataset? */
  @Deprecated public java.util.List<java.lang.String> groupsNotRepresented;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public CaveatDetails() {}

  /**
   * All-args constructor.
   */
  public CaveatDetails(java.lang.Boolean needsFurtherTesting, java.lang.String caveatDescription, java.util.List<java.lang.String> groupsNotRepresented) {
    this.needsFurtherTesting = needsFurtherTesting;
    this.caveatDescription = caveatDescription;
    this.groupsNotRepresented = groupsNotRepresented;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return needsFurtherTesting;
    case 1: return caveatDescription;
    case 2: return groupsNotRepresented;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: needsFurtherTesting = (java.lang.Boolean)value$; break;
    case 1: caveatDescription = (java.lang.String)value$; break;
    case 2: groupsNotRepresented = (java.util.List<java.lang.String>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'needsFurtherTesting' field.
   * Did the results suggest any further testing?   */
  public java.lang.Boolean getNeedsFurtherTesting() {
    return needsFurtherTesting;
  }

  /**
   * Sets the value of the 'needsFurtherTesting' field.
   * Did the results suggest any further testing?   * @param value the value to set.
   */
  public void setNeedsFurtherTesting(java.lang.Boolean value) {
    this.needsFurtherTesting = value;
  }

  /**
   * Gets the value of the 'caveatDescription' field.
   * Caveat Description
For ex: Given gender classes are binary (male/not male), which we include as male/female. Further work needed to evaluate across a spectrum of genders.   */
  public java.lang.String getCaveatDescription() {
    return caveatDescription;
  }

  /**
   * Sets the value of the 'caveatDescription' field.
   * Caveat Description
For ex: Given gender classes are binary (male/not male), which we include as male/female. Further work needed to evaluate across a spectrum of genders.   * @param value the value to set.
   */
  public void setCaveatDescription(java.lang.String value) {
    this.caveatDescription = value;
  }

  /**
   * Gets the value of the 'groupsNotRepresented' field.
   * Relevant groups that were not represented in the evaluation dataset?   */
  public java.util.List<java.lang.String> getGroupsNotRepresented() {
    return groupsNotRepresented;
  }

  /**
   * Sets the value of the 'groupsNotRepresented' field.
   * Relevant groups that were not represented in the evaluation dataset?   * @param value the value to set.
   */
  public void setGroupsNotRepresented(java.util.List<java.lang.String> value) {
    this.groupsNotRepresented = value;
  }

  /** Creates a new CaveatDetails RecordBuilder */
  public static com.linkedin.pegasus2avro.ml.metadata.CaveatDetails.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.ml.metadata.CaveatDetails.Builder();
  }
  
  /** Creates a new CaveatDetails RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.ml.metadata.CaveatDetails.Builder newBuilder(com.linkedin.pegasus2avro.ml.metadata.CaveatDetails.Builder other) {
    return new com.linkedin.pegasus2avro.ml.metadata.CaveatDetails.Builder(other);
  }
  
  /** Creates a new CaveatDetails RecordBuilder by copying an existing CaveatDetails instance */
  public static com.linkedin.pegasus2avro.ml.metadata.CaveatDetails.Builder newBuilder(com.linkedin.pegasus2avro.ml.metadata.CaveatDetails other) {
    return new com.linkedin.pegasus2avro.ml.metadata.CaveatDetails.Builder(other);
  }
  
  /**
   * RecordBuilder for CaveatDetails instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CaveatDetails>
    implements org.apache.avro.data.RecordBuilder<CaveatDetails> {

    private java.lang.Boolean needsFurtherTesting;
    private java.lang.String caveatDescription;
    private java.util.List<java.lang.String> groupsNotRepresented;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.ml.metadata.CaveatDetails.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.ml.metadata.CaveatDetails.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.needsFurtherTesting)) {
        this.needsFurtherTesting = data().deepCopy(fields()[0].schema(), other.needsFurtherTesting);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.caveatDescription)) {
        this.caveatDescription = data().deepCopy(fields()[1].schema(), other.caveatDescription);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.groupsNotRepresented)) {
        this.groupsNotRepresented = data().deepCopy(fields()[2].schema(), other.groupsNotRepresented);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing CaveatDetails instance */
    private Builder(com.linkedin.pegasus2avro.ml.metadata.CaveatDetails other) {
            super(com.linkedin.pegasus2avro.ml.metadata.CaveatDetails.SCHEMA$);
      if (isValidValue(fields()[0], other.needsFurtherTesting)) {
        this.needsFurtherTesting = data().deepCopy(fields()[0].schema(), other.needsFurtherTesting);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.caveatDescription)) {
        this.caveatDescription = data().deepCopy(fields()[1].schema(), other.caveatDescription);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.groupsNotRepresented)) {
        this.groupsNotRepresented = data().deepCopy(fields()[2].schema(), other.groupsNotRepresented);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'needsFurtherTesting' field */
    public java.lang.Boolean getNeedsFurtherTesting() {
      return needsFurtherTesting;
    }
    
    /** Sets the value of the 'needsFurtherTesting' field */
    public com.linkedin.pegasus2avro.ml.metadata.CaveatDetails.Builder setNeedsFurtherTesting(java.lang.Boolean value) {
      validate(fields()[0], value);
      this.needsFurtherTesting = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'needsFurtherTesting' field has been set */
    public boolean hasNeedsFurtherTesting() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'needsFurtherTesting' field */
    public com.linkedin.pegasus2avro.ml.metadata.CaveatDetails.Builder clearNeedsFurtherTesting() {
      needsFurtherTesting = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'caveatDescription' field */
    public java.lang.String getCaveatDescription() {
      return caveatDescription;
    }
    
    /** Sets the value of the 'caveatDescription' field */
    public com.linkedin.pegasus2avro.ml.metadata.CaveatDetails.Builder setCaveatDescription(java.lang.String value) {
      validate(fields()[1], value);
      this.caveatDescription = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'caveatDescription' field has been set */
    public boolean hasCaveatDescription() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'caveatDescription' field */
    public com.linkedin.pegasus2avro.ml.metadata.CaveatDetails.Builder clearCaveatDescription() {
      caveatDescription = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'groupsNotRepresented' field */
    public java.util.List<java.lang.String> getGroupsNotRepresented() {
      return groupsNotRepresented;
    }
    
    /** Sets the value of the 'groupsNotRepresented' field */
    public com.linkedin.pegasus2avro.ml.metadata.CaveatDetails.Builder setGroupsNotRepresented(java.util.List<java.lang.String> value) {
      validate(fields()[2], value);
      this.groupsNotRepresented = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'groupsNotRepresented' field has been set */
    public boolean hasGroupsNotRepresented() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'groupsNotRepresented' field */
    public com.linkedin.pegasus2avro.ml.metadata.CaveatDetails.Builder clearGroupsNotRepresented() {
      groupsNotRepresented = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public CaveatDetails build() {
      try {
        CaveatDetails record = new CaveatDetails();
        record.needsFurtherTesting = fieldSetFlags()[0] ? this.needsFurtherTesting : (java.lang.Boolean) defaultValue(fields()[0]);
        record.caveatDescription = fieldSetFlags()[1] ? this.caveatDescription : (java.lang.String) defaultValue(fields()[1]);
        record.groupsNotRepresented = fieldSetFlags()[2] ? this.groupsNotRepresented : (java.util.List<java.lang.String>) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
