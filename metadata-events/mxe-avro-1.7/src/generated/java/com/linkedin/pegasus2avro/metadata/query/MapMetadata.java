/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.metadata.query;  
@SuppressWarnings("all")
/** The model for map metadata */
@org.apache.avro.specific.AvroGenerated
public class MapMetadata extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MapMetadata\",\"namespace\":\"com.linkedin.pegasus2avro.metadata.query\",\"doc\":\"The model for map metadata\",\"fields\":[{\"name\":\"longMap\",\"type\":{\"type\":\"map\",\"values\":\"long\",\"avro.java.string\":\"String\"},\"doc\":\"Map for string keys to long values\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Map for string keys to long values */
  @Deprecated public java.util.Map<java.lang.String,java.lang.Long> longMap;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public MapMetadata() {}

  /**
   * All-args constructor.
   */
  public MapMetadata(java.util.Map<java.lang.String,java.lang.Long> longMap) {
    this.longMap = longMap;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return longMap;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: longMap = (java.util.Map<java.lang.String,java.lang.Long>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'longMap' field.
   * Map for string keys to long values   */
  public java.util.Map<java.lang.String,java.lang.Long> getLongMap() {
    return longMap;
  }

  /**
   * Sets the value of the 'longMap' field.
   * Map for string keys to long values   * @param value the value to set.
   */
  public void setLongMap(java.util.Map<java.lang.String,java.lang.Long> value) {
    this.longMap = value;
  }

  /** Creates a new MapMetadata RecordBuilder */
  public static com.linkedin.pegasus2avro.metadata.query.MapMetadata.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.metadata.query.MapMetadata.Builder();
  }
  
  /** Creates a new MapMetadata RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.metadata.query.MapMetadata.Builder newBuilder(com.linkedin.pegasus2avro.metadata.query.MapMetadata.Builder other) {
    return new com.linkedin.pegasus2avro.metadata.query.MapMetadata.Builder(other);
  }
  
  /** Creates a new MapMetadata RecordBuilder by copying an existing MapMetadata instance */
  public static com.linkedin.pegasus2avro.metadata.query.MapMetadata.Builder newBuilder(com.linkedin.pegasus2avro.metadata.query.MapMetadata other) {
    return new com.linkedin.pegasus2avro.metadata.query.MapMetadata.Builder(other);
  }
  
  /**
   * RecordBuilder for MapMetadata instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MapMetadata>
    implements org.apache.avro.data.RecordBuilder<MapMetadata> {

    private java.util.Map<java.lang.String,java.lang.Long> longMap;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.metadata.query.MapMetadata.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.metadata.query.MapMetadata.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.longMap)) {
        this.longMap = data().deepCopy(fields()[0].schema(), other.longMap);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing MapMetadata instance */
    private Builder(com.linkedin.pegasus2avro.metadata.query.MapMetadata other) {
            super(com.linkedin.pegasus2avro.metadata.query.MapMetadata.SCHEMA$);
      if (isValidValue(fields()[0], other.longMap)) {
        this.longMap = data().deepCopy(fields()[0].schema(), other.longMap);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'longMap' field */
    public java.util.Map<java.lang.String,java.lang.Long> getLongMap() {
      return longMap;
    }
    
    /** Sets the value of the 'longMap' field */
    public com.linkedin.pegasus2avro.metadata.query.MapMetadata.Builder setLongMap(java.util.Map<java.lang.String,java.lang.Long> value) {
      validate(fields()[0], value);
      this.longMap = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'longMap' field has been set */
    public boolean hasLongMap() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'longMap' field */
    public com.linkedin.pegasus2avro.metadata.query.MapMetadata.Builder clearLongMap() {
      longMap = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public MapMetadata build() {
      try {
        MapMetadata record = new MapMetadata();
        record.longMap = fieldSetFlags()[0] ? this.longMap : (java.util.Map<java.lang.String,java.lang.Long>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
