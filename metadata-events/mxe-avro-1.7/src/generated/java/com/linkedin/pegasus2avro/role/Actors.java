/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.role;  
@SuppressWarnings("all")
/** Provisioned users of a role */
@org.apache.avro.specific.AvroGenerated
public class Actors extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Actors\",\"namespace\":\"com.linkedin.pegasus2avro.role\",\"doc\":\"Provisioned users of a role\",\"fields\":[{\"name\":\"users\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"RoleUser\",\"doc\":\"Provisioned users of a role\",\"fields\":[{\"name\":\"user\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Link provisioned corp user for a role\",\"Relationship\":{\"entityTypes\":[\"corpuser\"],\"name\":\"Has\"},\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}}]}}],\"doc\":\"List of provisioned users of a role\",\"default\":null}],\"Aspect\":{\"name\":\"actors\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** List of provisioned users of a role */
  @Deprecated public java.util.List<com.linkedin.pegasus2avro.role.RoleUser> users;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Actors() {}

  /**
   * All-args constructor.
   */
  public Actors(java.util.List<com.linkedin.pegasus2avro.role.RoleUser> users) {
    this.users = users;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return users;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: users = (java.util.List<com.linkedin.pegasus2avro.role.RoleUser>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'users' field.
   * List of provisioned users of a role   */
  public java.util.List<com.linkedin.pegasus2avro.role.RoleUser> getUsers() {
    return users;
  }

  /**
   * Sets the value of the 'users' field.
   * List of provisioned users of a role   * @param value the value to set.
   */
  public void setUsers(java.util.List<com.linkedin.pegasus2avro.role.RoleUser> value) {
    this.users = value;
  }

  /** Creates a new Actors RecordBuilder */
  public static com.linkedin.pegasus2avro.role.Actors.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.role.Actors.Builder();
  }
  
  /** Creates a new Actors RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.role.Actors.Builder newBuilder(com.linkedin.pegasus2avro.role.Actors.Builder other) {
    return new com.linkedin.pegasus2avro.role.Actors.Builder(other);
  }
  
  /** Creates a new Actors RecordBuilder by copying an existing Actors instance */
  public static com.linkedin.pegasus2avro.role.Actors.Builder newBuilder(com.linkedin.pegasus2avro.role.Actors other) {
    return new com.linkedin.pegasus2avro.role.Actors.Builder(other);
  }
  
  /**
   * RecordBuilder for Actors instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Actors>
    implements org.apache.avro.data.RecordBuilder<Actors> {

    private java.util.List<com.linkedin.pegasus2avro.role.RoleUser> users;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.role.Actors.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.role.Actors.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.users)) {
        this.users = data().deepCopy(fields()[0].schema(), other.users);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Actors instance */
    private Builder(com.linkedin.pegasus2avro.role.Actors other) {
            super(com.linkedin.pegasus2avro.role.Actors.SCHEMA$);
      if (isValidValue(fields()[0], other.users)) {
        this.users = data().deepCopy(fields()[0].schema(), other.users);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'users' field */
    public java.util.List<com.linkedin.pegasus2avro.role.RoleUser> getUsers() {
      return users;
    }
    
    /** Sets the value of the 'users' field */
    public com.linkedin.pegasus2avro.role.Actors.Builder setUsers(java.util.List<com.linkedin.pegasus2avro.role.RoleUser> value) {
      validate(fields()[0], value);
      this.users = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'users' field has been set */
    public boolean hasUsers() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'users' field */
    public com.linkedin.pegasus2avro.role.Actors.Builder clearUsers() {
      users = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public Actors build() {
      try {
        Actors record = new Actors();
        record.users = fieldSetFlags()[0] ? this.users : (java.util.List<com.linkedin.pegasus2avro.role.RoleUser>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
