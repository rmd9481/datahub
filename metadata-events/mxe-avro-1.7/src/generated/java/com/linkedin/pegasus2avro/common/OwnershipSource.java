/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.common;  
@SuppressWarnings("all")
/** Source/provider of the ownership information */
@org.apache.avro.specific.AvroGenerated
public class OwnershipSource extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OwnershipSource\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"Source/provider of the ownership information\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"OwnershipSourceType\",\"symbols\":[\"AUDIT\",\"DATABASE\",\"FILE_SYSTEM\",\"ISSUE_TRACKING_SYSTEM\",\"MANUAL\",\"SERVICE\",\"SOURCE_CONTROL\",\"OTHER\"],\"symbolDocs\":{\"AUDIT\":\"Auditing system or audit logs\",\"DATABASE\":\"Database, e.g. GRANTS table\",\"FILE_SYSTEM\":\"File system, e.g. file/directory owner\",\"ISSUE_TRACKING_SYSTEM\":\"Issue tracking system, e.g. Jira\",\"MANUAL\":\"Manually provided by a user\",\"OTHER\":\"Other sources\",\"SERVICE\":\"Other ownership-like service, e.g. Nuage, ACL service etc\",\"SOURCE_CONTROL\":\"SCM system, e.g. GIT, SVN\"}},\"doc\":\"The type of the source\"},{\"name\":\"url\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"A reference URL for the source\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The type of the source */
  @Deprecated public com.linkedin.pegasus2avro.common.OwnershipSourceType type;
  /** A reference URL for the source */
  @Deprecated public java.lang.String url;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public OwnershipSource() {}

  /**
   * All-args constructor.
   */
  public OwnershipSource(com.linkedin.pegasus2avro.common.OwnershipSourceType type, java.lang.String url) {
    this.type = type;
    this.url = url;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return type;
    case 1: return url;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: type = (com.linkedin.pegasus2avro.common.OwnershipSourceType)value$; break;
    case 1: url = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'type' field.
   * The type of the source   */
  public com.linkedin.pegasus2avro.common.OwnershipSourceType getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * The type of the source   * @param value the value to set.
   */
  public void setType(com.linkedin.pegasus2avro.common.OwnershipSourceType value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'url' field.
   * A reference URL for the source   */
  public java.lang.String getUrl() {
    return url;
  }

  /**
   * Sets the value of the 'url' field.
   * A reference URL for the source   * @param value the value to set.
   */
  public void setUrl(java.lang.String value) {
    this.url = value;
  }

  /** Creates a new OwnershipSource RecordBuilder */
  public static com.linkedin.pegasus2avro.common.OwnershipSource.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.common.OwnershipSource.Builder();
  }
  
  /** Creates a new OwnershipSource RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.common.OwnershipSource.Builder newBuilder(com.linkedin.pegasus2avro.common.OwnershipSource.Builder other) {
    return new com.linkedin.pegasus2avro.common.OwnershipSource.Builder(other);
  }
  
  /** Creates a new OwnershipSource RecordBuilder by copying an existing OwnershipSource instance */
  public static com.linkedin.pegasus2avro.common.OwnershipSource.Builder newBuilder(com.linkedin.pegasus2avro.common.OwnershipSource other) {
    return new com.linkedin.pegasus2avro.common.OwnershipSource.Builder(other);
  }
  
  /**
   * RecordBuilder for OwnershipSource instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OwnershipSource>
    implements org.apache.avro.data.RecordBuilder<OwnershipSource> {

    private com.linkedin.pegasus2avro.common.OwnershipSourceType type;
    private java.lang.String url;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.common.OwnershipSource.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.common.OwnershipSource.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.url)) {
        this.url = data().deepCopy(fields()[1].schema(), other.url);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing OwnershipSource instance */
    private Builder(com.linkedin.pegasus2avro.common.OwnershipSource other) {
            super(com.linkedin.pegasus2avro.common.OwnershipSource.SCHEMA$);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.url)) {
        this.url = data().deepCopy(fields()[1].schema(), other.url);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'type' field */
    public com.linkedin.pegasus2avro.common.OwnershipSourceType getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public com.linkedin.pegasus2avro.common.OwnershipSource.Builder setType(com.linkedin.pegasus2avro.common.OwnershipSourceType value) {
      validate(fields()[0], value);
      this.type = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'type' field */
    public com.linkedin.pegasus2avro.common.OwnershipSource.Builder clearType() {
      type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'url' field */
    public java.lang.String getUrl() {
      return url;
    }
    
    /** Sets the value of the 'url' field */
    public com.linkedin.pegasus2avro.common.OwnershipSource.Builder setUrl(java.lang.String value) {
      validate(fields()[1], value);
      this.url = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'url' field has been set */
    public boolean hasUrl() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'url' field */
    public com.linkedin.pegasus2avro.common.OwnershipSource.Builder clearUrl() {
      url = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public OwnershipSource build() {
      try {
        OwnershipSource record = new OwnershipSource();
        record.type = fieldSetFlags()[0] ? this.type : (com.linkedin.pegasus2avro.common.OwnershipSourceType) defaultValue(fields()[0]);
        record.url = fieldSetFlags()[1] ? this.url : (java.lang.String) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
