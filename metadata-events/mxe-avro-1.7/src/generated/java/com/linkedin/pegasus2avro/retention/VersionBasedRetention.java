/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.retention;  
@SuppressWarnings("all")
/** Keep max N latest records */
@org.apache.avro.specific.AvroGenerated
public class VersionBasedRetention extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"VersionBasedRetention\",\"namespace\":\"com.linkedin.pegasus2avro.retention\",\"doc\":\"Keep max N latest records\",\"fields\":[{\"name\":\"maxVersions\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int maxVersions;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public VersionBasedRetention() {}

  /**
   * All-args constructor.
   */
  public VersionBasedRetention(java.lang.Integer maxVersions) {
    this.maxVersions = maxVersions;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return maxVersions;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: maxVersions = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'maxVersions' field.
   */
  public java.lang.Integer getMaxVersions() {
    return maxVersions;
  }

  /**
   * Sets the value of the 'maxVersions' field.
   * @param value the value to set.
   */
  public void setMaxVersions(java.lang.Integer value) {
    this.maxVersions = value;
  }

  /** Creates a new VersionBasedRetention RecordBuilder */
  public static com.linkedin.pegasus2avro.retention.VersionBasedRetention.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.retention.VersionBasedRetention.Builder();
  }
  
  /** Creates a new VersionBasedRetention RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.retention.VersionBasedRetention.Builder newBuilder(com.linkedin.pegasus2avro.retention.VersionBasedRetention.Builder other) {
    return new com.linkedin.pegasus2avro.retention.VersionBasedRetention.Builder(other);
  }
  
  /** Creates a new VersionBasedRetention RecordBuilder by copying an existing VersionBasedRetention instance */
  public static com.linkedin.pegasus2avro.retention.VersionBasedRetention.Builder newBuilder(com.linkedin.pegasus2avro.retention.VersionBasedRetention other) {
    return new com.linkedin.pegasus2avro.retention.VersionBasedRetention.Builder(other);
  }
  
  /**
   * RecordBuilder for VersionBasedRetention instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<VersionBasedRetention>
    implements org.apache.avro.data.RecordBuilder<VersionBasedRetention> {

    private int maxVersions;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.retention.VersionBasedRetention.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.retention.VersionBasedRetention.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.maxVersions)) {
        this.maxVersions = data().deepCopy(fields()[0].schema(), other.maxVersions);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing VersionBasedRetention instance */
    private Builder(com.linkedin.pegasus2avro.retention.VersionBasedRetention other) {
            super(com.linkedin.pegasus2avro.retention.VersionBasedRetention.SCHEMA$);
      if (isValidValue(fields()[0], other.maxVersions)) {
        this.maxVersions = data().deepCopy(fields()[0].schema(), other.maxVersions);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'maxVersions' field */
    public java.lang.Integer getMaxVersions() {
      return maxVersions;
    }
    
    /** Sets the value of the 'maxVersions' field */
    public com.linkedin.pegasus2avro.retention.VersionBasedRetention.Builder setMaxVersions(int value) {
      validate(fields()[0], value);
      this.maxVersions = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'maxVersions' field has been set */
    public boolean hasMaxVersions() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'maxVersions' field */
    public com.linkedin.pegasus2avro.retention.VersionBasedRetention.Builder clearMaxVersions() {
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public VersionBasedRetention build() {
      try {
        VersionBasedRetention record = new VersionBasedRetention();
        record.maxVersions = fieldSetFlags()[0] ? this.maxVersions : (java.lang.Integer) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
