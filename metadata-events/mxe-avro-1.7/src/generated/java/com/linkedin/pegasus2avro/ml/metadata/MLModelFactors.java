/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.ml.metadata;  
@SuppressWarnings("all")
/** Factors affecting the performance of the MLModel. */
@org.apache.avro.specific.AvroGenerated
public class MLModelFactors extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MLModelFactors\",\"namespace\":\"com.linkedin.pegasus2avro.ml.metadata\",\"doc\":\"Factors affecting the performance of the MLModel.\",\"fields\":[{\"name\":\"groups\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"Groups refers to distinct categories with similar characteristics that are present in the evaluation data instances.\\nFor human-centric machine learning MLModels, groups are people who share one or multiple characteristics.\",\"default\":null},{\"name\":\"instrumentation\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"The performance of a MLModel can vary depending on what instruments were used to capture the input to the MLModel.\\nFor example, a face detection model may perform differently depending on the camera's hardware and software,\\nincluding lens, image stabilization, high dynamic range techniques, and background blurring for portrait mode.\",\"default\":null},{\"name\":\"environment\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"A further factor affecting MLModel performance is the environment in which it is deployed.\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Groups refers to distinct categories with similar characteristics that are present in the evaluation data instances.
For human-centric machine learning MLModels, groups are people who share one or multiple characteristics. */
  @Deprecated public java.util.List<java.lang.String> groups;
  /** The performance of a MLModel can vary depending on what instruments were used to capture the input to the MLModel.
For example, a face detection model may perform differently depending on the camera's hardware and software,
including lens, image stabilization, high dynamic range techniques, and background blurring for portrait mode. */
  @Deprecated public java.util.List<java.lang.String> instrumentation;
  /** A further factor affecting MLModel performance is the environment in which it is deployed. */
  @Deprecated public java.util.List<java.lang.String> environment;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public MLModelFactors() {}

  /**
   * All-args constructor.
   */
  public MLModelFactors(java.util.List<java.lang.String> groups, java.util.List<java.lang.String> instrumentation, java.util.List<java.lang.String> environment) {
    this.groups = groups;
    this.instrumentation = instrumentation;
    this.environment = environment;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return groups;
    case 1: return instrumentation;
    case 2: return environment;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: groups = (java.util.List<java.lang.String>)value$; break;
    case 1: instrumentation = (java.util.List<java.lang.String>)value$; break;
    case 2: environment = (java.util.List<java.lang.String>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'groups' field.
   * Groups refers to distinct categories with similar characteristics that are present in the evaluation data instances.
For human-centric machine learning MLModels, groups are people who share one or multiple characteristics.   */
  public java.util.List<java.lang.String> getGroups() {
    return groups;
  }

  /**
   * Sets the value of the 'groups' field.
   * Groups refers to distinct categories with similar characteristics that are present in the evaluation data instances.
For human-centric machine learning MLModels, groups are people who share one or multiple characteristics.   * @param value the value to set.
   */
  public void setGroups(java.util.List<java.lang.String> value) {
    this.groups = value;
  }

  /**
   * Gets the value of the 'instrumentation' field.
   * The performance of a MLModel can vary depending on what instruments were used to capture the input to the MLModel.
For example, a face detection model may perform differently depending on the camera's hardware and software,
including lens, image stabilization, high dynamic range techniques, and background blurring for portrait mode.   */
  public java.util.List<java.lang.String> getInstrumentation() {
    return instrumentation;
  }

  /**
   * Sets the value of the 'instrumentation' field.
   * The performance of a MLModel can vary depending on what instruments were used to capture the input to the MLModel.
For example, a face detection model may perform differently depending on the camera's hardware and software,
including lens, image stabilization, high dynamic range techniques, and background blurring for portrait mode.   * @param value the value to set.
   */
  public void setInstrumentation(java.util.List<java.lang.String> value) {
    this.instrumentation = value;
  }

  /**
   * Gets the value of the 'environment' field.
   * A further factor affecting MLModel performance is the environment in which it is deployed.   */
  public java.util.List<java.lang.String> getEnvironment() {
    return environment;
  }

  /**
   * Sets the value of the 'environment' field.
   * A further factor affecting MLModel performance is the environment in which it is deployed.   * @param value the value to set.
   */
  public void setEnvironment(java.util.List<java.lang.String> value) {
    this.environment = value;
  }

  /** Creates a new MLModelFactors RecordBuilder */
  public static com.linkedin.pegasus2avro.ml.metadata.MLModelFactors.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.ml.metadata.MLModelFactors.Builder();
  }
  
  /** Creates a new MLModelFactors RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.ml.metadata.MLModelFactors.Builder newBuilder(com.linkedin.pegasus2avro.ml.metadata.MLModelFactors.Builder other) {
    return new com.linkedin.pegasus2avro.ml.metadata.MLModelFactors.Builder(other);
  }
  
  /** Creates a new MLModelFactors RecordBuilder by copying an existing MLModelFactors instance */
  public static com.linkedin.pegasus2avro.ml.metadata.MLModelFactors.Builder newBuilder(com.linkedin.pegasus2avro.ml.metadata.MLModelFactors other) {
    return new com.linkedin.pegasus2avro.ml.metadata.MLModelFactors.Builder(other);
  }
  
  /**
   * RecordBuilder for MLModelFactors instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MLModelFactors>
    implements org.apache.avro.data.RecordBuilder<MLModelFactors> {

    private java.util.List<java.lang.String> groups;
    private java.util.List<java.lang.String> instrumentation;
    private java.util.List<java.lang.String> environment;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.ml.metadata.MLModelFactors.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.ml.metadata.MLModelFactors.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.groups)) {
        this.groups = data().deepCopy(fields()[0].schema(), other.groups);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.instrumentation)) {
        this.instrumentation = data().deepCopy(fields()[1].schema(), other.instrumentation);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.environment)) {
        this.environment = data().deepCopy(fields()[2].schema(), other.environment);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing MLModelFactors instance */
    private Builder(com.linkedin.pegasus2avro.ml.metadata.MLModelFactors other) {
            super(com.linkedin.pegasus2avro.ml.metadata.MLModelFactors.SCHEMA$);
      if (isValidValue(fields()[0], other.groups)) {
        this.groups = data().deepCopy(fields()[0].schema(), other.groups);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.instrumentation)) {
        this.instrumentation = data().deepCopy(fields()[1].schema(), other.instrumentation);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.environment)) {
        this.environment = data().deepCopy(fields()[2].schema(), other.environment);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'groups' field */
    public java.util.List<java.lang.String> getGroups() {
      return groups;
    }
    
    /** Sets the value of the 'groups' field */
    public com.linkedin.pegasus2avro.ml.metadata.MLModelFactors.Builder setGroups(java.util.List<java.lang.String> value) {
      validate(fields()[0], value);
      this.groups = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'groups' field has been set */
    public boolean hasGroups() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'groups' field */
    public com.linkedin.pegasus2avro.ml.metadata.MLModelFactors.Builder clearGroups() {
      groups = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'instrumentation' field */
    public java.util.List<java.lang.String> getInstrumentation() {
      return instrumentation;
    }
    
    /** Sets the value of the 'instrumentation' field */
    public com.linkedin.pegasus2avro.ml.metadata.MLModelFactors.Builder setInstrumentation(java.util.List<java.lang.String> value) {
      validate(fields()[1], value);
      this.instrumentation = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'instrumentation' field has been set */
    public boolean hasInstrumentation() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'instrumentation' field */
    public com.linkedin.pegasus2avro.ml.metadata.MLModelFactors.Builder clearInstrumentation() {
      instrumentation = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'environment' field */
    public java.util.List<java.lang.String> getEnvironment() {
      return environment;
    }
    
    /** Sets the value of the 'environment' field */
    public com.linkedin.pegasus2avro.ml.metadata.MLModelFactors.Builder setEnvironment(java.util.List<java.lang.String> value) {
      validate(fields()[2], value);
      this.environment = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'environment' field has been set */
    public boolean hasEnvironment() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'environment' field */
    public com.linkedin.pegasus2avro.ml.metadata.MLModelFactors.Builder clearEnvironment() {
      environment = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public MLModelFactors build() {
      try {
        MLModelFactors record = new MLModelFactors();
        record.groups = fieldSetFlags()[0] ? this.groups : (java.util.List<java.lang.String>) defaultValue(fields()[0]);
        record.instrumentation = fieldSetFlags()[1] ? this.instrumentation : (java.util.List<java.lang.String>) defaultValue(fields()[1]);
        record.environment = fieldSetFlags()[2] ? this.environment : (java.util.List<java.lang.String>) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
