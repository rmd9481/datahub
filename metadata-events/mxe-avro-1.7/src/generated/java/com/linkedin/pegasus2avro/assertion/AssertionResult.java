/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.assertion;  
@SuppressWarnings("all")
/** The result of running an assertion */
@org.apache.avro.specific.AvroGenerated
public class AssertionResult extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AssertionResult\",\"namespace\":\"com.linkedin.pegasus2avro.assertion\",\"doc\":\"The result of running an assertion\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"AssertionResultType\",\"symbols\":[\"SUCCESS\",\"FAILURE\"],\"symbolDocs\":{\"FAILURE\":\" The Assertion Failed\",\"SUCCESS\":\" The Assertion Succeeded\"}},\"doc\":\" The final result, e.g. either SUCCESS or FAILURE.\",\"TimeseriesField\":{}},{\"name\":\"rowCount\",\"type\":[\"null\",\"long\"],\"doc\":\"Number of rows for evaluated batch\",\"default\":null},{\"name\":\"missingCount\",\"type\":[\"null\",\"long\"],\"doc\":\"Number of rows with missing value for evaluated batch\",\"default\":null},{\"name\":\"unexpectedCount\",\"type\":[\"null\",\"long\"],\"doc\":\"Number of rows with unexpected value for evaluated batch\",\"default\":null},{\"name\":\"actualAggValue\",\"type\":[\"null\",\"float\"],\"doc\":\"Observed aggregate value for evaluated batch\",\"default\":null},{\"name\":\"nativeResults\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}],\"doc\":\"Other results of evaluation\",\"default\":null},{\"name\":\"externalUrl\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"URL where full results are available\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /**  The final result, e.g. either SUCCESS or FAILURE. */
  @Deprecated public com.linkedin.pegasus2avro.assertion.AssertionResultType type;
  /** Number of rows for evaluated batch */
  @Deprecated public java.lang.Long rowCount;
  /** Number of rows with missing value for evaluated batch */
  @Deprecated public java.lang.Long missingCount;
  /** Number of rows with unexpected value for evaluated batch */
  @Deprecated public java.lang.Long unexpectedCount;
  /** Observed aggregate value for evaluated batch */
  @Deprecated public java.lang.Float actualAggValue;
  /** Other results of evaluation */
  @Deprecated public java.util.Map<java.lang.String,java.lang.String> nativeResults;
  /** URL where full results are available */
  @Deprecated public java.lang.String externalUrl;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public AssertionResult() {}

  /**
   * All-args constructor.
   */
  public AssertionResult(com.linkedin.pegasus2avro.assertion.AssertionResultType type, java.lang.Long rowCount, java.lang.Long missingCount, java.lang.Long unexpectedCount, java.lang.Float actualAggValue, java.util.Map<java.lang.String,java.lang.String> nativeResults, java.lang.String externalUrl) {
    this.type = type;
    this.rowCount = rowCount;
    this.missingCount = missingCount;
    this.unexpectedCount = unexpectedCount;
    this.actualAggValue = actualAggValue;
    this.nativeResults = nativeResults;
    this.externalUrl = externalUrl;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return type;
    case 1: return rowCount;
    case 2: return missingCount;
    case 3: return unexpectedCount;
    case 4: return actualAggValue;
    case 5: return nativeResults;
    case 6: return externalUrl;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: type = (com.linkedin.pegasus2avro.assertion.AssertionResultType)value$; break;
    case 1: rowCount = (java.lang.Long)value$; break;
    case 2: missingCount = (java.lang.Long)value$; break;
    case 3: unexpectedCount = (java.lang.Long)value$; break;
    case 4: actualAggValue = (java.lang.Float)value$; break;
    case 5: nativeResults = (java.util.Map<java.lang.String,java.lang.String>)value$; break;
    case 6: externalUrl = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'type' field.
   *  The final result, e.g. either SUCCESS or FAILURE.   */
  public com.linkedin.pegasus2avro.assertion.AssertionResultType getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   *  The final result, e.g. either SUCCESS or FAILURE.   * @param value the value to set.
   */
  public void setType(com.linkedin.pegasus2avro.assertion.AssertionResultType value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'rowCount' field.
   * Number of rows for evaluated batch   */
  public java.lang.Long getRowCount() {
    return rowCount;
  }

  /**
   * Sets the value of the 'rowCount' field.
   * Number of rows for evaluated batch   * @param value the value to set.
   */
  public void setRowCount(java.lang.Long value) {
    this.rowCount = value;
  }

  /**
   * Gets the value of the 'missingCount' field.
   * Number of rows with missing value for evaluated batch   */
  public java.lang.Long getMissingCount() {
    return missingCount;
  }

  /**
   * Sets the value of the 'missingCount' field.
   * Number of rows with missing value for evaluated batch   * @param value the value to set.
   */
  public void setMissingCount(java.lang.Long value) {
    this.missingCount = value;
  }

  /**
   * Gets the value of the 'unexpectedCount' field.
   * Number of rows with unexpected value for evaluated batch   */
  public java.lang.Long getUnexpectedCount() {
    return unexpectedCount;
  }

  /**
   * Sets the value of the 'unexpectedCount' field.
   * Number of rows with unexpected value for evaluated batch   * @param value the value to set.
   */
  public void setUnexpectedCount(java.lang.Long value) {
    this.unexpectedCount = value;
  }

  /**
   * Gets the value of the 'actualAggValue' field.
   * Observed aggregate value for evaluated batch   */
  public java.lang.Float getActualAggValue() {
    return actualAggValue;
  }

  /**
   * Sets the value of the 'actualAggValue' field.
   * Observed aggregate value for evaluated batch   * @param value the value to set.
   */
  public void setActualAggValue(java.lang.Float value) {
    this.actualAggValue = value;
  }

  /**
   * Gets the value of the 'nativeResults' field.
   * Other results of evaluation   */
  public java.util.Map<java.lang.String,java.lang.String> getNativeResults() {
    return nativeResults;
  }

  /**
   * Sets the value of the 'nativeResults' field.
   * Other results of evaluation   * @param value the value to set.
   */
  public void setNativeResults(java.util.Map<java.lang.String,java.lang.String> value) {
    this.nativeResults = value;
  }

  /**
   * Gets the value of the 'externalUrl' field.
   * URL where full results are available   */
  public java.lang.String getExternalUrl() {
    return externalUrl;
  }

  /**
   * Sets the value of the 'externalUrl' field.
   * URL where full results are available   * @param value the value to set.
   */
  public void setExternalUrl(java.lang.String value) {
    this.externalUrl = value;
  }

  /** Creates a new AssertionResult RecordBuilder */
  public static com.linkedin.pegasus2avro.assertion.AssertionResult.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.assertion.AssertionResult.Builder();
  }
  
  /** Creates a new AssertionResult RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.assertion.AssertionResult.Builder newBuilder(com.linkedin.pegasus2avro.assertion.AssertionResult.Builder other) {
    return new com.linkedin.pegasus2avro.assertion.AssertionResult.Builder(other);
  }
  
  /** Creates a new AssertionResult RecordBuilder by copying an existing AssertionResult instance */
  public static com.linkedin.pegasus2avro.assertion.AssertionResult.Builder newBuilder(com.linkedin.pegasus2avro.assertion.AssertionResult other) {
    return new com.linkedin.pegasus2avro.assertion.AssertionResult.Builder(other);
  }
  
  /**
   * RecordBuilder for AssertionResult instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AssertionResult>
    implements org.apache.avro.data.RecordBuilder<AssertionResult> {

    private com.linkedin.pegasus2avro.assertion.AssertionResultType type;
    private java.lang.Long rowCount;
    private java.lang.Long missingCount;
    private java.lang.Long unexpectedCount;
    private java.lang.Float actualAggValue;
    private java.util.Map<java.lang.String,java.lang.String> nativeResults;
    private java.lang.String externalUrl;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.assertion.AssertionResult.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.assertion.AssertionResult.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.rowCount)) {
        this.rowCount = data().deepCopy(fields()[1].schema(), other.rowCount);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.missingCount)) {
        this.missingCount = data().deepCopy(fields()[2].schema(), other.missingCount);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.unexpectedCount)) {
        this.unexpectedCount = data().deepCopy(fields()[3].schema(), other.unexpectedCount);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.actualAggValue)) {
        this.actualAggValue = data().deepCopy(fields()[4].schema(), other.actualAggValue);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.nativeResults)) {
        this.nativeResults = data().deepCopy(fields()[5].schema(), other.nativeResults);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.externalUrl)) {
        this.externalUrl = data().deepCopy(fields()[6].schema(), other.externalUrl);
        fieldSetFlags()[6] = true;
      }
    }
    
    /** Creates a Builder by copying an existing AssertionResult instance */
    private Builder(com.linkedin.pegasus2avro.assertion.AssertionResult other) {
            super(com.linkedin.pegasus2avro.assertion.AssertionResult.SCHEMA$);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.rowCount)) {
        this.rowCount = data().deepCopy(fields()[1].schema(), other.rowCount);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.missingCount)) {
        this.missingCount = data().deepCopy(fields()[2].schema(), other.missingCount);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.unexpectedCount)) {
        this.unexpectedCount = data().deepCopy(fields()[3].schema(), other.unexpectedCount);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.actualAggValue)) {
        this.actualAggValue = data().deepCopy(fields()[4].schema(), other.actualAggValue);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.nativeResults)) {
        this.nativeResults = data().deepCopy(fields()[5].schema(), other.nativeResults);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.externalUrl)) {
        this.externalUrl = data().deepCopy(fields()[6].schema(), other.externalUrl);
        fieldSetFlags()[6] = true;
      }
    }

    /** Gets the value of the 'type' field */
    public com.linkedin.pegasus2avro.assertion.AssertionResultType getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public com.linkedin.pegasus2avro.assertion.AssertionResult.Builder setType(com.linkedin.pegasus2avro.assertion.AssertionResultType value) {
      validate(fields()[0], value);
      this.type = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'type' field */
    public com.linkedin.pegasus2avro.assertion.AssertionResult.Builder clearType() {
      type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'rowCount' field */
    public java.lang.Long getRowCount() {
      return rowCount;
    }
    
    /** Sets the value of the 'rowCount' field */
    public com.linkedin.pegasus2avro.assertion.AssertionResult.Builder setRowCount(java.lang.Long value) {
      validate(fields()[1], value);
      this.rowCount = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'rowCount' field has been set */
    public boolean hasRowCount() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'rowCount' field */
    public com.linkedin.pegasus2avro.assertion.AssertionResult.Builder clearRowCount() {
      rowCount = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'missingCount' field */
    public java.lang.Long getMissingCount() {
      return missingCount;
    }
    
    /** Sets the value of the 'missingCount' field */
    public com.linkedin.pegasus2avro.assertion.AssertionResult.Builder setMissingCount(java.lang.Long value) {
      validate(fields()[2], value);
      this.missingCount = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'missingCount' field has been set */
    public boolean hasMissingCount() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'missingCount' field */
    public com.linkedin.pegasus2avro.assertion.AssertionResult.Builder clearMissingCount() {
      missingCount = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'unexpectedCount' field */
    public java.lang.Long getUnexpectedCount() {
      return unexpectedCount;
    }
    
    /** Sets the value of the 'unexpectedCount' field */
    public com.linkedin.pegasus2avro.assertion.AssertionResult.Builder setUnexpectedCount(java.lang.Long value) {
      validate(fields()[3], value);
      this.unexpectedCount = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'unexpectedCount' field has been set */
    public boolean hasUnexpectedCount() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'unexpectedCount' field */
    public com.linkedin.pegasus2avro.assertion.AssertionResult.Builder clearUnexpectedCount() {
      unexpectedCount = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'actualAggValue' field */
    public java.lang.Float getActualAggValue() {
      return actualAggValue;
    }
    
    /** Sets the value of the 'actualAggValue' field */
    public com.linkedin.pegasus2avro.assertion.AssertionResult.Builder setActualAggValue(java.lang.Float value) {
      validate(fields()[4], value);
      this.actualAggValue = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'actualAggValue' field has been set */
    public boolean hasActualAggValue() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'actualAggValue' field */
    public com.linkedin.pegasus2avro.assertion.AssertionResult.Builder clearActualAggValue() {
      actualAggValue = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'nativeResults' field */
    public java.util.Map<java.lang.String,java.lang.String> getNativeResults() {
      return nativeResults;
    }
    
    /** Sets the value of the 'nativeResults' field */
    public com.linkedin.pegasus2avro.assertion.AssertionResult.Builder setNativeResults(java.util.Map<java.lang.String,java.lang.String> value) {
      validate(fields()[5], value);
      this.nativeResults = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'nativeResults' field has been set */
    public boolean hasNativeResults() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'nativeResults' field */
    public com.linkedin.pegasus2avro.assertion.AssertionResult.Builder clearNativeResults() {
      nativeResults = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'externalUrl' field */
    public java.lang.String getExternalUrl() {
      return externalUrl;
    }
    
    /** Sets the value of the 'externalUrl' field */
    public com.linkedin.pegasus2avro.assertion.AssertionResult.Builder setExternalUrl(java.lang.String value) {
      validate(fields()[6], value);
      this.externalUrl = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'externalUrl' field has been set */
    public boolean hasExternalUrl() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'externalUrl' field */
    public com.linkedin.pegasus2avro.assertion.AssertionResult.Builder clearExternalUrl() {
      externalUrl = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public AssertionResult build() {
      try {
        AssertionResult record = new AssertionResult();
        record.type = fieldSetFlags()[0] ? this.type : (com.linkedin.pegasus2avro.assertion.AssertionResultType) defaultValue(fields()[0]);
        record.rowCount = fieldSetFlags()[1] ? this.rowCount : (java.lang.Long) defaultValue(fields()[1]);
        record.missingCount = fieldSetFlags()[2] ? this.missingCount : (java.lang.Long) defaultValue(fields()[2]);
        record.unexpectedCount = fieldSetFlags()[3] ? this.unexpectedCount : (java.lang.Long) defaultValue(fields()[3]);
        record.actualAggValue = fieldSetFlags()[4] ? this.actualAggValue : (java.lang.Float) defaultValue(fields()[4]);
        record.nativeResults = fieldSetFlags()[5] ? this.nativeResults : (java.util.Map<java.lang.String,java.lang.String>) defaultValue(fields()[5]);
        record.externalUrl = fieldSetFlags()[6] ? this.externalUrl : (java.lang.String) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
