/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.post;  
@SuppressWarnings("all")
/** Content stored inside a Post. */
@org.apache.avro.specific.AvroGenerated
public class PostContent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PostContent\",\"namespace\":\"com.linkedin.pegasus2avro.post\",\"doc\":\"Content stored inside a Post.\",\"fields\":[{\"name\":\"title\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Title of the post.\",\"Searchable\":{\"fieldType\":\"TEXT_PARTIAL\"}},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"PostContentType\",\"doc\":\"Enum defining the type of content held in a Post.\",\"symbols\":[\"TEXT\",\"LINK\"],\"symbolDocs\":{\"LINK\":\"Link content\",\"TEXT\":\"Text content\"}},\"doc\":\"Type of content held in the post.\"},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Optional description of the post.\",\"default\":null},{\"name\":\"link\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Optional link that the post is associated with.\",\"default\":null,\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.url.Url\",\"coercerClass\":\"com.linkedin.pegasus2avro.common.url.UrlCoercer\"}},{\"name\":\"media\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Media\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"Carries information about which roles a user is assigned to.\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"MediaType\",\"doc\":\"Enum defining the type of content a Media object holds.\",\"symbols\":[\"IMAGE\"],\"symbolDocs\":{\"IMAGE\":\"The Media holds an image.\"}},\"doc\":\"Type of content the Media is storing, e.g. image, video, etc.\"},{\"name\":\"location\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Where the media content is stored.\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.url.Url\",\"coercerClass\":\"com.linkedin.pegasus2avro.common.url.UrlCoercer\"}}]}],\"doc\":\"Optional media that the post is storing\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Title of the post. */
  @Deprecated public java.lang.String title;
  /** Type of content held in the post. */
  @Deprecated public com.linkedin.pegasus2avro.post.PostContentType type;
  /** Optional description of the post. */
  @Deprecated public java.lang.String description;
  /** Optional link that the post is associated with. */
  @Deprecated public java.lang.String link;
  /** Optional media that the post is storing */
  @Deprecated public com.linkedin.pegasus2avro.common.Media media;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public PostContent() {}

  /**
   * All-args constructor.
   */
  public PostContent(java.lang.String title, com.linkedin.pegasus2avro.post.PostContentType type, java.lang.String description, java.lang.String link, com.linkedin.pegasus2avro.common.Media media) {
    this.title = title;
    this.type = type;
    this.description = description;
    this.link = link;
    this.media = media;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return title;
    case 1: return type;
    case 2: return description;
    case 3: return link;
    case 4: return media;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: title = (java.lang.String)value$; break;
    case 1: type = (com.linkedin.pegasus2avro.post.PostContentType)value$; break;
    case 2: description = (java.lang.String)value$; break;
    case 3: link = (java.lang.String)value$; break;
    case 4: media = (com.linkedin.pegasus2avro.common.Media)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'title' field.
   * Title of the post.   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * Sets the value of the 'title' field.
   * Title of the post.   * @param value the value to set.
   */
  public void setTitle(java.lang.String value) {
    this.title = value;
  }

  /**
   * Gets the value of the 'type' field.
   * Type of content held in the post.   */
  public com.linkedin.pegasus2avro.post.PostContentType getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * Type of content held in the post.   * @param value the value to set.
   */
  public void setType(com.linkedin.pegasus2avro.post.PostContentType value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'description' field.
   * Optional description of the post.   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * Optional description of the post.   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'link' field.
   * Optional link that the post is associated with.   */
  public java.lang.String getLink() {
    return link;
  }

  /**
   * Sets the value of the 'link' field.
   * Optional link that the post is associated with.   * @param value the value to set.
   */
  public void setLink(java.lang.String value) {
    this.link = value;
  }

  /**
   * Gets the value of the 'media' field.
   * Optional media that the post is storing   */
  public com.linkedin.pegasus2avro.common.Media getMedia() {
    return media;
  }

  /**
   * Sets the value of the 'media' field.
   * Optional media that the post is storing   * @param value the value to set.
   */
  public void setMedia(com.linkedin.pegasus2avro.common.Media value) {
    this.media = value;
  }

  /** Creates a new PostContent RecordBuilder */
  public static com.linkedin.pegasus2avro.post.PostContent.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.post.PostContent.Builder();
  }
  
  /** Creates a new PostContent RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.post.PostContent.Builder newBuilder(com.linkedin.pegasus2avro.post.PostContent.Builder other) {
    return new com.linkedin.pegasus2avro.post.PostContent.Builder(other);
  }
  
  /** Creates a new PostContent RecordBuilder by copying an existing PostContent instance */
  public static com.linkedin.pegasus2avro.post.PostContent.Builder newBuilder(com.linkedin.pegasus2avro.post.PostContent other) {
    return new com.linkedin.pegasus2avro.post.PostContent.Builder(other);
  }
  
  /**
   * RecordBuilder for PostContent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PostContent>
    implements org.apache.avro.data.RecordBuilder<PostContent> {

    private java.lang.String title;
    private com.linkedin.pegasus2avro.post.PostContentType type;
    private java.lang.String description;
    private java.lang.String link;
    private com.linkedin.pegasus2avro.common.Media media;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.post.PostContent.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.post.PostContent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.title)) {
        this.title = data().deepCopy(fields()[0].schema(), other.title);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.type)) {
        this.type = data().deepCopy(fields()[1].schema(), other.type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.link)) {
        this.link = data().deepCopy(fields()[3].schema(), other.link);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.media)) {
        this.media = data().deepCopy(fields()[4].schema(), other.media);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing PostContent instance */
    private Builder(com.linkedin.pegasus2avro.post.PostContent other) {
            super(com.linkedin.pegasus2avro.post.PostContent.SCHEMA$);
      if (isValidValue(fields()[0], other.title)) {
        this.title = data().deepCopy(fields()[0].schema(), other.title);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.type)) {
        this.type = data().deepCopy(fields()[1].schema(), other.type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.link)) {
        this.link = data().deepCopy(fields()[3].schema(), other.link);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.media)) {
        this.media = data().deepCopy(fields()[4].schema(), other.media);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'title' field */
    public java.lang.String getTitle() {
      return title;
    }
    
    /** Sets the value of the 'title' field */
    public com.linkedin.pegasus2avro.post.PostContent.Builder setTitle(java.lang.String value) {
      validate(fields()[0], value);
      this.title = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'title' field has been set */
    public boolean hasTitle() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'title' field */
    public com.linkedin.pegasus2avro.post.PostContent.Builder clearTitle() {
      title = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'type' field */
    public com.linkedin.pegasus2avro.post.PostContentType getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public com.linkedin.pegasus2avro.post.PostContent.Builder setType(com.linkedin.pegasus2avro.post.PostContentType value) {
      validate(fields()[1], value);
      this.type = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'type' field */
    public com.linkedin.pegasus2avro.post.PostContent.Builder clearType() {
      type = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'description' field */
    public java.lang.String getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public com.linkedin.pegasus2avro.post.PostContent.Builder setDescription(java.lang.String value) {
      validate(fields()[2], value);
      this.description = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'description' field */
    public com.linkedin.pegasus2avro.post.PostContent.Builder clearDescription() {
      description = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'link' field */
    public java.lang.String getLink() {
      return link;
    }
    
    /** Sets the value of the 'link' field */
    public com.linkedin.pegasus2avro.post.PostContent.Builder setLink(java.lang.String value) {
      validate(fields()[3], value);
      this.link = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'link' field has been set */
    public boolean hasLink() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'link' field */
    public com.linkedin.pegasus2avro.post.PostContent.Builder clearLink() {
      link = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'media' field */
    public com.linkedin.pegasus2avro.common.Media getMedia() {
      return media;
    }
    
    /** Sets the value of the 'media' field */
    public com.linkedin.pegasus2avro.post.PostContent.Builder setMedia(com.linkedin.pegasus2avro.common.Media value) {
      validate(fields()[4], value);
      this.media = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'media' field has been set */
    public boolean hasMedia() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'media' field */
    public com.linkedin.pegasus2avro.post.PostContent.Builder clearMedia() {
      media = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public PostContent build() {
      try {
        PostContent record = new PostContent();
        record.title = fieldSetFlags()[0] ? this.title : (java.lang.String) defaultValue(fields()[0]);
        record.type = fieldSetFlags()[1] ? this.type : (com.linkedin.pegasus2avro.post.PostContentType) defaultValue(fields()[1]);
        record.description = fieldSetFlags()[2] ? this.description : (java.lang.String) defaultValue(fields()[2]);
        record.link = fieldSetFlags()[3] ? this.link : (java.lang.String) defaultValue(fields()[3]);
        record.media = fieldSetFlags()[4] ? this.media : (com.linkedin.pegasus2avro.common.Media) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
