/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.execution;  
@SuppressWarnings("all")
/** An signal sent to a running execution request */
@org.apache.avro.specific.AvroGenerated
public class ExecutionRequestSignal extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ExecutionRequestSignal\",\"namespace\":\"com.linkedin.pegasus2avro.execution\",\"doc\":\"An signal sent to a running execution request\",\"fields\":[{\"name\":\"signal\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The signal to issue, e.g. KILL\"},{\"name\":\"executorId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Advanced: specify a specific executor to route the request to. If none is provided, a \\\"default\\\" executor is used.\",\"default\":null},{\"name\":\"createdAt\",\"type\":{\"type\":\"record\",\"name\":\"AuditStamp\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage.\",\"fields\":[{\"name\":\"time\",\"type\":\"long\",\"doc\":\"When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent.\"},{\"name\":\"actor\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change.\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"impersonator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor.\",\"default\":null,\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"message\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually.\",\"default\":null}]},\"doc\":\"Audit Stamp\"}],\"Aspect\":{\"name\":\"dataHubExecutionRequestSignal\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The signal to issue, e.g. KILL */
  @Deprecated public java.lang.String signal;
  /** Advanced: specify a specific executor to route the request to. If none is provided, a "default" executor is used. */
  @Deprecated public java.lang.String executorId;
  /** Audit Stamp */
  @Deprecated public com.linkedin.pegasus2avro.common.AuditStamp createdAt;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ExecutionRequestSignal() {}

  /**
   * All-args constructor.
   */
  public ExecutionRequestSignal(java.lang.String signal, java.lang.String executorId, com.linkedin.pegasus2avro.common.AuditStamp createdAt) {
    this.signal = signal;
    this.executorId = executorId;
    this.createdAt = createdAt;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return signal;
    case 1: return executorId;
    case 2: return createdAt;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: signal = (java.lang.String)value$; break;
    case 1: executorId = (java.lang.String)value$; break;
    case 2: createdAt = (com.linkedin.pegasus2avro.common.AuditStamp)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'signal' field.
   * The signal to issue, e.g. KILL   */
  public java.lang.String getSignal() {
    return signal;
  }

  /**
   * Sets the value of the 'signal' field.
   * The signal to issue, e.g. KILL   * @param value the value to set.
   */
  public void setSignal(java.lang.String value) {
    this.signal = value;
  }

  /**
   * Gets the value of the 'executorId' field.
   * Advanced: specify a specific executor to route the request to. If none is provided, a "default" executor is used.   */
  public java.lang.String getExecutorId() {
    return executorId;
  }

  /**
   * Sets the value of the 'executorId' field.
   * Advanced: specify a specific executor to route the request to. If none is provided, a "default" executor is used.   * @param value the value to set.
   */
  public void setExecutorId(java.lang.String value) {
    this.executorId = value;
  }

  /**
   * Gets the value of the 'createdAt' field.
   * Audit Stamp   */
  public com.linkedin.pegasus2avro.common.AuditStamp getCreatedAt() {
    return createdAt;
  }

  /**
   * Sets the value of the 'createdAt' field.
   * Audit Stamp   * @param value the value to set.
   */
  public void setCreatedAt(com.linkedin.pegasus2avro.common.AuditStamp value) {
    this.createdAt = value;
  }

  /** Creates a new ExecutionRequestSignal RecordBuilder */
  public static com.linkedin.pegasus2avro.execution.ExecutionRequestSignal.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.execution.ExecutionRequestSignal.Builder();
  }
  
  /** Creates a new ExecutionRequestSignal RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.execution.ExecutionRequestSignal.Builder newBuilder(com.linkedin.pegasus2avro.execution.ExecutionRequestSignal.Builder other) {
    return new com.linkedin.pegasus2avro.execution.ExecutionRequestSignal.Builder(other);
  }
  
  /** Creates a new ExecutionRequestSignal RecordBuilder by copying an existing ExecutionRequestSignal instance */
  public static com.linkedin.pegasus2avro.execution.ExecutionRequestSignal.Builder newBuilder(com.linkedin.pegasus2avro.execution.ExecutionRequestSignal other) {
    return new com.linkedin.pegasus2avro.execution.ExecutionRequestSignal.Builder(other);
  }
  
  /**
   * RecordBuilder for ExecutionRequestSignal instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ExecutionRequestSignal>
    implements org.apache.avro.data.RecordBuilder<ExecutionRequestSignal> {

    private java.lang.String signal;
    private java.lang.String executorId;
    private com.linkedin.pegasus2avro.common.AuditStamp createdAt;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.execution.ExecutionRequestSignal.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.execution.ExecutionRequestSignal.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.signal)) {
        this.signal = data().deepCopy(fields()[0].schema(), other.signal);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.executorId)) {
        this.executorId = data().deepCopy(fields()[1].schema(), other.executorId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[2].schema(), other.createdAt);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ExecutionRequestSignal instance */
    private Builder(com.linkedin.pegasus2avro.execution.ExecutionRequestSignal other) {
            super(com.linkedin.pegasus2avro.execution.ExecutionRequestSignal.SCHEMA$);
      if (isValidValue(fields()[0], other.signal)) {
        this.signal = data().deepCopy(fields()[0].schema(), other.signal);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.executorId)) {
        this.executorId = data().deepCopy(fields()[1].schema(), other.executorId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[2].schema(), other.createdAt);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'signal' field */
    public java.lang.String getSignal() {
      return signal;
    }
    
    /** Sets the value of the 'signal' field */
    public com.linkedin.pegasus2avro.execution.ExecutionRequestSignal.Builder setSignal(java.lang.String value) {
      validate(fields()[0], value);
      this.signal = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'signal' field has been set */
    public boolean hasSignal() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'signal' field */
    public com.linkedin.pegasus2avro.execution.ExecutionRequestSignal.Builder clearSignal() {
      signal = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'executorId' field */
    public java.lang.String getExecutorId() {
      return executorId;
    }
    
    /** Sets the value of the 'executorId' field */
    public com.linkedin.pegasus2avro.execution.ExecutionRequestSignal.Builder setExecutorId(java.lang.String value) {
      validate(fields()[1], value);
      this.executorId = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'executorId' field has been set */
    public boolean hasExecutorId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'executorId' field */
    public com.linkedin.pegasus2avro.execution.ExecutionRequestSignal.Builder clearExecutorId() {
      executorId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'createdAt' field */
    public com.linkedin.pegasus2avro.common.AuditStamp getCreatedAt() {
      return createdAt;
    }
    
    /** Sets the value of the 'createdAt' field */
    public com.linkedin.pegasus2avro.execution.ExecutionRequestSignal.Builder setCreatedAt(com.linkedin.pegasus2avro.common.AuditStamp value) {
      validate(fields()[2], value);
      this.createdAt = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'createdAt' field has been set */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'createdAt' field */
    public com.linkedin.pegasus2avro.execution.ExecutionRequestSignal.Builder clearCreatedAt() {
      createdAt = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public ExecutionRequestSignal build() {
      try {
        ExecutionRequestSignal record = new ExecutionRequestSignal();
        record.signal = fieldSetFlags()[0] ? this.signal : (java.lang.String) defaultValue(fields()[0]);
        record.executorId = fieldSetFlags()[1] ? this.executorId : (java.lang.String) defaultValue(fields()[1]);
        record.createdAt = fieldSetFlags()[2] ? this.createdAt : (com.linkedin.pegasus2avro.common.AuditStamp) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
