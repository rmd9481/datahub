/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.common;  
@SuppressWarnings("all")
/** Carries information about which roles a user is assigned to. */
@org.apache.avro.specific.AvroGenerated
public class Media extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Media\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"Carries information about which roles a user is assigned to.\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"MediaType\",\"doc\":\"Enum defining the type of content a Media object holds.\",\"symbols\":[\"IMAGE\"],\"symbolDocs\":{\"IMAGE\":\"The Media holds an image.\"}},\"doc\":\"Type of content the Media is storing, e.g. image, video, etc.\"},{\"name\":\"location\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Where the media content is stored.\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.url.Url\",\"coercerClass\":\"com.linkedin.pegasus2avro.common.url.UrlCoercer\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Type of content the Media is storing, e.g. image, video, etc. */
  @Deprecated public com.linkedin.pegasus2avro.common.MediaType type;
  /** Where the media content is stored. */
  @Deprecated public java.lang.String location;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Media() {}

  /**
   * All-args constructor.
   */
  public Media(com.linkedin.pegasus2avro.common.MediaType type, java.lang.String location) {
    this.type = type;
    this.location = location;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return type;
    case 1: return location;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: type = (com.linkedin.pegasus2avro.common.MediaType)value$; break;
    case 1: location = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'type' field.
   * Type of content the Media is storing, e.g. image, video, etc.   */
  public com.linkedin.pegasus2avro.common.MediaType getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * Type of content the Media is storing, e.g. image, video, etc.   * @param value the value to set.
   */
  public void setType(com.linkedin.pegasus2avro.common.MediaType value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'location' field.
   * Where the media content is stored.   */
  public java.lang.String getLocation() {
    return location;
  }

  /**
   * Sets the value of the 'location' field.
   * Where the media content is stored.   * @param value the value to set.
   */
  public void setLocation(java.lang.String value) {
    this.location = value;
  }

  /** Creates a new Media RecordBuilder */
  public static com.linkedin.pegasus2avro.common.Media.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.common.Media.Builder();
  }
  
  /** Creates a new Media RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.common.Media.Builder newBuilder(com.linkedin.pegasus2avro.common.Media.Builder other) {
    return new com.linkedin.pegasus2avro.common.Media.Builder(other);
  }
  
  /** Creates a new Media RecordBuilder by copying an existing Media instance */
  public static com.linkedin.pegasus2avro.common.Media.Builder newBuilder(com.linkedin.pegasus2avro.common.Media other) {
    return new com.linkedin.pegasus2avro.common.Media.Builder(other);
  }
  
  /**
   * RecordBuilder for Media instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Media>
    implements org.apache.avro.data.RecordBuilder<Media> {

    private com.linkedin.pegasus2avro.common.MediaType type;
    private java.lang.String location;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.common.Media.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.common.Media.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.location)) {
        this.location = data().deepCopy(fields()[1].schema(), other.location);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Media instance */
    private Builder(com.linkedin.pegasus2avro.common.Media other) {
            super(com.linkedin.pegasus2avro.common.Media.SCHEMA$);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.location)) {
        this.location = data().deepCopy(fields()[1].schema(), other.location);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'type' field */
    public com.linkedin.pegasus2avro.common.MediaType getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public com.linkedin.pegasus2avro.common.Media.Builder setType(com.linkedin.pegasus2avro.common.MediaType value) {
      validate(fields()[0], value);
      this.type = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'type' field */
    public com.linkedin.pegasus2avro.common.Media.Builder clearType() {
      type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'location' field */
    public java.lang.String getLocation() {
      return location;
    }
    
    /** Sets the value of the 'location' field */
    public com.linkedin.pegasus2avro.common.Media.Builder setLocation(java.lang.String value) {
      validate(fields()[1], value);
      this.location = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'location' field has been set */
    public boolean hasLocation() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'location' field */
    public com.linkedin.pegasus2avro.common.Media.Builder clearLocation() {
      location = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public Media build() {
      try {
        Media record = new Media();
        record.type = fieldSetFlags()[0] ? this.type : (com.linkedin.pegasus2avro.common.MediaType) defaultValue(fields()[0]);
        record.location = fieldSetFlags()[1] ? this.location : (java.lang.String) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
