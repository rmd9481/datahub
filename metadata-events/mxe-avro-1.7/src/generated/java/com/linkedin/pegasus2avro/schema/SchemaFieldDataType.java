/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.schema;  
@SuppressWarnings("all")
/** Schema field data types */
@org.apache.avro.specific.AvroGenerated
public class SchemaFieldDataType extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SchemaFieldDataType\",\"namespace\":\"com.linkedin.pegasus2avro.schema\",\"doc\":\"Schema field data types\",\"fields\":[{\"name\":\"type\",\"type\":[{\"type\":\"record\",\"name\":\"BooleanType\",\"doc\":\"Boolean field type.\",\"fields\":[]},{\"type\":\"record\",\"name\":\"FixedType\",\"doc\":\"Fixed field type.\",\"fields\":[]},{\"type\":\"record\",\"name\":\"StringType\",\"doc\":\"String field type.\",\"fields\":[]},{\"type\":\"record\",\"name\":\"BytesType\",\"doc\":\"Bytes field type.\",\"fields\":[]},{\"type\":\"record\",\"name\":\"NumberType\",\"doc\":\"Number data type: long, integer, short, etc..\",\"fields\":[]},{\"type\":\"record\",\"name\":\"DateType\",\"doc\":\"Date field type.\",\"fields\":[]},{\"type\":\"record\",\"name\":\"TimeType\",\"doc\":\"Time field type. This should also be used for datetimes.\",\"fields\":[]},{\"type\":\"record\",\"name\":\"EnumType\",\"doc\":\"Enum field type.\",\"fields\":[]},{\"type\":\"record\",\"name\":\"NullType\",\"doc\":\"Null field type.\",\"fields\":[]},{\"type\":\"record\",\"name\":\"MapType\",\"doc\":\"Map field type.\",\"fields\":[{\"name\":\"keyType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Key type in a map\",\"default\":null},{\"name\":\"valueType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Type of the value in a map\",\"default\":null}]},{\"type\":\"record\",\"name\":\"ArrayType\",\"doc\":\"Array field type.\",\"fields\":[{\"name\":\"nestedType\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"List of types this array holds.\",\"default\":null}]},{\"type\":\"record\",\"name\":\"UnionType\",\"doc\":\"Union field type.\",\"fields\":[{\"name\":\"nestedTypes\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"List of types in union type.\",\"default\":null}]},{\"type\":\"record\",\"name\":\"RecordType\",\"doc\":\"Record field type.\",\"fields\":[]}],\"doc\":\"Data platform specific types\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Data platform specific types */
  @Deprecated public java.lang.Object type;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public SchemaFieldDataType() {}

  /**
   * All-args constructor.
   */
  public SchemaFieldDataType(java.lang.Object type) {
    this.type = type;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return type;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: type = (java.lang.Object)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'type' field.
   * Data platform specific types   */
  public java.lang.Object getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * Data platform specific types   * @param value the value to set.
   */
  public void setType(java.lang.Object value) {
    this.type = value;
  }

  /** Creates a new SchemaFieldDataType RecordBuilder */
  public static com.linkedin.pegasus2avro.schema.SchemaFieldDataType.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.schema.SchemaFieldDataType.Builder();
  }
  
  /** Creates a new SchemaFieldDataType RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.schema.SchemaFieldDataType.Builder newBuilder(com.linkedin.pegasus2avro.schema.SchemaFieldDataType.Builder other) {
    return new com.linkedin.pegasus2avro.schema.SchemaFieldDataType.Builder(other);
  }
  
  /** Creates a new SchemaFieldDataType RecordBuilder by copying an existing SchemaFieldDataType instance */
  public static com.linkedin.pegasus2avro.schema.SchemaFieldDataType.Builder newBuilder(com.linkedin.pegasus2avro.schema.SchemaFieldDataType other) {
    return new com.linkedin.pegasus2avro.schema.SchemaFieldDataType.Builder(other);
  }
  
  /**
   * RecordBuilder for SchemaFieldDataType instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SchemaFieldDataType>
    implements org.apache.avro.data.RecordBuilder<SchemaFieldDataType> {

    private java.lang.Object type;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.schema.SchemaFieldDataType.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.schema.SchemaFieldDataType.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing SchemaFieldDataType instance */
    private Builder(com.linkedin.pegasus2avro.schema.SchemaFieldDataType other) {
            super(com.linkedin.pegasus2avro.schema.SchemaFieldDataType.SCHEMA$);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'type' field */
    public java.lang.Object getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public com.linkedin.pegasus2avro.schema.SchemaFieldDataType.Builder setType(java.lang.Object value) {
      validate(fields()[0], value);
      this.type = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'type' field */
    public com.linkedin.pegasus2avro.schema.SchemaFieldDataType.Builder clearType() {
      type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public SchemaFieldDataType build() {
      try {
        SchemaFieldDataType record = new SchemaFieldDataType();
        record.type = fieldSetFlags()[0] ? this.type : (java.lang.Object) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
