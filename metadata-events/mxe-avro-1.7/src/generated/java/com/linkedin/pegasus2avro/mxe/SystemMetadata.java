/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.mxe;  
@SuppressWarnings("all")
/** Metadata associated with each metadata change that is processed by the system */
@org.apache.avro.specific.AvroGenerated
public class SystemMetadata extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SystemMetadata\",\"namespace\":\"com.linkedin.pegasus2avro.mxe\",\"doc\":\"Metadata associated with each metadata change that is processed by the system\",\"fields\":[{\"name\":\"lastObserved\",\"type\":[\"long\",\"null\"],\"doc\":\"The timestamp the metadata was observed at\",\"default\":0},{\"name\":\"runId\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"doc\":\"The run id that produced the metadata. Populated in case of batch-ingestion.\",\"default\":\"no-run-id-provided\"},{\"name\":\"pipelineName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The ingestion pipeline id that produced the metadata. Populated in case of batch ingestion.\",\"default\":null},{\"name\":\"registryName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The model registry name that was used to process this event\",\"default\":null},{\"name\":\"registryVersion\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The model registry version that was used to process this event\",\"default\":null},{\"name\":\"properties\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}],\"doc\":\"Additional properties\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The timestamp the metadata was observed at */
  @Deprecated public java.lang.Long lastObserved;
  /** The run id that produced the metadata. Populated in case of batch-ingestion. */
  @Deprecated public java.lang.String runId;
  /** The ingestion pipeline id that produced the metadata. Populated in case of batch ingestion. */
  @Deprecated public java.lang.String pipelineName;
  /** The model registry name that was used to process this event */
  @Deprecated public java.lang.String registryName;
  /** The model registry version that was used to process this event */
  @Deprecated public java.lang.String registryVersion;
  /** Additional properties */
  @Deprecated public java.util.Map<java.lang.String,java.lang.String> properties;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public SystemMetadata() {}

  /**
   * All-args constructor.
   */
  public SystemMetadata(java.lang.Long lastObserved, java.lang.String runId, java.lang.String pipelineName, java.lang.String registryName, java.lang.String registryVersion, java.util.Map<java.lang.String,java.lang.String> properties) {
    this.lastObserved = lastObserved;
    this.runId = runId;
    this.pipelineName = pipelineName;
    this.registryName = registryName;
    this.registryVersion = registryVersion;
    this.properties = properties;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return lastObserved;
    case 1: return runId;
    case 2: return pipelineName;
    case 3: return registryName;
    case 4: return registryVersion;
    case 5: return properties;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: lastObserved = (java.lang.Long)value$; break;
    case 1: runId = (java.lang.String)value$; break;
    case 2: pipelineName = (java.lang.String)value$; break;
    case 3: registryName = (java.lang.String)value$; break;
    case 4: registryVersion = (java.lang.String)value$; break;
    case 5: properties = (java.util.Map<java.lang.String,java.lang.String>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'lastObserved' field.
   * The timestamp the metadata was observed at   */
  public java.lang.Long getLastObserved() {
    return lastObserved;
  }

  /**
   * Sets the value of the 'lastObserved' field.
   * The timestamp the metadata was observed at   * @param value the value to set.
   */
  public void setLastObserved(java.lang.Long value) {
    this.lastObserved = value;
  }

  /**
   * Gets the value of the 'runId' field.
   * The run id that produced the metadata. Populated in case of batch-ingestion.   */
  public java.lang.String getRunId() {
    return runId;
  }

  /**
   * Sets the value of the 'runId' field.
   * The run id that produced the metadata. Populated in case of batch-ingestion.   * @param value the value to set.
   */
  public void setRunId(java.lang.String value) {
    this.runId = value;
  }

  /**
   * Gets the value of the 'pipelineName' field.
   * The ingestion pipeline id that produced the metadata. Populated in case of batch ingestion.   */
  public java.lang.String getPipelineName() {
    return pipelineName;
  }

  /**
   * Sets the value of the 'pipelineName' field.
   * The ingestion pipeline id that produced the metadata. Populated in case of batch ingestion.   * @param value the value to set.
   */
  public void setPipelineName(java.lang.String value) {
    this.pipelineName = value;
  }

  /**
   * Gets the value of the 'registryName' field.
   * The model registry name that was used to process this event   */
  public java.lang.String getRegistryName() {
    return registryName;
  }

  /**
   * Sets the value of the 'registryName' field.
   * The model registry name that was used to process this event   * @param value the value to set.
   */
  public void setRegistryName(java.lang.String value) {
    this.registryName = value;
  }

  /**
   * Gets the value of the 'registryVersion' field.
   * The model registry version that was used to process this event   */
  public java.lang.String getRegistryVersion() {
    return registryVersion;
  }

  /**
   * Sets the value of the 'registryVersion' field.
   * The model registry version that was used to process this event   * @param value the value to set.
   */
  public void setRegistryVersion(java.lang.String value) {
    this.registryVersion = value;
  }

  /**
   * Gets the value of the 'properties' field.
   * Additional properties   */
  public java.util.Map<java.lang.String,java.lang.String> getProperties() {
    return properties;
  }

  /**
   * Sets the value of the 'properties' field.
   * Additional properties   * @param value the value to set.
   */
  public void setProperties(java.util.Map<java.lang.String,java.lang.String> value) {
    this.properties = value;
  }

  /** Creates a new SystemMetadata RecordBuilder */
  public static com.linkedin.pegasus2avro.mxe.SystemMetadata.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.mxe.SystemMetadata.Builder();
  }
  
  /** Creates a new SystemMetadata RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.mxe.SystemMetadata.Builder newBuilder(com.linkedin.pegasus2avro.mxe.SystemMetadata.Builder other) {
    return new com.linkedin.pegasus2avro.mxe.SystemMetadata.Builder(other);
  }
  
  /** Creates a new SystemMetadata RecordBuilder by copying an existing SystemMetadata instance */
  public static com.linkedin.pegasus2avro.mxe.SystemMetadata.Builder newBuilder(com.linkedin.pegasus2avro.mxe.SystemMetadata other) {
    return new com.linkedin.pegasus2avro.mxe.SystemMetadata.Builder(other);
  }
  
  /**
   * RecordBuilder for SystemMetadata instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SystemMetadata>
    implements org.apache.avro.data.RecordBuilder<SystemMetadata> {

    private java.lang.Long lastObserved;
    private java.lang.String runId;
    private java.lang.String pipelineName;
    private java.lang.String registryName;
    private java.lang.String registryVersion;
    private java.util.Map<java.lang.String,java.lang.String> properties;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.mxe.SystemMetadata.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.mxe.SystemMetadata.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.lastObserved)) {
        this.lastObserved = data().deepCopy(fields()[0].schema(), other.lastObserved);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.runId)) {
        this.runId = data().deepCopy(fields()[1].schema(), other.runId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.pipelineName)) {
        this.pipelineName = data().deepCopy(fields()[2].schema(), other.pipelineName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.registryName)) {
        this.registryName = data().deepCopy(fields()[3].schema(), other.registryName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.registryVersion)) {
        this.registryVersion = data().deepCopy(fields()[4].schema(), other.registryVersion);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.properties)) {
        this.properties = data().deepCopy(fields()[5].schema(), other.properties);
        fieldSetFlags()[5] = true;
      }
    }
    
    /** Creates a Builder by copying an existing SystemMetadata instance */
    private Builder(com.linkedin.pegasus2avro.mxe.SystemMetadata other) {
            super(com.linkedin.pegasus2avro.mxe.SystemMetadata.SCHEMA$);
      if (isValidValue(fields()[0], other.lastObserved)) {
        this.lastObserved = data().deepCopy(fields()[0].schema(), other.lastObserved);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.runId)) {
        this.runId = data().deepCopy(fields()[1].schema(), other.runId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.pipelineName)) {
        this.pipelineName = data().deepCopy(fields()[2].schema(), other.pipelineName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.registryName)) {
        this.registryName = data().deepCopy(fields()[3].schema(), other.registryName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.registryVersion)) {
        this.registryVersion = data().deepCopy(fields()[4].schema(), other.registryVersion);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.properties)) {
        this.properties = data().deepCopy(fields()[5].schema(), other.properties);
        fieldSetFlags()[5] = true;
      }
    }

    /** Gets the value of the 'lastObserved' field */
    public java.lang.Long getLastObserved() {
      return lastObserved;
    }
    
    /** Sets the value of the 'lastObserved' field */
    public com.linkedin.pegasus2avro.mxe.SystemMetadata.Builder setLastObserved(java.lang.Long value) {
      validate(fields()[0], value);
      this.lastObserved = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'lastObserved' field has been set */
    public boolean hasLastObserved() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'lastObserved' field */
    public com.linkedin.pegasus2avro.mxe.SystemMetadata.Builder clearLastObserved() {
      lastObserved = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'runId' field */
    public java.lang.String getRunId() {
      return runId;
    }
    
    /** Sets the value of the 'runId' field */
    public com.linkedin.pegasus2avro.mxe.SystemMetadata.Builder setRunId(java.lang.String value) {
      validate(fields()[1], value);
      this.runId = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'runId' field has been set */
    public boolean hasRunId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'runId' field */
    public com.linkedin.pegasus2avro.mxe.SystemMetadata.Builder clearRunId() {
      runId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'pipelineName' field */
    public java.lang.String getPipelineName() {
      return pipelineName;
    }
    
    /** Sets the value of the 'pipelineName' field */
    public com.linkedin.pegasus2avro.mxe.SystemMetadata.Builder setPipelineName(java.lang.String value) {
      validate(fields()[2], value);
      this.pipelineName = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'pipelineName' field has been set */
    public boolean hasPipelineName() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'pipelineName' field */
    public com.linkedin.pegasus2avro.mxe.SystemMetadata.Builder clearPipelineName() {
      pipelineName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'registryName' field */
    public java.lang.String getRegistryName() {
      return registryName;
    }
    
    /** Sets the value of the 'registryName' field */
    public com.linkedin.pegasus2avro.mxe.SystemMetadata.Builder setRegistryName(java.lang.String value) {
      validate(fields()[3], value);
      this.registryName = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'registryName' field has been set */
    public boolean hasRegistryName() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'registryName' field */
    public com.linkedin.pegasus2avro.mxe.SystemMetadata.Builder clearRegistryName() {
      registryName = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'registryVersion' field */
    public java.lang.String getRegistryVersion() {
      return registryVersion;
    }
    
    /** Sets the value of the 'registryVersion' field */
    public com.linkedin.pegasus2avro.mxe.SystemMetadata.Builder setRegistryVersion(java.lang.String value) {
      validate(fields()[4], value);
      this.registryVersion = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'registryVersion' field has been set */
    public boolean hasRegistryVersion() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'registryVersion' field */
    public com.linkedin.pegasus2avro.mxe.SystemMetadata.Builder clearRegistryVersion() {
      registryVersion = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'properties' field */
    public java.util.Map<java.lang.String,java.lang.String> getProperties() {
      return properties;
    }
    
    /** Sets the value of the 'properties' field */
    public com.linkedin.pegasus2avro.mxe.SystemMetadata.Builder setProperties(java.util.Map<java.lang.String,java.lang.String> value) {
      validate(fields()[5], value);
      this.properties = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'properties' field has been set */
    public boolean hasProperties() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'properties' field */
    public com.linkedin.pegasus2avro.mxe.SystemMetadata.Builder clearProperties() {
      properties = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public SystemMetadata build() {
      try {
        SystemMetadata record = new SystemMetadata();
        record.lastObserved = fieldSetFlags()[0] ? this.lastObserved : (java.lang.Long) defaultValue(fields()[0]);
        record.runId = fieldSetFlags()[1] ? this.runId : (java.lang.String) defaultValue(fields()[1]);
        record.pipelineName = fieldSetFlags()[2] ? this.pipelineName : (java.lang.String) defaultValue(fields()[2]);
        record.registryName = fieldSetFlags()[3] ? this.registryName : (java.lang.String) defaultValue(fields()[3]);
        record.registryVersion = fieldSetFlags()[4] ? this.registryVersion : (java.lang.String) defaultValue(fields()[4]);
        record.properties = fieldSetFlags()[5] ? this.properties : (java.util.Map<java.lang.String,java.lang.String>) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
