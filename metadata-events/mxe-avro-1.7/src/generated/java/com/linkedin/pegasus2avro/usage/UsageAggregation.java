/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.usage;  
@SuppressWarnings("all")
/** Usage data for a given resource, rolled up into a bucket. */
@org.apache.avro.specific.AvroGenerated
public class UsageAggregation extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UsageAggregation\",\"namespace\":\"com.linkedin.pegasus2avro.usage\",\"doc\":\"Usage data for a given resource, rolled up into a bucket.\",\"fields\":[{\"name\":\"bucket\",\"type\":\"long\",\"doc\":\" Bucket start time in milliseconds \"},{\"name\":\"duration\",\"type\":{\"type\":\"enum\",\"name\":\"WindowDuration\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"Enum to define the length of a bucket when doing aggregations\",\"symbols\":[\"YEAR\",\"MONTH\",\"WEEK\",\"DAY\",\"HOUR\"]},\"doc\":\" Bucket duration \"},{\"name\":\"resource\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\" Resource associated with these usage stats \",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"metrics\",\"type\":{\"type\":\"record\",\"name\":\"UsageAggregationMetrics\",\"doc\":\"Metrics for usage data for a given resource and bucket. Not all fields\\nmake sense for all buckets, so every field is optional.\",\"fields\":[{\"name\":\"uniqueUserCount\",\"type\":[\"null\",\"int\"],\"doc\":\" Unique user count \",\"default\":null},{\"name\":\"users\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"UserUsageCounts\",\"doc\":\" Records a single user's usage counts for a given resource \",\"fields\":[{\"name\":\"user\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null,\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"userEmail\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\" If user_email is set, we attempt to resolve the user's urn upon ingest \",\"default\":null}]}}],\"doc\":\" Users within this bucket, with frequency counts \",\"default\":null},{\"name\":\"totalSqlQueries\",\"type\":[\"null\",\"int\"],\"doc\":\" Total SQL query count \",\"default\":null},{\"name\":\"topSqlQueries\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\" Frequent SQL queries; mostly makes sense for datasets in SQL databases \",\"default\":null},{\"name\":\"fields\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"FieldUsageCounts\",\"doc\":\" Records field-level usage counts for a given resource \",\"fields\":[{\"name\":\"fieldName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"count\",\"type\":\"int\"}]}}],\"doc\":\" Field-level usage stats \",\"default\":null}]},\"doc\":\" Metrics associated with this bucket \"}],\"deprecated\":\"Use DatasetUsageStatistics, or other UsageStatistics records, instead\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /**  Bucket start time in milliseconds  */
  @Deprecated public long bucket;
  /**  Bucket duration  */
  @Deprecated public com.linkedin.pegasus2avro.common.WindowDuration duration;
  /**  Resource associated with these usage stats  */
  @Deprecated public java.lang.String resource;
  /**  Metrics associated with this bucket  */
  @Deprecated public com.linkedin.pegasus2avro.usage.UsageAggregationMetrics metrics;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public UsageAggregation() {}

  /**
   * All-args constructor.
   */
  public UsageAggregation(java.lang.Long bucket, com.linkedin.pegasus2avro.common.WindowDuration duration, java.lang.String resource, com.linkedin.pegasus2avro.usage.UsageAggregationMetrics metrics) {
    this.bucket = bucket;
    this.duration = duration;
    this.resource = resource;
    this.metrics = metrics;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return bucket;
    case 1: return duration;
    case 2: return resource;
    case 3: return metrics;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: bucket = (java.lang.Long)value$; break;
    case 1: duration = (com.linkedin.pegasus2avro.common.WindowDuration)value$; break;
    case 2: resource = (java.lang.String)value$; break;
    case 3: metrics = (com.linkedin.pegasus2avro.usage.UsageAggregationMetrics)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'bucket' field.
   *  Bucket start time in milliseconds    */
  public java.lang.Long getBucket() {
    return bucket;
  }

  /**
   * Sets the value of the 'bucket' field.
   *  Bucket start time in milliseconds    * @param value the value to set.
   */
  public void setBucket(java.lang.Long value) {
    this.bucket = value;
  }

  /**
   * Gets the value of the 'duration' field.
   *  Bucket duration    */
  public com.linkedin.pegasus2avro.common.WindowDuration getDuration() {
    return duration;
  }

  /**
   * Sets the value of the 'duration' field.
   *  Bucket duration    * @param value the value to set.
   */
  public void setDuration(com.linkedin.pegasus2avro.common.WindowDuration value) {
    this.duration = value;
  }

  /**
   * Gets the value of the 'resource' field.
   *  Resource associated with these usage stats    */
  public java.lang.String getResource() {
    return resource;
  }

  /**
   * Sets the value of the 'resource' field.
   *  Resource associated with these usage stats    * @param value the value to set.
   */
  public void setResource(java.lang.String value) {
    this.resource = value;
  }

  /**
   * Gets the value of the 'metrics' field.
   *  Metrics associated with this bucket    */
  public com.linkedin.pegasus2avro.usage.UsageAggregationMetrics getMetrics() {
    return metrics;
  }

  /**
   * Sets the value of the 'metrics' field.
   *  Metrics associated with this bucket    * @param value the value to set.
   */
  public void setMetrics(com.linkedin.pegasus2avro.usage.UsageAggregationMetrics value) {
    this.metrics = value;
  }

  /** Creates a new UsageAggregation RecordBuilder */
  public static com.linkedin.pegasus2avro.usage.UsageAggregation.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.usage.UsageAggregation.Builder();
  }
  
  /** Creates a new UsageAggregation RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.usage.UsageAggregation.Builder newBuilder(com.linkedin.pegasus2avro.usage.UsageAggregation.Builder other) {
    return new com.linkedin.pegasus2avro.usage.UsageAggregation.Builder(other);
  }
  
  /** Creates a new UsageAggregation RecordBuilder by copying an existing UsageAggregation instance */
  public static com.linkedin.pegasus2avro.usage.UsageAggregation.Builder newBuilder(com.linkedin.pegasus2avro.usage.UsageAggregation other) {
    return new com.linkedin.pegasus2avro.usage.UsageAggregation.Builder(other);
  }
  
  /**
   * RecordBuilder for UsageAggregation instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UsageAggregation>
    implements org.apache.avro.data.RecordBuilder<UsageAggregation> {

    private long bucket;
    private com.linkedin.pegasus2avro.common.WindowDuration duration;
    private java.lang.String resource;
    private com.linkedin.pegasus2avro.usage.UsageAggregationMetrics metrics;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.usage.UsageAggregation.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.usage.UsageAggregation.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.bucket)) {
        this.bucket = data().deepCopy(fields()[0].schema(), other.bucket);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.duration)) {
        this.duration = data().deepCopy(fields()[1].schema(), other.duration);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.resource)) {
        this.resource = data().deepCopy(fields()[2].schema(), other.resource);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.metrics)) {
        this.metrics = data().deepCopy(fields()[3].schema(), other.metrics);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing UsageAggregation instance */
    private Builder(com.linkedin.pegasus2avro.usage.UsageAggregation other) {
            super(com.linkedin.pegasus2avro.usage.UsageAggregation.SCHEMA$);
      if (isValidValue(fields()[0], other.bucket)) {
        this.bucket = data().deepCopy(fields()[0].schema(), other.bucket);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.duration)) {
        this.duration = data().deepCopy(fields()[1].schema(), other.duration);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.resource)) {
        this.resource = data().deepCopy(fields()[2].schema(), other.resource);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.metrics)) {
        this.metrics = data().deepCopy(fields()[3].schema(), other.metrics);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'bucket' field */
    public java.lang.Long getBucket() {
      return bucket;
    }
    
    /** Sets the value of the 'bucket' field */
    public com.linkedin.pegasus2avro.usage.UsageAggregation.Builder setBucket(long value) {
      validate(fields()[0], value);
      this.bucket = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'bucket' field has been set */
    public boolean hasBucket() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'bucket' field */
    public com.linkedin.pegasus2avro.usage.UsageAggregation.Builder clearBucket() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'duration' field */
    public com.linkedin.pegasus2avro.common.WindowDuration getDuration() {
      return duration;
    }
    
    /** Sets the value of the 'duration' field */
    public com.linkedin.pegasus2avro.usage.UsageAggregation.Builder setDuration(com.linkedin.pegasus2avro.common.WindowDuration value) {
      validate(fields()[1], value);
      this.duration = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'duration' field has been set */
    public boolean hasDuration() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'duration' field */
    public com.linkedin.pegasus2avro.usage.UsageAggregation.Builder clearDuration() {
      duration = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'resource' field */
    public java.lang.String getResource() {
      return resource;
    }
    
    /** Sets the value of the 'resource' field */
    public com.linkedin.pegasus2avro.usage.UsageAggregation.Builder setResource(java.lang.String value) {
      validate(fields()[2], value);
      this.resource = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'resource' field has been set */
    public boolean hasResource() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'resource' field */
    public com.linkedin.pegasus2avro.usage.UsageAggregation.Builder clearResource() {
      resource = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'metrics' field */
    public com.linkedin.pegasus2avro.usage.UsageAggregationMetrics getMetrics() {
      return metrics;
    }
    
    /** Sets the value of the 'metrics' field */
    public com.linkedin.pegasus2avro.usage.UsageAggregation.Builder setMetrics(com.linkedin.pegasus2avro.usage.UsageAggregationMetrics value) {
      validate(fields()[3], value);
      this.metrics = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'metrics' field has been set */
    public boolean hasMetrics() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'metrics' field */
    public com.linkedin.pegasus2avro.usage.UsageAggregation.Builder clearMetrics() {
      metrics = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public UsageAggregation build() {
      try {
        UsageAggregation record = new UsageAggregation();
        record.bucket = fieldSetFlags()[0] ? this.bucket : (java.lang.Long) defaultValue(fields()[0]);
        record.duration = fieldSetFlags()[1] ? this.duration : (com.linkedin.pegasus2avro.common.WindowDuration) defaultValue(fields()[1]);
        record.resource = fieldSetFlags()[2] ? this.resource : (java.lang.String) defaultValue(fields()[2]);
        record.metrics = fieldSetFlags()[3] ? this.metrics : (com.linkedin.pegasus2avro.usage.UsageAggregationMetrics) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
