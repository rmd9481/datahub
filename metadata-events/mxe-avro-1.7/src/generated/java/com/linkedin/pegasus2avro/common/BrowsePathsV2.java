/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.common;  
@SuppressWarnings("all")
/** Shared aspect containing a Browse Path to be indexed for an entity. */
@org.apache.avro.specific.AvroGenerated
public class BrowsePathsV2 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BrowsePathsV2\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"Shared aspect containing a Browse Path to be indexed for an entity.\",\"fields\":[{\"name\":\"path\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"BrowsePathEntry\",\"doc\":\"Represents a single level in an entity's browsePathV2\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The ID of the browse path entry. This is what gets stored in the index.\\nIf there's an urn associated with this entry, id and urn will be the same\"},{\"name\":\"urn\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Optional urn pointing to some entity in DataHub\",\"default\":null,\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}}]}},\"doc\":\"A valid browse path for the entity. This field is provided by DataHub by default.\\nThis aspect is a newer version of browsePaths where we can encode more information in the path.\\nThis path is also based on containers for a given entity if it has containers.\\n\\nThis is stored in elasticsearch as unit-separator delimited strings and only includes platform specific folders or containers.\\nThese paths should not include high level info captured elsewhere ie. Platform and Environment.\",\"Searchable\":{\"/*/id\":{\"fieldName\":\"browsePathV2\",\"fieldType\":\"BROWSE_PATH_V2\"}}}],\"Aspect\":{\"name\":\"browsePathsV2\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** A valid browse path for the entity. This field is provided by DataHub by default.
This aspect is a newer version of browsePaths where we can encode more information in the path.
This path is also based on containers for a given entity if it has containers.

This is stored in elasticsearch as unit-separator delimited strings and only includes platform specific folders or containers.
These paths should not include high level info captured elsewhere ie. Platform and Environment. */
  @Deprecated public java.util.List<com.linkedin.pegasus2avro.common.BrowsePathEntry> path;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public BrowsePathsV2() {}

  /**
   * All-args constructor.
   */
  public BrowsePathsV2(java.util.List<com.linkedin.pegasus2avro.common.BrowsePathEntry> path) {
    this.path = path;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return path;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: path = (java.util.List<com.linkedin.pegasus2avro.common.BrowsePathEntry>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'path' field.
   * A valid browse path for the entity. This field is provided by DataHub by default.
This aspect is a newer version of browsePaths where we can encode more information in the path.
This path is also based on containers for a given entity if it has containers.

This is stored in elasticsearch as unit-separator delimited strings and only includes platform specific folders or containers.
These paths should not include high level info captured elsewhere ie. Platform and Environment.   */
  public java.util.List<com.linkedin.pegasus2avro.common.BrowsePathEntry> getPath() {
    return path;
  }

  /**
   * Sets the value of the 'path' field.
   * A valid browse path for the entity. This field is provided by DataHub by default.
This aspect is a newer version of browsePaths where we can encode more information in the path.
This path is also based on containers for a given entity if it has containers.

This is stored in elasticsearch as unit-separator delimited strings and only includes platform specific folders or containers.
These paths should not include high level info captured elsewhere ie. Platform and Environment.   * @param value the value to set.
   */
  public void setPath(java.util.List<com.linkedin.pegasus2avro.common.BrowsePathEntry> value) {
    this.path = value;
  }

  /** Creates a new BrowsePathsV2 RecordBuilder */
  public static com.linkedin.pegasus2avro.common.BrowsePathsV2.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.common.BrowsePathsV2.Builder();
  }
  
  /** Creates a new BrowsePathsV2 RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.common.BrowsePathsV2.Builder newBuilder(com.linkedin.pegasus2avro.common.BrowsePathsV2.Builder other) {
    return new com.linkedin.pegasus2avro.common.BrowsePathsV2.Builder(other);
  }
  
  /** Creates a new BrowsePathsV2 RecordBuilder by copying an existing BrowsePathsV2 instance */
  public static com.linkedin.pegasus2avro.common.BrowsePathsV2.Builder newBuilder(com.linkedin.pegasus2avro.common.BrowsePathsV2 other) {
    return new com.linkedin.pegasus2avro.common.BrowsePathsV2.Builder(other);
  }
  
  /**
   * RecordBuilder for BrowsePathsV2 instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BrowsePathsV2>
    implements org.apache.avro.data.RecordBuilder<BrowsePathsV2> {

    private java.util.List<com.linkedin.pegasus2avro.common.BrowsePathEntry> path;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.common.BrowsePathsV2.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.common.BrowsePathsV2.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.path)) {
        this.path = data().deepCopy(fields()[0].schema(), other.path);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing BrowsePathsV2 instance */
    private Builder(com.linkedin.pegasus2avro.common.BrowsePathsV2 other) {
            super(com.linkedin.pegasus2avro.common.BrowsePathsV2.SCHEMA$);
      if (isValidValue(fields()[0], other.path)) {
        this.path = data().deepCopy(fields()[0].schema(), other.path);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'path' field */
    public java.util.List<com.linkedin.pegasus2avro.common.BrowsePathEntry> getPath() {
      return path;
    }
    
    /** Sets the value of the 'path' field */
    public com.linkedin.pegasus2avro.common.BrowsePathsV2.Builder setPath(java.util.List<com.linkedin.pegasus2avro.common.BrowsePathEntry> value) {
      validate(fields()[0], value);
      this.path = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'path' field has been set */
    public boolean hasPath() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'path' field */
    public com.linkedin.pegasus2avro.common.BrowsePathsV2.Builder clearPath() {
      path = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public BrowsePathsV2 build() {
      try {
        BrowsePathsV2 record = new BrowsePathsV2();
        record.path = fieldSetFlags()[0] ? this.path : (java.util.List<com.linkedin.pegasus2avro.common.BrowsePathEntry>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
