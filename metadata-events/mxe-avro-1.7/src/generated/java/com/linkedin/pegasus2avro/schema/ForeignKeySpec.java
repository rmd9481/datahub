/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.schema;  
@SuppressWarnings("all")
/** Description of a foreign key in a schema. */
@org.apache.avro.specific.AvroGenerated
public class ForeignKeySpec extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ForeignKeySpec\",\"namespace\":\"com.linkedin.pegasus2avro.schema\",\"doc\":\"Description of a foreign key in a schema.\",\"fields\":[{\"name\":\"foreignKey\",\"type\":[{\"type\":\"record\",\"name\":\"DatasetFieldForeignKey\",\"doc\":\"For non-urn based foregin keys.\",\"fields\":[{\"name\":\"parentDataset\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"dataset that stores the resource.\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.DatasetUrn\"}},{\"name\":\"currentFieldPaths\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"doc\":\"List of fields in hosting(current) SchemaMetadata that conform a foreign key. List can contain a single entry or multiple entries if several entries in hosting schema conform a foreign key in a single parent dataset.\"},{\"name\":\"parentField\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"SchemaField@fieldPath that uniquely identify field in parent dataset that this field references.\"}]},{\"type\":\"record\",\"name\":\"UrnForeignKey\",\"doc\":\"If SchemaMetadata fields make any external references and references are of type com.linkedin.pegasus2avro.common.Urn or any children, this models can be used to mark it.\",\"fields\":[{\"name\":\"currentFieldPath\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Field in hosting(current) SchemaMetadata.\"}]}],\"doc\":\"Foreign key definition in metadata schema.\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Foreign key definition in metadata schema. */
  @Deprecated public java.lang.Object foreignKey;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ForeignKeySpec() {}

  /**
   * All-args constructor.
   */
  public ForeignKeySpec(java.lang.Object foreignKey) {
    this.foreignKey = foreignKey;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return foreignKey;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: foreignKey = (java.lang.Object)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'foreignKey' field.
   * Foreign key definition in metadata schema.   */
  public java.lang.Object getForeignKey() {
    return foreignKey;
  }

  /**
   * Sets the value of the 'foreignKey' field.
   * Foreign key definition in metadata schema.   * @param value the value to set.
   */
  public void setForeignKey(java.lang.Object value) {
    this.foreignKey = value;
  }

  /** Creates a new ForeignKeySpec RecordBuilder */
  public static com.linkedin.pegasus2avro.schema.ForeignKeySpec.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.schema.ForeignKeySpec.Builder();
  }
  
  /** Creates a new ForeignKeySpec RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.schema.ForeignKeySpec.Builder newBuilder(com.linkedin.pegasus2avro.schema.ForeignKeySpec.Builder other) {
    return new com.linkedin.pegasus2avro.schema.ForeignKeySpec.Builder(other);
  }
  
  /** Creates a new ForeignKeySpec RecordBuilder by copying an existing ForeignKeySpec instance */
  public static com.linkedin.pegasus2avro.schema.ForeignKeySpec.Builder newBuilder(com.linkedin.pegasus2avro.schema.ForeignKeySpec other) {
    return new com.linkedin.pegasus2avro.schema.ForeignKeySpec.Builder(other);
  }
  
  /**
   * RecordBuilder for ForeignKeySpec instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ForeignKeySpec>
    implements org.apache.avro.data.RecordBuilder<ForeignKeySpec> {

    private java.lang.Object foreignKey;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.schema.ForeignKeySpec.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.schema.ForeignKeySpec.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.foreignKey)) {
        this.foreignKey = data().deepCopy(fields()[0].schema(), other.foreignKey);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ForeignKeySpec instance */
    private Builder(com.linkedin.pegasus2avro.schema.ForeignKeySpec other) {
            super(com.linkedin.pegasus2avro.schema.ForeignKeySpec.SCHEMA$);
      if (isValidValue(fields()[0], other.foreignKey)) {
        this.foreignKey = data().deepCopy(fields()[0].schema(), other.foreignKey);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'foreignKey' field */
    public java.lang.Object getForeignKey() {
      return foreignKey;
    }
    
    /** Sets the value of the 'foreignKey' field */
    public com.linkedin.pegasus2avro.schema.ForeignKeySpec.Builder setForeignKey(java.lang.Object value) {
      validate(fields()[0], value);
      this.foreignKey = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'foreignKey' field has been set */
    public boolean hasForeignKey() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'foreignKey' field */
    public com.linkedin.pegasus2avro.schema.ForeignKeySpec.Builder clearForeignKey() {
      foreignKey = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public ForeignKeySpec build() {
      try {
        ForeignKeySpec record = new ForeignKeySpec();
        record.foreignKey = fieldSetFlags()[0] ? this.foreignKey : (java.lang.Object) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
