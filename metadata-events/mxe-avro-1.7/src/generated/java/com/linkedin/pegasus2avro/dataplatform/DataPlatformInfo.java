/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.dataplatform;  
@SuppressWarnings("all")
/** Information about a data platform */
@org.apache.avro.specific.AvroGenerated
public class DataPlatformInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DataPlatformInfo\",\"namespace\":\"com.linkedin.pegasus2avro.dataplatform\",\"doc\":\"Information about a data platform\",\"fields\":[{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Name of the data platform\",\"Searchable\":{\"boostScore\":10.0,\"enableAutocomplete\":false,\"fieldNameAliases\":[\"_entityName\"],\"fieldType\":\"WORD_GRAM\"},\"validate\":{\"strlen\":{\"max\":15}}},{\"name\":\"displayName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The name that will be used for displaying a platform type.\",\"default\":null,\"Searchable\":{\"boostScore\":10.0,\"enableAutocomplete\":true,\"fieldType\":\"WORD_GRAM\"}},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"PlatformType\",\"doc\":\"Platform types available at LinkedIn\",\"symbols\":[\"FILE_SYSTEM\",\"KEY_VALUE_STORE\",\"MESSAGE_BROKER\",\"OBJECT_STORE\",\"OLAP_DATASTORE\",\"OTHERS\",\"QUERY_ENGINE\",\"RELATIONAL_DB\",\"SEARCH_ENGINE\"],\"symbolDocs\":{\"FILE_SYSTEM\":\"Value for a file system, e.g. hdfs\",\"KEY_VALUE_STORE\":\"Value for a key value store, e.g. espresso, voldemort\",\"MESSAGE_BROKER\":\"Value for a message broker, e.g. kafka\",\"OBJECT_STORE\":\"Value for an object store, e.g. ambry\",\"OLAP_DATASTORE\":\"Value for an OLAP datastore, e.g. pinot\",\"OTHERS\":\"Value for other platforms, e.g salesforce, dovetail\",\"QUERY_ENGINE\":\"Value for a query engine, e.g. presto\",\"RELATIONAL_DB\":\"Value for a relational database, e.g. oracle, mysql\",\"SEARCH_ENGINE\":\"Value for a search engine, e.g seas\"}},\"doc\":\"Platform type this data platform describes\"},{\"name\":\"datasetNameDelimiter\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The delimiter in the dataset names on the data platform, e.g. '/' for HDFS and '.' for Oracle\"},{\"name\":\"logoUrl\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The URL for a logo associated with the platform\",\"default\":null,\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.url.Url\",\"coercerClass\":\"com.linkedin.pegasus2avro.common.url.UrlCoercer\"}}],\"Aspect\":{\"name\":\"dataPlatformInfo\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Name of the data platform */
  @Deprecated public java.lang.String name;
  /** The name that will be used for displaying a platform type. */
  @Deprecated public java.lang.String displayName;
  /** Platform type this data platform describes */
  @Deprecated public com.linkedin.pegasus2avro.dataplatform.PlatformType type;
  /** The delimiter in the dataset names on the data platform, e.g. '/' for HDFS and '.' for Oracle */
  @Deprecated public java.lang.String datasetNameDelimiter;
  /** The URL for a logo associated with the platform */
  @Deprecated public java.lang.String logoUrl;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public DataPlatformInfo() {}

  /**
   * All-args constructor.
   */
  public DataPlatformInfo(java.lang.String name, java.lang.String displayName, com.linkedin.pegasus2avro.dataplatform.PlatformType type, java.lang.String datasetNameDelimiter, java.lang.String logoUrl) {
    this.name = name;
    this.displayName = displayName;
    this.type = type;
    this.datasetNameDelimiter = datasetNameDelimiter;
    this.logoUrl = logoUrl;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return displayName;
    case 2: return type;
    case 3: return datasetNameDelimiter;
    case 4: return logoUrl;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.String)value$; break;
    case 1: displayName = (java.lang.String)value$; break;
    case 2: type = (com.linkedin.pegasus2avro.dataplatform.PlatformType)value$; break;
    case 3: datasetNameDelimiter = (java.lang.String)value$; break;
    case 4: logoUrl = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   * Name of the data platform   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * Name of the data platform   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'displayName' field.
   * The name that will be used for displaying a platform type.   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Sets the value of the 'displayName' field.
   * The name that will be used for displaying a platform type.   * @param value the value to set.
   */
  public void setDisplayName(java.lang.String value) {
    this.displayName = value;
  }

  /**
   * Gets the value of the 'type' field.
   * Platform type this data platform describes   */
  public com.linkedin.pegasus2avro.dataplatform.PlatformType getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * Platform type this data platform describes   * @param value the value to set.
   */
  public void setType(com.linkedin.pegasus2avro.dataplatform.PlatformType value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'datasetNameDelimiter' field.
   * The delimiter in the dataset names on the data platform, e.g. '/' for HDFS and '.' for Oracle   */
  public java.lang.String getDatasetNameDelimiter() {
    return datasetNameDelimiter;
  }

  /**
   * Sets the value of the 'datasetNameDelimiter' field.
   * The delimiter in the dataset names on the data platform, e.g. '/' for HDFS and '.' for Oracle   * @param value the value to set.
   */
  public void setDatasetNameDelimiter(java.lang.String value) {
    this.datasetNameDelimiter = value;
  }

  /**
   * Gets the value of the 'logoUrl' field.
   * The URL for a logo associated with the platform   */
  public java.lang.String getLogoUrl() {
    return logoUrl;
  }

  /**
   * Sets the value of the 'logoUrl' field.
   * The URL for a logo associated with the platform   * @param value the value to set.
   */
  public void setLogoUrl(java.lang.String value) {
    this.logoUrl = value;
  }

  /** Creates a new DataPlatformInfo RecordBuilder */
  public static com.linkedin.pegasus2avro.dataplatform.DataPlatformInfo.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.dataplatform.DataPlatformInfo.Builder();
  }
  
  /** Creates a new DataPlatformInfo RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.dataplatform.DataPlatformInfo.Builder newBuilder(com.linkedin.pegasus2avro.dataplatform.DataPlatformInfo.Builder other) {
    return new com.linkedin.pegasus2avro.dataplatform.DataPlatformInfo.Builder(other);
  }
  
  /** Creates a new DataPlatformInfo RecordBuilder by copying an existing DataPlatformInfo instance */
  public static com.linkedin.pegasus2avro.dataplatform.DataPlatformInfo.Builder newBuilder(com.linkedin.pegasus2avro.dataplatform.DataPlatformInfo other) {
    return new com.linkedin.pegasus2avro.dataplatform.DataPlatformInfo.Builder(other);
  }
  
  /**
   * RecordBuilder for DataPlatformInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DataPlatformInfo>
    implements org.apache.avro.data.RecordBuilder<DataPlatformInfo> {

    private java.lang.String name;
    private java.lang.String displayName;
    private com.linkedin.pegasus2avro.dataplatform.PlatformType type;
    private java.lang.String datasetNameDelimiter;
    private java.lang.String logoUrl;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.dataplatform.DataPlatformInfo.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.dataplatform.DataPlatformInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.displayName)) {
        this.displayName = data().deepCopy(fields()[1].schema(), other.displayName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.datasetNameDelimiter)) {
        this.datasetNameDelimiter = data().deepCopy(fields()[3].schema(), other.datasetNameDelimiter);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.logoUrl)) {
        this.logoUrl = data().deepCopy(fields()[4].schema(), other.logoUrl);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing DataPlatformInfo instance */
    private Builder(com.linkedin.pegasus2avro.dataplatform.DataPlatformInfo other) {
            super(com.linkedin.pegasus2avro.dataplatform.DataPlatformInfo.SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.displayName)) {
        this.displayName = data().deepCopy(fields()[1].schema(), other.displayName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.datasetNameDelimiter)) {
        this.datasetNameDelimiter = data().deepCopy(fields()[3].schema(), other.datasetNameDelimiter);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.logoUrl)) {
        this.logoUrl = data().deepCopy(fields()[4].schema(), other.logoUrl);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'name' field */
    public java.lang.String getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public com.linkedin.pegasus2avro.dataplatform.DataPlatformInfo.Builder setName(java.lang.String value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'name' field */
    public com.linkedin.pegasus2avro.dataplatform.DataPlatformInfo.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'displayName' field */
    public java.lang.String getDisplayName() {
      return displayName;
    }
    
    /** Sets the value of the 'displayName' field */
    public com.linkedin.pegasus2avro.dataplatform.DataPlatformInfo.Builder setDisplayName(java.lang.String value) {
      validate(fields()[1], value);
      this.displayName = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'displayName' field has been set */
    public boolean hasDisplayName() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'displayName' field */
    public com.linkedin.pegasus2avro.dataplatform.DataPlatformInfo.Builder clearDisplayName() {
      displayName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'type' field */
    public com.linkedin.pegasus2avro.dataplatform.PlatformType getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public com.linkedin.pegasus2avro.dataplatform.DataPlatformInfo.Builder setType(com.linkedin.pegasus2avro.dataplatform.PlatformType value) {
      validate(fields()[2], value);
      this.type = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'type' field */
    public com.linkedin.pegasus2avro.dataplatform.DataPlatformInfo.Builder clearType() {
      type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'datasetNameDelimiter' field */
    public java.lang.String getDatasetNameDelimiter() {
      return datasetNameDelimiter;
    }
    
    /** Sets the value of the 'datasetNameDelimiter' field */
    public com.linkedin.pegasus2avro.dataplatform.DataPlatformInfo.Builder setDatasetNameDelimiter(java.lang.String value) {
      validate(fields()[3], value);
      this.datasetNameDelimiter = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'datasetNameDelimiter' field has been set */
    public boolean hasDatasetNameDelimiter() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'datasetNameDelimiter' field */
    public com.linkedin.pegasus2avro.dataplatform.DataPlatformInfo.Builder clearDatasetNameDelimiter() {
      datasetNameDelimiter = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'logoUrl' field */
    public java.lang.String getLogoUrl() {
      return logoUrl;
    }
    
    /** Sets the value of the 'logoUrl' field */
    public com.linkedin.pegasus2avro.dataplatform.DataPlatformInfo.Builder setLogoUrl(java.lang.String value) {
      validate(fields()[4], value);
      this.logoUrl = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'logoUrl' field has been set */
    public boolean hasLogoUrl() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'logoUrl' field */
    public com.linkedin.pegasus2avro.dataplatform.DataPlatformInfo.Builder clearLogoUrl() {
      logoUrl = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public DataPlatformInfo build() {
      try {
        DataPlatformInfo record = new DataPlatformInfo();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.String) defaultValue(fields()[0]);
        record.displayName = fieldSetFlags()[1] ? this.displayName : (java.lang.String) defaultValue(fields()[1]);
        record.type = fieldSetFlags()[2] ? this.type : (com.linkedin.pegasus2avro.dataplatform.PlatformType) defaultValue(fields()[2]);
        record.datasetNameDelimiter = fieldSetFlags()[3] ? this.datasetNameDelimiter : (java.lang.String) defaultValue(fields()[3]);
        record.logoUrl = fieldSetFlags()[4] ? this.logoUrl : (java.lang.String) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
