/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.policy;  
@SuppressWarnings("all")
/** Information used to filter DataHub actors. */
@org.apache.avro.specific.AvroGenerated
public class DataHubActorFilter extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DataHubActorFilter\",\"namespace\":\"com.linkedin.pegasus2avro.policy\",\"doc\":\"Information used to filter DataHub actors.\",\"fields\":[{\"name\":\"users\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"A specific set of users to apply the policy to (disjunctive)\",\"default\":null},{\"name\":\"groups\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"A specific set of groups to apply the policy to (disjunctive)\",\"default\":null},{\"name\":\"resourceOwners\",\"type\":\"boolean\",\"doc\":\"Whether the filter should return true for owners of a particular resource.\\nOnly applies to policies of type 'Metadata', which have a resource associated with them.\",\"default\":false},{\"name\":\"resourceOwnersTypes\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"Define type of ownership for the policy\",\"default\":null},{\"name\":\"allUsers\",\"type\":\"boolean\",\"doc\":\"Whether the filter should apply to all users.\",\"default\":false},{\"name\":\"allGroups\",\"type\":\"boolean\",\"doc\":\"Whether the filter should apply to all groups.\",\"default\":false},{\"name\":\"roles\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"A specific set of roles to apply the policy to (disjunctive).\",\"default\":null,\"Relationship\":{\"/*\":{\"entityTypes\":[\"dataHubRole\"],\"name\":\"IsAssociatedWithRole\"}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** A specific set of users to apply the policy to (disjunctive) */
  @Deprecated public java.util.List<java.lang.String> users;
  /** A specific set of groups to apply the policy to (disjunctive) */
  @Deprecated public java.util.List<java.lang.String> groups;
  /** Whether the filter should return true for owners of a particular resource.
Only applies to policies of type 'Metadata', which have a resource associated with them. */
  @Deprecated public boolean resourceOwners;
  /** Define type of ownership for the policy */
  @Deprecated public java.util.List<java.lang.String> resourceOwnersTypes;
  /** Whether the filter should apply to all users. */
  @Deprecated public boolean allUsers;
  /** Whether the filter should apply to all groups. */
  @Deprecated public boolean allGroups;
  /** A specific set of roles to apply the policy to (disjunctive). */
  @Deprecated public java.util.List<java.lang.String> roles;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public DataHubActorFilter() {}

  /**
   * All-args constructor.
   */
  public DataHubActorFilter(java.util.List<java.lang.String> users, java.util.List<java.lang.String> groups, java.lang.Boolean resourceOwners, java.util.List<java.lang.String> resourceOwnersTypes, java.lang.Boolean allUsers, java.lang.Boolean allGroups, java.util.List<java.lang.String> roles) {
    this.users = users;
    this.groups = groups;
    this.resourceOwners = resourceOwners;
    this.resourceOwnersTypes = resourceOwnersTypes;
    this.allUsers = allUsers;
    this.allGroups = allGroups;
    this.roles = roles;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return users;
    case 1: return groups;
    case 2: return resourceOwners;
    case 3: return resourceOwnersTypes;
    case 4: return allUsers;
    case 5: return allGroups;
    case 6: return roles;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: users = (java.util.List<java.lang.String>)value$; break;
    case 1: groups = (java.util.List<java.lang.String>)value$; break;
    case 2: resourceOwners = (java.lang.Boolean)value$; break;
    case 3: resourceOwnersTypes = (java.util.List<java.lang.String>)value$; break;
    case 4: allUsers = (java.lang.Boolean)value$; break;
    case 5: allGroups = (java.lang.Boolean)value$; break;
    case 6: roles = (java.util.List<java.lang.String>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'users' field.
   * A specific set of users to apply the policy to (disjunctive)   */
  public java.util.List<java.lang.String> getUsers() {
    return users;
  }

  /**
   * Sets the value of the 'users' field.
   * A specific set of users to apply the policy to (disjunctive)   * @param value the value to set.
   */
  public void setUsers(java.util.List<java.lang.String> value) {
    this.users = value;
  }

  /**
   * Gets the value of the 'groups' field.
   * A specific set of groups to apply the policy to (disjunctive)   */
  public java.util.List<java.lang.String> getGroups() {
    return groups;
  }

  /**
   * Sets the value of the 'groups' field.
   * A specific set of groups to apply the policy to (disjunctive)   * @param value the value to set.
   */
  public void setGroups(java.util.List<java.lang.String> value) {
    this.groups = value;
  }

  /**
   * Gets the value of the 'resourceOwners' field.
   * Whether the filter should return true for owners of a particular resource.
Only applies to policies of type 'Metadata', which have a resource associated with them.   */
  public java.lang.Boolean getResourceOwners() {
    return resourceOwners;
  }

  /**
   * Sets the value of the 'resourceOwners' field.
   * Whether the filter should return true for owners of a particular resource.
Only applies to policies of type 'Metadata', which have a resource associated with them.   * @param value the value to set.
   */
  public void setResourceOwners(java.lang.Boolean value) {
    this.resourceOwners = value;
  }

  /**
   * Gets the value of the 'resourceOwnersTypes' field.
   * Define type of ownership for the policy   */
  public java.util.List<java.lang.String> getResourceOwnersTypes() {
    return resourceOwnersTypes;
  }

  /**
   * Sets the value of the 'resourceOwnersTypes' field.
   * Define type of ownership for the policy   * @param value the value to set.
   */
  public void setResourceOwnersTypes(java.util.List<java.lang.String> value) {
    this.resourceOwnersTypes = value;
  }

  /**
   * Gets the value of the 'allUsers' field.
   * Whether the filter should apply to all users.   */
  public java.lang.Boolean getAllUsers() {
    return allUsers;
  }

  /**
   * Sets the value of the 'allUsers' field.
   * Whether the filter should apply to all users.   * @param value the value to set.
   */
  public void setAllUsers(java.lang.Boolean value) {
    this.allUsers = value;
  }

  /**
   * Gets the value of the 'allGroups' field.
   * Whether the filter should apply to all groups.   */
  public java.lang.Boolean getAllGroups() {
    return allGroups;
  }

  /**
   * Sets the value of the 'allGroups' field.
   * Whether the filter should apply to all groups.   * @param value the value to set.
   */
  public void setAllGroups(java.lang.Boolean value) {
    this.allGroups = value;
  }

  /**
   * Gets the value of the 'roles' field.
   * A specific set of roles to apply the policy to (disjunctive).   */
  public java.util.List<java.lang.String> getRoles() {
    return roles;
  }

  /**
   * Sets the value of the 'roles' field.
   * A specific set of roles to apply the policy to (disjunctive).   * @param value the value to set.
   */
  public void setRoles(java.util.List<java.lang.String> value) {
    this.roles = value;
  }

  /** Creates a new DataHubActorFilter RecordBuilder */
  public static com.linkedin.pegasus2avro.policy.DataHubActorFilter.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.policy.DataHubActorFilter.Builder();
  }
  
  /** Creates a new DataHubActorFilter RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.policy.DataHubActorFilter.Builder newBuilder(com.linkedin.pegasus2avro.policy.DataHubActorFilter.Builder other) {
    return new com.linkedin.pegasus2avro.policy.DataHubActorFilter.Builder(other);
  }
  
  /** Creates a new DataHubActorFilter RecordBuilder by copying an existing DataHubActorFilter instance */
  public static com.linkedin.pegasus2avro.policy.DataHubActorFilter.Builder newBuilder(com.linkedin.pegasus2avro.policy.DataHubActorFilter other) {
    return new com.linkedin.pegasus2avro.policy.DataHubActorFilter.Builder(other);
  }
  
  /**
   * RecordBuilder for DataHubActorFilter instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DataHubActorFilter>
    implements org.apache.avro.data.RecordBuilder<DataHubActorFilter> {

    private java.util.List<java.lang.String> users;
    private java.util.List<java.lang.String> groups;
    private boolean resourceOwners;
    private java.util.List<java.lang.String> resourceOwnersTypes;
    private boolean allUsers;
    private boolean allGroups;
    private java.util.List<java.lang.String> roles;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.policy.DataHubActorFilter.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.policy.DataHubActorFilter.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.users)) {
        this.users = data().deepCopy(fields()[0].schema(), other.users);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.groups)) {
        this.groups = data().deepCopy(fields()[1].schema(), other.groups);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.resourceOwners)) {
        this.resourceOwners = data().deepCopy(fields()[2].schema(), other.resourceOwners);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.resourceOwnersTypes)) {
        this.resourceOwnersTypes = data().deepCopy(fields()[3].schema(), other.resourceOwnersTypes);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.allUsers)) {
        this.allUsers = data().deepCopy(fields()[4].schema(), other.allUsers);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.allGroups)) {
        this.allGroups = data().deepCopy(fields()[5].schema(), other.allGroups);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.roles)) {
        this.roles = data().deepCopy(fields()[6].schema(), other.roles);
        fieldSetFlags()[6] = true;
      }
    }
    
    /** Creates a Builder by copying an existing DataHubActorFilter instance */
    private Builder(com.linkedin.pegasus2avro.policy.DataHubActorFilter other) {
            super(com.linkedin.pegasus2avro.policy.DataHubActorFilter.SCHEMA$);
      if (isValidValue(fields()[0], other.users)) {
        this.users = data().deepCopy(fields()[0].schema(), other.users);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.groups)) {
        this.groups = data().deepCopy(fields()[1].schema(), other.groups);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.resourceOwners)) {
        this.resourceOwners = data().deepCopy(fields()[2].schema(), other.resourceOwners);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.resourceOwnersTypes)) {
        this.resourceOwnersTypes = data().deepCopy(fields()[3].schema(), other.resourceOwnersTypes);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.allUsers)) {
        this.allUsers = data().deepCopy(fields()[4].schema(), other.allUsers);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.allGroups)) {
        this.allGroups = data().deepCopy(fields()[5].schema(), other.allGroups);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.roles)) {
        this.roles = data().deepCopy(fields()[6].schema(), other.roles);
        fieldSetFlags()[6] = true;
      }
    }

    /** Gets the value of the 'users' field */
    public java.util.List<java.lang.String> getUsers() {
      return users;
    }
    
    /** Sets the value of the 'users' field */
    public com.linkedin.pegasus2avro.policy.DataHubActorFilter.Builder setUsers(java.util.List<java.lang.String> value) {
      validate(fields()[0], value);
      this.users = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'users' field has been set */
    public boolean hasUsers() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'users' field */
    public com.linkedin.pegasus2avro.policy.DataHubActorFilter.Builder clearUsers() {
      users = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'groups' field */
    public java.util.List<java.lang.String> getGroups() {
      return groups;
    }
    
    /** Sets the value of the 'groups' field */
    public com.linkedin.pegasus2avro.policy.DataHubActorFilter.Builder setGroups(java.util.List<java.lang.String> value) {
      validate(fields()[1], value);
      this.groups = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'groups' field has been set */
    public boolean hasGroups() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'groups' field */
    public com.linkedin.pegasus2avro.policy.DataHubActorFilter.Builder clearGroups() {
      groups = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'resourceOwners' field */
    public java.lang.Boolean getResourceOwners() {
      return resourceOwners;
    }
    
    /** Sets the value of the 'resourceOwners' field */
    public com.linkedin.pegasus2avro.policy.DataHubActorFilter.Builder setResourceOwners(boolean value) {
      validate(fields()[2], value);
      this.resourceOwners = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'resourceOwners' field has been set */
    public boolean hasResourceOwners() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'resourceOwners' field */
    public com.linkedin.pegasus2avro.policy.DataHubActorFilter.Builder clearResourceOwners() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'resourceOwnersTypes' field */
    public java.util.List<java.lang.String> getResourceOwnersTypes() {
      return resourceOwnersTypes;
    }
    
    /** Sets the value of the 'resourceOwnersTypes' field */
    public com.linkedin.pegasus2avro.policy.DataHubActorFilter.Builder setResourceOwnersTypes(java.util.List<java.lang.String> value) {
      validate(fields()[3], value);
      this.resourceOwnersTypes = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'resourceOwnersTypes' field has been set */
    public boolean hasResourceOwnersTypes() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'resourceOwnersTypes' field */
    public com.linkedin.pegasus2avro.policy.DataHubActorFilter.Builder clearResourceOwnersTypes() {
      resourceOwnersTypes = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'allUsers' field */
    public java.lang.Boolean getAllUsers() {
      return allUsers;
    }
    
    /** Sets the value of the 'allUsers' field */
    public com.linkedin.pegasus2avro.policy.DataHubActorFilter.Builder setAllUsers(boolean value) {
      validate(fields()[4], value);
      this.allUsers = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'allUsers' field has been set */
    public boolean hasAllUsers() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'allUsers' field */
    public com.linkedin.pegasus2avro.policy.DataHubActorFilter.Builder clearAllUsers() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'allGroups' field */
    public java.lang.Boolean getAllGroups() {
      return allGroups;
    }
    
    /** Sets the value of the 'allGroups' field */
    public com.linkedin.pegasus2avro.policy.DataHubActorFilter.Builder setAllGroups(boolean value) {
      validate(fields()[5], value);
      this.allGroups = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'allGroups' field has been set */
    public boolean hasAllGroups() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'allGroups' field */
    public com.linkedin.pegasus2avro.policy.DataHubActorFilter.Builder clearAllGroups() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'roles' field */
    public java.util.List<java.lang.String> getRoles() {
      return roles;
    }
    
    /** Sets the value of the 'roles' field */
    public com.linkedin.pegasus2avro.policy.DataHubActorFilter.Builder setRoles(java.util.List<java.lang.String> value) {
      validate(fields()[6], value);
      this.roles = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'roles' field has been set */
    public boolean hasRoles() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'roles' field */
    public com.linkedin.pegasus2avro.policy.DataHubActorFilter.Builder clearRoles() {
      roles = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public DataHubActorFilter build() {
      try {
        DataHubActorFilter record = new DataHubActorFilter();
        record.users = fieldSetFlags()[0] ? this.users : (java.util.List<java.lang.String>) defaultValue(fields()[0]);
        record.groups = fieldSetFlags()[1] ? this.groups : (java.util.List<java.lang.String>) defaultValue(fields()[1]);
        record.resourceOwners = fieldSetFlags()[2] ? this.resourceOwners : (java.lang.Boolean) defaultValue(fields()[2]);
        record.resourceOwnersTypes = fieldSetFlags()[3] ? this.resourceOwnersTypes : (java.util.List<java.lang.String>) defaultValue(fields()[3]);
        record.allUsers = fieldSetFlags()[4] ? this.allUsers : (java.lang.Boolean) defaultValue(fields()[4]);
        record.allGroups = fieldSetFlags()[5] ? this.allGroups : (java.lang.Boolean) defaultValue(fields()[5]);
        record.roles = fieldSetFlags()[6] ? this.roles : (java.util.List<java.lang.String>) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
