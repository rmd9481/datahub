/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.metadata.query;  
@SuppressWarnings("all")
/** The model for the auto complete result */
@org.apache.avro.specific.AvroGenerated
public class AutoCompleteResult extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AutoCompleteResult\",\"namespace\":\"com.linkedin.pegasus2avro.metadata.query\",\"doc\":\"The model for the auto complete result\",\"fields\":[{\"name\":\"query\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The original chars typed by user\"},{\"name\":\"suggestions\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"doc\":\"A list of typeahead suggestions -- Just the text\"},{\"name\":\"entities\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AutoCompleteEntity\",\"doc\":\"Data model for an entity returned as an autocomplete suggestion\",\"fields\":[{\"name\":\"urn\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Urn of the entity\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}}]}},\"doc\":\"Specific entities to recommend\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The original chars typed by user */
  @Deprecated public java.lang.String query;
  /** A list of typeahead suggestions -- Just the text */
  @Deprecated public java.util.List<java.lang.String> suggestions;
  /** Specific entities to recommend */
  @Deprecated public java.util.List<com.linkedin.pegasus2avro.metadata.query.AutoCompleteEntity> entities;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public AutoCompleteResult() {}

  /**
   * All-args constructor.
   */
  public AutoCompleteResult(java.lang.String query, java.util.List<java.lang.String> suggestions, java.util.List<com.linkedin.pegasus2avro.metadata.query.AutoCompleteEntity> entities) {
    this.query = query;
    this.suggestions = suggestions;
    this.entities = entities;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return query;
    case 1: return suggestions;
    case 2: return entities;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: query = (java.lang.String)value$; break;
    case 1: suggestions = (java.util.List<java.lang.String>)value$; break;
    case 2: entities = (java.util.List<com.linkedin.pegasus2avro.metadata.query.AutoCompleteEntity>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'query' field.
   * The original chars typed by user   */
  public java.lang.String getQuery() {
    return query;
  }

  /**
   * Sets the value of the 'query' field.
   * The original chars typed by user   * @param value the value to set.
   */
  public void setQuery(java.lang.String value) {
    this.query = value;
  }

  /**
   * Gets the value of the 'suggestions' field.
   * A list of typeahead suggestions -- Just the text   */
  public java.util.List<java.lang.String> getSuggestions() {
    return suggestions;
  }

  /**
   * Sets the value of the 'suggestions' field.
   * A list of typeahead suggestions -- Just the text   * @param value the value to set.
   */
  public void setSuggestions(java.util.List<java.lang.String> value) {
    this.suggestions = value;
  }

  /**
   * Gets the value of the 'entities' field.
   * Specific entities to recommend   */
  public java.util.List<com.linkedin.pegasus2avro.metadata.query.AutoCompleteEntity> getEntities() {
    return entities;
  }

  /**
   * Sets the value of the 'entities' field.
   * Specific entities to recommend   * @param value the value to set.
   */
  public void setEntities(java.util.List<com.linkedin.pegasus2avro.metadata.query.AutoCompleteEntity> value) {
    this.entities = value;
  }

  /** Creates a new AutoCompleteResult RecordBuilder */
  public static com.linkedin.pegasus2avro.metadata.query.AutoCompleteResult.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.metadata.query.AutoCompleteResult.Builder();
  }
  
  /** Creates a new AutoCompleteResult RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.metadata.query.AutoCompleteResult.Builder newBuilder(com.linkedin.pegasus2avro.metadata.query.AutoCompleteResult.Builder other) {
    return new com.linkedin.pegasus2avro.metadata.query.AutoCompleteResult.Builder(other);
  }
  
  /** Creates a new AutoCompleteResult RecordBuilder by copying an existing AutoCompleteResult instance */
  public static com.linkedin.pegasus2avro.metadata.query.AutoCompleteResult.Builder newBuilder(com.linkedin.pegasus2avro.metadata.query.AutoCompleteResult other) {
    return new com.linkedin.pegasus2avro.metadata.query.AutoCompleteResult.Builder(other);
  }
  
  /**
   * RecordBuilder for AutoCompleteResult instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AutoCompleteResult>
    implements org.apache.avro.data.RecordBuilder<AutoCompleteResult> {

    private java.lang.String query;
    private java.util.List<java.lang.String> suggestions;
    private java.util.List<com.linkedin.pegasus2avro.metadata.query.AutoCompleteEntity> entities;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.metadata.query.AutoCompleteResult.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.metadata.query.AutoCompleteResult.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.query)) {
        this.query = data().deepCopy(fields()[0].schema(), other.query);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.suggestions)) {
        this.suggestions = data().deepCopy(fields()[1].schema(), other.suggestions);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.entities)) {
        this.entities = data().deepCopy(fields()[2].schema(), other.entities);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing AutoCompleteResult instance */
    private Builder(com.linkedin.pegasus2avro.metadata.query.AutoCompleteResult other) {
            super(com.linkedin.pegasus2avro.metadata.query.AutoCompleteResult.SCHEMA$);
      if (isValidValue(fields()[0], other.query)) {
        this.query = data().deepCopy(fields()[0].schema(), other.query);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.suggestions)) {
        this.suggestions = data().deepCopy(fields()[1].schema(), other.suggestions);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.entities)) {
        this.entities = data().deepCopy(fields()[2].schema(), other.entities);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'query' field */
    public java.lang.String getQuery() {
      return query;
    }
    
    /** Sets the value of the 'query' field */
    public com.linkedin.pegasus2avro.metadata.query.AutoCompleteResult.Builder setQuery(java.lang.String value) {
      validate(fields()[0], value);
      this.query = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'query' field has been set */
    public boolean hasQuery() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'query' field */
    public com.linkedin.pegasus2avro.metadata.query.AutoCompleteResult.Builder clearQuery() {
      query = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'suggestions' field */
    public java.util.List<java.lang.String> getSuggestions() {
      return suggestions;
    }
    
    /** Sets the value of the 'suggestions' field */
    public com.linkedin.pegasus2avro.metadata.query.AutoCompleteResult.Builder setSuggestions(java.util.List<java.lang.String> value) {
      validate(fields()[1], value);
      this.suggestions = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'suggestions' field has been set */
    public boolean hasSuggestions() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'suggestions' field */
    public com.linkedin.pegasus2avro.metadata.query.AutoCompleteResult.Builder clearSuggestions() {
      suggestions = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'entities' field */
    public java.util.List<com.linkedin.pegasus2avro.metadata.query.AutoCompleteEntity> getEntities() {
      return entities;
    }
    
    /** Sets the value of the 'entities' field */
    public com.linkedin.pegasus2avro.metadata.query.AutoCompleteResult.Builder setEntities(java.util.List<com.linkedin.pegasus2avro.metadata.query.AutoCompleteEntity> value) {
      validate(fields()[2], value);
      this.entities = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'entities' field has been set */
    public boolean hasEntities() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'entities' field */
    public com.linkedin.pegasus2avro.metadata.query.AutoCompleteResult.Builder clearEntities() {
      entities = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public AutoCompleteResult build() {
      try {
        AutoCompleteResult record = new AutoCompleteResult();
        record.query = fieldSetFlags()[0] ? this.query : (java.lang.String) defaultValue(fields()[0]);
        record.suggestions = fieldSetFlags()[1] ? this.suggestions : (java.util.List<java.lang.String>) defaultValue(fields()[1]);
        record.entities = fieldSetFlags()[2] ? this.entities : (java.util.List<com.linkedin.pegasus2avro.metadata.query.AutoCompleteEntity>) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
