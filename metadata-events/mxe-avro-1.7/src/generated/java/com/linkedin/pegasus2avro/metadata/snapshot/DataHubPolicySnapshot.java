/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.metadata.snapshot;  
@SuppressWarnings("all")
/** A metadata snapshot for DataHub Access Policy data. */
@org.apache.avro.specific.AvroGenerated
public class DataHubPolicySnapshot extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DataHubPolicySnapshot\",\"namespace\":\"com.linkedin.pegasus2avro.metadata.snapshot\",\"doc\":\"A metadata snapshot for DataHub Access Policy data.\",\"fields\":[{\"name\":\"urn\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"URN for the entity the metadata snapshot is associated with.\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"aspects\",\"type\":{\"type\":\"array\",\"items\":[{\"type\":\"record\",\"name\":\"DataHubPolicyKey\",\"namespace\":\"com.linkedin.pegasus2avro.metadata.key\",\"doc\":\"Key for a DataHub Policy\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"A unique id for the DataHub access policy record. Generated on the server side at policy creation time.\"}],\"Aspect\":{\"name\":\"dataHubPolicyKey\"}},{\"type\":\"record\",\"name\":\"DataHubPolicyInfo\",\"namespace\":\"com.linkedin.pegasus2avro.policy\",\"doc\":\"Information about a DataHub (UI) access policy.\",\"fields\":[{\"name\":\"displayName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Display name of the Policy\",\"Searchable\":{\"fieldType\":\"TEXT_PARTIAL\"}},{\"name\":\"description\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Description of the Policy\",\"Searchable\":{\"fieldType\":\"TEXT\"}},{\"name\":\"type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The type of policy\"},{\"name\":\"state\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The state of policy, ACTIVE or INACTIVE\"},{\"name\":\"resources\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DataHubResourceFilter\",\"doc\":\"Information used to filter DataHub resource.\",\"fields\":[{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The type of resource that the policy applies to. This will most often be a data asset entity name, for\\nexample 'dataset'. It is not strictly required because in the future we will want to support filtering a resource\\nby domain, as well.\",\"default\":null,\"deprecated\":true},{\"name\":\"resources\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"A specific set of resources to apply the policy to, e.g. asset urns\",\"default\":null,\"deprecated\":true},{\"name\":\"allResources\",\"type\":\"boolean\",\"doc\":\"Whether the policy should be applied to all assets matching the filter.\",\"default\":false,\"deprecated\":true},{\"name\":\"filter\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"PolicyMatchFilter\",\"doc\":\"The filter for specifying the resource or actor to apply privileges to\",\"fields\":[{\"name\":\"criteria\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"PolicyMatchCriterion\",\"doc\":\"A criterion for matching a field with given value\",\"fields\":[{\"name\":\"field\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The name of the field that the criterion refers to\"},{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"doc\":\"Values. Matches criterion if any one of the values matches condition (OR-relationship)\"},{\"name\":\"condition\",\"type\":{\"type\":\"enum\",\"name\":\"PolicyMatchCondition\",\"doc\":\"The matching condition in a filter criterion\",\"symbols\":[\"EQUALS\"],\"symbolDocs\":{\"EQUALS\":\"Whether the field matches the value\"}},\"doc\":\"The condition for the criterion\",\"default\":\"EQUALS\"}]}},\"doc\":\"A list of criteria to apply conjunctively (so all criteria must pass)\"}]}],\"doc\":\"Filter to apply privileges to\",\"default\":null}]}],\"doc\":\"The resource that the policy applies to. Not required for some 'Platform' privileges.\",\"default\":null},{\"name\":\"privileges\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"doc\":\"The privileges that the policy grants.\"},{\"name\":\"actors\",\"type\":{\"type\":\"record\",\"name\":\"DataHubActorFilter\",\"doc\":\"Information used to filter DataHub actors.\",\"fields\":[{\"name\":\"users\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"A specific set of users to apply the policy to (disjunctive)\",\"default\":null},{\"name\":\"groups\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"A specific set of groups to apply the policy to (disjunctive)\",\"default\":null},{\"name\":\"resourceOwners\",\"type\":\"boolean\",\"doc\":\"Whether the filter should return true for owners of a particular resource.\\nOnly applies to policies of type 'Metadata', which have a resource associated with them.\",\"default\":false},{\"name\":\"resourceOwnersTypes\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"Define type of ownership for the policy\",\"default\":null},{\"name\":\"allUsers\",\"type\":\"boolean\",\"doc\":\"Whether the filter should apply to all users.\",\"default\":false},{\"name\":\"allGroups\",\"type\":\"boolean\",\"doc\":\"Whether the filter should apply to all groups.\",\"default\":false},{\"name\":\"roles\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"A specific set of roles to apply the policy to (disjunctive).\",\"default\":null,\"Relationship\":{\"/*\":{\"entityTypes\":[\"dataHubRole\"],\"name\":\"IsAssociatedWithRole\"}}}]},\"doc\":\"The actors that the policy applies to.\"},{\"name\":\"editable\",\"type\":\"boolean\",\"doc\":\"Whether the policy should be editable via the UI\",\"default\":true},{\"name\":\"lastUpdatedTimestamp\",\"type\":[\"null\",\"long\"],\"doc\":\"Timestamp when the policy was last updated\",\"default\":null,\"Searchable\":{\"fieldType\":\"DATETIME\"}}],\"Aspect\":{\"name\":\"dataHubPolicyInfo\"}}]},\"doc\":\"The list of metadata aspects associated with the DataHub access policy.\"}],\"Entity\":{\"keyAspect\":\"dataHubPolicyKey\",\"name\":\"dataHubPolicy\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** URN for the entity the metadata snapshot is associated with. */
  @Deprecated public java.lang.String urn;
  /** The list of metadata aspects associated with the DataHub access policy. */
  @Deprecated public java.util.List<java.lang.Object> aspects;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public DataHubPolicySnapshot() {}

  /**
   * All-args constructor.
   */
  public DataHubPolicySnapshot(java.lang.String urn, java.util.List<java.lang.Object> aspects) {
    this.urn = urn;
    this.aspects = aspects;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return urn;
    case 1: return aspects;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: urn = (java.lang.String)value$; break;
    case 1: aspects = (java.util.List<java.lang.Object>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'urn' field.
   * URN for the entity the metadata snapshot is associated with.   */
  public java.lang.String getUrn() {
    return urn;
  }

  /**
   * Sets the value of the 'urn' field.
   * URN for the entity the metadata snapshot is associated with.   * @param value the value to set.
   */
  public void setUrn(java.lang.String value) {
    this.urn = value;
  }

  /**
   * Gets the value of the 'aspects' field.
   * The list of metadata aspects associated with the DataHub access policy.   */
  public java.util.List<java.lang.Object> getAspects() {
    return aspects;
  }

  /**
   * Sets the value of the 'aspects' field.
   * The list of metadata aspects associated with the DataHub access policy.   * @param value the value to set.
   */
  public void setAspects(java.util.List<java.lang.Object> value) {
    this.aspects = value;
  }

  /** Creates a new DataHubPolicySnapshot RecordBuilder */
  public static com.linkedin.pegasus2avro.metadata.snapshot.DataHubPolicySnapshot.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.metadata.snapshot.DataHubPolicySnapshot.Builder();
  }
  
  /** Creates a new DataHubPolicySnapshot RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.metadata.snapshot.DataHubPolicySnapshot.Builder newBuilder(com.linkedin.pegasus2avro.metadata.snapshot.DataHubPolicySnapshot.Builder other) {
    return new com.linkedin.pegasus2avro.metadata.snapshot.DataHubPolicySnapshot.Builder(other);
  }
  
  /** Creates a new DataHubPolicySnapshot RecordBuilder by copying an existing DataHubPolicySnapshot instance */
  public static com.linkedin.pegasus2avro.metadata.snapshot.DataHubPolicySnapshot.Builder newBuilder(com.linkedin.pegasus2avro.metadata.snapshot.DataHubPolicySnapshot other) {
    return new com.linkedin.pegasus2avro.metadata.snapshot.DataHubPolicySnapshot.Builder(other);
  }
  
  /**
   * RecordBuilder for DataHubPolicySnapshot instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DataHubPolicySnapshot>
    implements org.apache.avro.data.RecordBuilder<DataHubPolicySnapshot> {

    private java.lang.String urn;
    private java.util.List<java.lang.Object> aspects;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.metadata.snapshot.DataHubPolicySnapshot.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.metadata.snapshot.DataHubPolicySnapshot.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.urn)) {
        this.urn = data().deepCopy(fields()[0].schema(), other.urn);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.aspects)) {
        this.aspects = data().deepCopy(fields()[1].schema(), other.aspects);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing DataHubPolicySnapshot instance */
    private Builder(com.linkedin.pegasus2avro.metadata.snapshot.DataHubPolicySnapshot other) {
            super(com.linkedin.pegasus2avro.metadata.snapshot.DataHubPolicySnapshot.SCHEMA$);
      if (isValidValue(fields()[0], other.urn)) {
        this.urn = data().deepCopy(fields()[0].schema(), other.urn);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.aspects)) {
        this.aspects = data().deepCopy(fields()[1].schema(), other.aspects);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'urn' field */
    public java.lang.String getUrn() {
      return urn;
    }
    
    /** Sets the value of the 'urn' field */
    public com.linkedin.pegasus2avro.metadata.snapshot.DataHubPolicySnapshot.Builder setUrn(java.lang.String value) {
      validate(fields()[0], value);
      this.urn = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'urn' field has been set */
    public boolean hasUrn() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'urn' field */
    public com.linkedin.pegasus2avro.metadata.snapshot.DataHubPolicySnapshot.Builder clearUrn() {
      urn = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'aspects' field */
    public java.util.List<java.lang.Object> getAspects() {
      return aspects;
    }
    
    /** Sets the value of the 'aspects' field */
    public com.linkedin.pegasus2avro.metadata.snapshot.DataHubPolicySnapshot.Builder setAspects(java.util.List<java.lang.Object> value) {
      validate(fields()[1], value);
      this.aspects = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'aspects' field has been set */
    public boolean hasAspects() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'aspects' field */
    public com.linkedin.pegasus2avro.metadata.snapshot.DataHubPolicySnapshot.Builder clearAspects() {
      aspects = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public DataHubPolicySnapshot build() {
      try {
        DataHubPolicySnapshot record = new DataHubPolicySnapshot();
        record.urn = fieldSetFlags()[0] ? this.urn : (java.lang.String) defaultValue(fields()[0]);
        record.aspects = fieldSetFlags()[1] ? this.aspects : (java.util.List<java.lang.Object>) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
