/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.common;  
@SuppressWarnings("all")
/** Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage. */
@org.apache.avro.specific.AvroGenerated
public class AuditStamp extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AuditStamp\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage.\",\"fields\":[{\"name\":\"time\",\"type\":\"long\",\"doc\":\"When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent.\"},{\"name\":\"actor\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change.\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"impersonator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor.\",\"default\":null,\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"message\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually.\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent. */
  @Deprecated public long time;
  /** The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change. */
  @Deprecated public java.lang.String actor;
  /** The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor. */
  @Deprecated public java.lang.String impersonator;
  /** Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually. */
  @Deprecated public java.lang.String message;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public AuditStamp() {}

  /**
   * All-args constructor.
   */
  public AuditStamp(java.lang.Long time, java.lang.String actor, java.lang.String impersonator, java.lang.String message) {
    this.time = time;
    this.actor = actor;
    this.impersonator = impersonator;
    this.message = message;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return time;
    case 1: return actor;
    case 2: return impersonator;
    case 3: return message;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: time = (java.lang.Long)value$; break;
    case 1: actor = (java.lang.String)value$; break;
    case 2: impersonator = (java.lang.String)value$; break;
    case 3: message = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'time' field.
   * When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent.   */
  public java.lang.Long getTime() {
    return time;
  }

  /**
   * Sets the value of the 'time' field.
   * When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent.   * @param value the value to set.
   */
  public void setTime(java.lang.Long value) {
    this.time = value;
  }

  /**
   * Gets the value of the 'actor' field.
   * The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change.   */
  public java.lang.String getActor() {
    return actor;
  }

  /**
   * Sets the value of the 'actor' field.
   * The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change.   * @param value the value to set.
   */
  public void setActor(java.lang.String value) {
    this.actor = value;
  }

  /**
   * Gets the value of the 'impersonator' field.
   * The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor.   */
  public java.lang.String getImpersonator() {
    return impersonator;
  }

  /**
   * Sets the value of the 'impersonator' field.
   * The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor.   * @param value the value to set.
   */
  public void setImpersonator(java.lang.String value) {
    this.impersonator = value;
  }

  /**
   * Gets the value of the 'message' field.
   * Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually.   */
  public java.lang.String getMessage() {
    return message;
  }

  /**
   * Sets the value of the 'message' field.
   * Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually.   * @param value the value to set.
   */
  public void setMessage(java.lang.String value) {
    this.message = value;
  }

  /** Creates a new AuditStamp RecordBuilder */
  public static com.linkedin.pegasus2avro.common.AuditStamp.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.common.AuditStamp.Builder();
  }
  
  /** Creates a new AuditStamp RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.common.AuditStamp.Builder newBuilder(com.linkedin.pegasus2avro.common.AuditStamp.Builder other) {
    return new com.linkedin.pegasus2avro.common.AuditStamp.Builder(other);
  }
  
  /** Creates a new AuditStamp RecordBuilder by copying an existing AuditStamp instance */
  public static com.linkedin.pegasus2avro.common.AuditStamp.Builder newBuilder(com.linkedin.pegasus2avro.common.AuditStamp other) {
    return new com.linkedin.pegasus2avro.common.AuditStamp.Builder(other);
  }
  
  /**
   * RecordBuilder for AuditStamp instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AuditStamp>
    implements org.apache.avro.data.RecordBuilder<AuditStamp> {

    private long time;
    private java.lang.String actor;
    private java.lang.String impersonator;
    private java.lang.String message;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.common.AuditStamp.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.common.AuditStamp.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.time)) {
        this.time = data().deepCopy(fields()[0].schema(), other.time);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.actor)) {
        this.actor = data().deepCopy(fields()[1].schema(), other.actor);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.impersonator)) {
        this.impersonator = data().deepCopy(fields()[2].schema(), other.impersonator);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.message)) {
        this.message = data().deepCopy(fields()[3].schema(), other.message);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing AuditStamp instance */
    private Builder(com.linkedin.pegasus2avro.common.AuditStamp other) {
            super(com.linkedin.pegasus2avro.common.AuditStamp.SCHEMA$);
      if (isValidValue(fields()[0], other.time)) {
        this.time = data().deepCopy(fields()[0].schema(), other.time);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.actor)) {
        this.actor = data().deepCopy(fields()[1].schema(), other.actor);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.impersonator)) {
        this.impersonator = data().deepCopy(fields()[2].schema(), other.impersonator);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.message)) {
        this.message = data().deepCopy(fields()[3].schema(), other.message);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'time' field */
    public java.lang.Long getTime() {
      return time;
    }
    
    /** Sets the value of the 'time' field */
    public com.linkedin.pegasus2avro.common.AuditStamp.Builder setTime(long value) {
      validate(fields()[0], value);
      this.time = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'time' field has been set */
    public boolean hasTime() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'time' field */
    public com.linkedin.pegasus2avro.common.AuditStamp.Builder clearTime() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'actor' field */
    public java.lang.String getActor() {
      return actor;
    }
    
    /** Sets the value of the 'actor' field */
    public com.linkedin.pegasus2avro.common.AuditStamp.Builder setActor(java.lang.String value) {
      validate(fields()[1], value);
      this.actor = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'actor' field has been set */
    public boolean hasActor() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'actor' field */
    public com.linkedin.pegasus2avro.common.AuditStamp.Builder clearActor() {
      actor = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'impersonator' field */
    public java.lang.String getImpersonator() {
      return impersonator;
    }
    
    /** Sets the value of the 'impersonator' field */
    public com.linkedin.pegasus2avro.common.AuditStamp.Builder setImpersonator(java.lang.String value) {
      validate(fields()[2], value);
      this.impersonator = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'impersonator' field has been set */
    public boolean hasImpersonator() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'impersonator' field */
    public com.linkedin.pegasus2avro.common.AuditStamp.Builder clearImpersonator() {
      impersonator = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'message' field */
    public java.lang.String getMessage() {
      return message;
    }
    
    /** Sets the value of the 'message' field */
    public com.linkedin.pegasus2avro.common.AuditStamp.Builder setMessage(java.lang.String value) {
      validate(fields()[3], value);
      this.message = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'message' field has been set */
    public boolean hasMessage() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'message' field */
    public com.linkedin.pegasus2avro.common.AuditStamp.Builder clearMessage() {
      message = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public AuditStamp build() {
      try {
        AuditStamp record = new AuditStamp();
        record.time = fieldSetFlags()[0] ? this.time : (java.lang.Long) defaultValue(fields()[0]);
        record.actor = fieldSetFlags()[1] ? this.actor : (java.lang.String) defaultValue(fields()[1]);
        record.impersonator = fieldSetFlags()[2] ? this.impersonator : (java.lang.String) defaultValue(fields()[2]);
        record.message = fieldSetFlags()[3] ? this.message : (java.lang.String) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
