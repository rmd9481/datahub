/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.schema;  
@SuppressWarnings("all")
/** EditableSchemaMetadata stores editable changes made to schema metadata. This separates changes made from
ingestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines. */
@org.apache.avro.specific.AvroGenerated
public class EditableSchemaMetadata extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EditableSchemaMetadata\",\"namespace\":\"com.linkedin.pegasus2avro.schema\",\"doc\":\"EditableSchemaMetadata stores editable changes made to schema metadata. This separates changes made from\\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines.\",\"fields\":[{\"name\":\"created\",\"type\":{\"type\":\"record\",\"name\":\"AuditStamp\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage.\",\"fields\":[{\"name\":\"time\",\"type\":\"long\",\"doc\":\"When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent.\"},{\"name\":\"actor\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change.\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"impersonator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor.\",\"default\":null,\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"message\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually.\",\"default\":null}]},\"doc\":\"An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data.\",\"default\":{\"actor\":\"urn:li:corpuser:unknown\",\"impersonator\":null,\"time\":0,\"message\":null}},{\"name\":\"lastModified\",\"type\":\"com.linkedin.pegasus2avro.common.AuditStamp\",\"doc\":\"An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data.\",\"default\":{\"actor\":\"urn:li:corpuser:unknown\",\"impersonator\":null,\"time\":0,\"message\":null}},{\"name\":\"deleted\",\"type\":[\"null\",\"com.linkedin.pegasus2avro.common.AuditStamp\"],\"doc\":\"An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics.\",\"default\":null},{\"name\":\"editableSchemaFieldInfo\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"EditableSchemaFieldInfo\",\"doc\":\"SchemaField to describe metadata related to dataset schema.\",\"fields\":[{\"name\":\"fieldPath\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"FieldPath uniquely identifying the SchemaField this metadata is associated with\"},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Description\",\"default\":null,\"Searchable\":{\"boostScore\":0.1,\"fieldName\":\"editedFieldDescriptions\",\"fieldType\":\"TEXT\"}},{\"name\":\"globalTags\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GlobalTags\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"Tag aspect used for applying tags to an entity\",\"fields\":[{\"name\":\"tags\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TagAssociation\",\"doc\":\"Properties of an applied tag. For now, just an Urn. In the future we can extend this with other properties, e.g.\\npropagation parameters.\",\"fields\":[{\"name\":\"tag\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Urn of the applied tag\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.TagUrn\"}},{\"name\":\"context\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Additional context about the association\",\"default\":null}]}},\"doc\":\"Tags associated with a given entity\",\"Relationship\":{\"/*/tag\":{\"entityTypes\":[\"tag\"],\"name\":\"TaggedWith\"}},\"Searchable\":{\"/*/tag\":{\"addToFilters\":true,\"boostScore\":0.5,\"fieldName\":\"tags\",\"fieldType\":\"URN\",\"filterNameOverride\":\"Tag\",\"hasValuesFieldName\":\"hasTags\",\"queryByDefault\":true}}}],\"Aspect\":{\"name\":\"globalTags\"}}],\"doc\":\"Tags associated with the field\",\"default\":null,\"Relationship\":{\"/tags/*/tag\":{\"entityTypes\":[\"tag\"],\"name\":\"EditableSchemaFieldTaggedWith\"}},\"Searchable\":{\"/tags/*/tag\":{\"boostScore\":0.5,\"fieldName\":\"editedFieldTags\",\"fieldType\":\"URN\"}}},{\"name\":\"glossaryTerms\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GlossaryTerms\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"Related business terms information\",\"fields\":[{\"name\":\"terms\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GlossaryTermAssociation\",\"doc\":\"Properties of an applied glossary term.\",\"fields\":[{\"name\":\"urn\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Urn of the applied glossary term\",\"Relationship\":{\"entityTypes\":[\"glossaryTerm\"],\"name\":\"TermedWith\"},\"Searchable\":{\"addToFilters\":true,\"fieldName\":\"glossaryTerms\",\"fieldType\":\"URN\",\"filterNameOverride\":\"Glossary Term\",\"hasValuesFieldName\":\"hasGlossaryTerms\"},\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.GlossaryTermUrn\"}},{\"name\":\"context\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Additional context about the association\",\"default\":null}]}},\"doc\":\"The related business terms\"},{\"name\":\"auditStamp\",\"type\":\"AuditStamp\",\"doc\":\"Audit stamp containing who reported the related business term\"}],\"Aspect\":{\"name\":\"glossaryTerms\"}}],\"doc\":\"Glossary terms associated with the field\",\"default\":null,\"Relationship\":{\"/terms/*/urn\":{\"entityTypes\":[\"glossaryTerm\"],\"name\":\"EditableSchemaFieldWithGlossaryTerm\"}},\"Searchable\":{\"/terms/*/urn\":{\"boostScore\":0.5,\"fieldName\":\"editedFieldGlossaryTerms\",\"fieldType\":\"URN\"}}}]}},\"doc\":\"Client provided a list of fields from document schema.\"}],\"Aspect\":{\"name\":\"editableSchemaMetadata\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data. */
  @Deprecated public com.linkedin.pegasus2avro.common.AuditStamp created;
  /** An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data. */
  @Deprecated public com.linkedin.pegasus2avro.common.AuditStamp lastModified;
  /** An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics. */
  @Deprecated public com.linkedin.pegasus2avro.common.AuditStamp deleted;
  /** Client provided a list of fields from document schema. */
  @Deprecated public java.util.List<com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo> editableSchemaFieldInfo;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public EditableSchemaMetadata() {}

  /**
   * All-args constructor.
   */
  public EditableSchemaMetadata(com.linkedin.pegasus2avro.common.AuditStamp created, com.linkedin.pegasus2avro.common.AuditStamp lastModified, com.linkedin.pegasus2avro.common.AuditStamp deleted, java.util.List<com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo> editableSchemaFieldInfo) {
    this.created = created;
    this.lastModified = lastModified;
    this.deleted = deleted;
    this.editableSchemaFieldInfo = editableSchemaFieldInfo;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return created;
    case 1: return lastModified;
    case 2: return deleted;
    case 3: return editableSchemaFieldInfo;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: created = (com.linkedin.pegasus2avro.common.AuditStamp)value$; break;
    case 1: lastModified = (com.linkedin.pegasus2avro.common.AuditStamp)value$; break;
    case 2: deleted = (com.linkedin.pegasus2avro.common.AuditStamp)value$; break;
    case 3: editableSchemaFieldInfo = (java.util.List<com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'created' field.
   * An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data.   */
  public com.linkedin.pegasus2avro.common.AuditStamp getCreated() {
    return created;
  }

  /**
   * Sets the value of the 'created' field.
   * An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data.   * @param value the value to set.
   */
  public void setCreated(com.linkedin.pegasus2avro.common.AuditStamp value) {
    this.created = value;
  }

  /**
   * Gets the value of the 'lastModified' field.
   * An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data.   */
  public com.linkedin.pegasus2avro.common.AuditStamp getLastModified() {
    return lastModified;
  }

  /**
   * Sets the value of the 'lastModified' field.
   * An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data.   * @param value the value to set.
   */
  public void setLastModified(com.linkedin.pegasus2avro.common.AuditStamp value) {
    this.lastModified = value;
  }

  /**
   * Gets the value of the 'deleted' field.
   * An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics.   */
  public com.linkedin.pegasus2avro.common.AuditStamp getDeleted() {
    return deleted;
  }

  /**
   * Sets the value of the 'deleted' field.
   * An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics.   * @param value the value to set.
   */
  public void setDeleted(com.linkedin.pegasus2avro.common.AuditStamp value) {
    this.deleted = value;
  }

  /**
   * Gets the value of the 'editableSchemaFieldInfo' field.
   * Client provided a list of fields from document schema.   */
  public java.util.List<com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo> getEditableSchemaFieldInfo() {
    return editableSchemaFieldInfo;
  }

  /**
   * Sets the value of the 'editableSchemaFieldInfo' field.
   * Client provided a list of fields from document schema.   * @param value the value to set.
   */
  public void setEditableSchemaFieldInfo(java.util.List<com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo> value) {
    this.editableSchemaFieldInfo = value;
  }

  /** Creates a new EditableSchemaMetadata RecordBuilder */
  public static com.linkedin.pegasus2avro.schema.EditableSchemaMetadata.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.schema.EditableSchemaMetadata.Builder();
  }
  
  /** Creates a new EditableSchemaMetadata RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.schema.EditableSchemaMetadata.Builder newBuilder(com.linkedin.pegasus2avro.schema.EditableSchemaMetadata.Builder other) {
    return new com.linkedin.pegasus2avro.schema.EditableSchemaMetadata.Builder(other);
  }
  
  /** Creates a new EditableSchemaMetadata RecordBuilder by copying an existing EditableSchemaMetadata instance */
  public static com.linkedin.pegasus2avro.schema.EditableSchemaMetadata.Builder newBuilder(com.linkedin.pegasus2avro.schema.EditableSchemaMetadata other) {
    return new com.linkedin.pegasus2avro.schema.EditableSchemaMetadata.Builder(other);
  }
  
  /**
   * RecordBuilder for EditableSchemaMetadata instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EditableSchemaMetadata>
    implements org.apache.avro.data.RecordBuilder<EditableSchemaMetadata> {

    private com.linkedin.pegasus2avro.common.AuditStamp created;
    private com.linkedin.pegasus2avro.common.AuditStamp lastModified;
    private com.linkedin.pegasus2avro.common.AuditStamp deleted;
    private java.util.List<com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo> editableSchemaFieldInfo;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.schema.EditableSchemaMetadata.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.schema.EditableSchemaMetadata.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.created)) {
        this.created = data().deepCopy(fields()[0].schema(), other.created);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.lastModified)) {
        this.lastModified = data().deepCopy(fields()[1].schema(), other.lastModified);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.deleted)) {
        this.deleted = data().deepCopy(fields()[2].schema(), other.deleted);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.editableSchemaFieldInfo)) {
        this.editableSchemaFieldInfo = data().deepCopy(fields()[3].schema(), other.editableSchemaFieldInfo);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing EditableSchemaMetadata instance */
    private Builder(com.linkedin.pegasus2avro.schema.EditableSchemaMetadata other) {
            super(com.linkedin.pegasus2avro.schema.EditableSchemaMetadata.SCHEMA$);
      if (isValidValue(fields()[0], other.created)) {
        this.created = data().deepCopy(fields()[0].schema(), other.created);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.lastModified)) {
        this.lastModified = data().deepCopy(fields()[1].schema(), other.lastModified);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.deleted)) {
        this.deleted = data().deepCopy(fields()[2].schema(), other.deleted);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.editableSchemaFieldInfo)) {
        this.editableSchemaFieldInfo = data().deepCopy(fields()[3].schema(), other.editableSchemaFieldInfo);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'created' field */
    public com.linkedin.pegasus2avro.common.AuditStamp getCreated() {
      return created;
    }
    
    /** Sets the value of the 'created' field */
    public com.linkedin.pegasus2avro.schema.EditableSchemaMetadata.Builder setCreated(com.linkedin.pegasus2avro.common.AuditStamp value) {
      validate(fields()[0], value);
      this.created = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'created' field has been set */
    public boolean hasCreated() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'created' field */
    public com.linkedin.pegasus2avro.schema.EditableSchemaMetadata.Builder clearCreated() {
      created = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'lastModified' field */
    public com.linkedin.pegasus2avro.common.AuditStamp getLastModified() {
      return lastModified;
    }
    
    /** Sets the value of the 'lastModified' field */
    public com.linkedin.pegasus2avro.schema.EditableSchemaMetadata.Builder setLastModified(com.linkedin.pegasus2avro.common.AuditStamp value) {
      validate(fields()[1], value);
      this.lastModified = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'lastModified' field has been set */
    public boolean hasLastModified() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'lastModified' field */
    public com.linkedin.pegasus2avro.schema.EditableSchemaMetadata.Builder clearLastModified() {
      lastModified = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'deleted' field */
    public com.linkedin.pegasus2avro.common.AuditStamp getDeleted() {
      return deleted;
    }
    
    /** Sets the value of the 'deleted' field */
    public com.linkedin.pegasus2avro.schema.EditableSchemaMetadata.Builder setDeleted(com.linkedin.pegasus2avro.common.AuditStamp value) {
      validate(fields()[2], value);
      this.deleted = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'deleted' field has been set */
    public boolean hasDeleted() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'deleted' field */
    public com.linkedin.pegasus2avro.schema.EditableSchemaMetadata.Builder clearDeleted() {
      deleted = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'editableSchemaFieldInfo' field */
    public java.util.List<com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo> getEditableSchemaFieldInfo() {
      return editableSchemaFieldInfo;
    }
    
    /** Sets the value of the 'editableSchemaFieldInfo' field */
    public com.linkedin.pegasus2avro.schema.EditableSchemaMetadata.Builder setEditableSchemaFieldInfo(java.util.List<com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo> value) {
      validate(fields()[3], value);
      this.editableSchemaFieldInfo = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'editableSchemaFieldInfo' field has been set */
    public boolean hasEditableSchemaFieldInfo() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'editableSchemaFieldInfo' field */
    public com.linkedin.pegasus2avro.schema.EditableSchemaMetadata.Builder clearEditableSchemaFieldInfo() {
      editableSchemaFieldInfo = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public EditableSchemaMetadata build() {
      try {
        EditableSchemaMetadata record = new EditableSchemaMetadata();
        record.created = fieldSetFlags()[0] ? this.created : (com.linkedin.pegasus2avro.common.AuditStamp) defaultValue(fields()[0]);
        record.lastModified = fieldSetFlags()[1] ? this.lastModified : (com.linkedin.pegasus2avro.common.AuditStamp) defaultValue(fields()[1]);
        record.deleted = fieldSetFlags()[2] ? this.deleted : (com.linkedin.pegasus2avro.common.AuditStamp) defaultValue(fields()[2]);
        record.editableSchemaFieldInfo = fieldSetFlags()[3] ? this.editableSchemaFieldInfo : (java.util.List<com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo>) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
