/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.identity;  
@SuppressWarnings("all")
/** Aspect used to store invite tokens. */
@org.apache.avro.specific.AvroGenerated
public class InviteToken extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"InviteToken\",\"namespace\":\"com.linkedin.pegasus2avro.identity\",\"doc\":\"Aspect used to store invite tokens.\",\"fields\":[{\"name\":\"token\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The encrypted invite token.\"},{\"name\":\"role\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The role that this invite token may be associated with\",\"default\":null,\"Searchable\":{\"fieldName\":\"role\",\"fieldType\":\"KEYWORD\",\"hasValuesFieldName\":\"hasRole\"},\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}}],\"Aspect\":{\"name\":\"inviteToken\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The encrypted invite token. */
  @Deprecated public java.lang.String token;
  /** The role that this invite token may be associated with */
  @Deprecated public java.lang.String role;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public InviteToken() {}

  /**
   * All-args constructor.
   */
  public InviteToken(java.lang.String token, java.lang.String role) {
    this.token = token;
    this.role = role;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return token;
    case 1: return role;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: token = (java.lang.String)value$; break;
    case 1: role = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'token' field.
   * The encrypted invite token.   */
  public java.lang.String getToken() {
    return token;
  }

  /**
   * Sets the value of the 'token' field.
   * The encrypted invite token.   * @param value the value to set.
   */
  public void setToken(java.lang.String value) {
    this.token = value;
  }

  /**
   * Gets the value of the 'role' field.
   * The role that this invite token may be associated with   */
  public java.lang.String getRole() {
    return role;
  }

  /**
   * Sets the value of the 'role' field.
   * The role that this invite token may be associated with   * @param value the value to set.
   */
  public void setRole(java.lang.String value) {
    this.role = value;
  }

  /** Creates a new InviteToken RecordBuilder */
  public static com.linkedin.pegasus2avro.identity.InviteToken.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.identity.InviteToken.Builder();
  }
  
  /** Creates a new InviteToken RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.identity.InviteToken.Builder newBuilder(com.linkedin.pegasus2avro.identity.InviteToken.Builder other) {
    return new com.linkedin.pegasus2avro.identity.InviteToken.Builder(other);
  }
  
  /** Creates a new InviteToken RecordBuilder by copying an existing InviteToken instance */
  public static com.linkedin.pegasus2avro.identity.InviteToken.Builder newBuilder(com.linkedin.pegasus2avro.identity.InviteToken other) {
    return new com.linkedin.pegasus2avro.identity.InviteToken.Builder(other);
  }
  
  /**
   * RecordBuilder for InviteToken instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<InviteToken>
    implements org.apache.avro.data.RecordBuilder<InviteToken> {

    private java.lang.String token;
    private java.lang.String role;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.identity.InviteToken.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.identity.InviteToken.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.token)) {
        this.token = data().deepCopy(fields()[0].schema(), other.token);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.role)) {
        this.role = data().deepCopy(fields()[1].schema(), other.role);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing InviteToken instance */
    private Builder(com.linkedin.pegasus2avro.identity.InviteToken other) {
            super(com.linkedin.pegasus2avro.identity.InviteToken.SCHEMA$);
      if (isValidValue(fields()[0], other.token)) {
        this.token = data().deepCopy(fields()[0].schema(), other.token);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.role)) {
        this.role = data().deepCopy(fields()[1].schema(), other.role);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'token' field */
    public java.lang.String getToken() {
      return token;
    }
    
    /** Sets the value of the 'token' field */
    public com.linkedin.pegasus2avro.identity.InviteToken.Builder setToken(java.lang.String value) {
      validate(fields()[0], value);
      this.token = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'token' field has been set */
    public boolean hasToken() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'token' field */
    public com.linkedin.pegasus2avro.identity.InviteToken.Builder clearToken() {
      token = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'role' field */
    public java.lang.String getRole() {
      return role;
    }
    
    /** Sets the value of the 'role' field */
    public com.linkedin.pegasus2avro.identity.InviteToken.Builder setRole(java.lang.String value) {
      validate(fields()[1], value);
      this.role = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'role' field has been set */
    public boolean hasRole() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'role' field */
    public com.linkedin.pegasus2avro.identity.InviteToken.Builder clearRole() {
      role = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public InviteToken build() {
      try {
        InviteToken record = new InviteToken();
        record.token = fieldSetFlags()[0] ? this.token : (java.lang.String) defaultValue(fields()[0]);
        record.role = fieldSetFlags()[1] ? this.role : (java.lang.String) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
