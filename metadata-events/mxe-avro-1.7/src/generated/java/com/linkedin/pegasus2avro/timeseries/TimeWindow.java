/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.timeseries;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class TimeWindow extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TimeWindow\",\"namespace\":\"com.linkedin.pegasus2avro.timeseries\",\"fields\":[{\"name\":\"startTimeMillis\",\"type\":\"long\",\"doc\":\"Start time as epoch at UTC.\"},{\"name\":\"length\",\"type\":{\"type\":\"record\",\"name\":\"TimeWindowSize\",\"doc\":\"Defines the size of a time window.\",\"fields\":[{\"name\":\"unit\",\"type\":{\"type\":\"enum\",\"name\":\"CalendarInterval\",\"symbols\":[\"SECOND\",\"MINUTE\",\"HOUR\",\"DAY\",\"WEEK\",\"MONTH\",\"QUARTER\",\"YEAR\"]},\"doc\":\"Interval unit such as minute/hour/day etc.\"},{\"name\":\"multiple\",\"type\":\"int\",\"doc\":\"How many units. Defaults to 1.\",\"default\":1}]},\"doc\":\"The length of the window.\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Start time as epoch at UTC. */
  @Deprecated public long startTimeMillis;
  /** The length of the window. */
  @Deprecated public com.linkedin.pegasus2avro.timeseries.TimeWindowSize length;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public TimeWindow() {}

  /**
   * All-args constructor.
   */
  public TimeWindow(java.lang.Long startTimeMillis, com.linkedin.pegasus2avro.timeseries.TimeWindowSize length) {
    this.startTimeMillis = startTimeMillis;
    this.length = length;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return startTimeMillis;
    case 1: return length;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: startTimeMillis = (java.lang.Long)value$; break;
    case 1: length = (com.linkedin.pegasus2avro.timeseries.TimeWindowSize)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'startTimeMillis' field.
   * Start time as epoch at UTC.   */
  public java.lang.Long getStartTimeMillis() {
    return startTimeMillis;
  }

  /**
   * Sets the value of the 'startTimeMillis' field.
   * Start time as epoch at UTC.   * @param value the value to set.
   */
  public void setStartTimeMillis(java.lang.Long value) {
    this.startTimeMillis = value;
  }

  /**
   * Gets the value of the 'length' field.
   * The length of the window.   */
  public com.linkedin.pegasus2avro.timeseries.TimeWindowSize getLength() {
    return length;
  }

  /**
   * Sets the value of the 'length' field.
   * The length of the window.   * @param value the value to set.
   */
  public void setLength(com.linkedin.pegasus2avro.timeseries.TimeWindowSize value) {
    this.length = value;
  }

  /** Creates a new TimeWindow RecordBuilder */
  public static com.linkedin.pegasus2avro.timeseries.TimeWindow.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.timeseries.TimeWindow.Builder();
  }
  
  /** Creates a new TimeWindow RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.timeseries.TimeWindow.Builder newBuilder(com.linkedin.pegasus2avro.timeseries.TimeWindow.Builder other) {
    return new com.linkedin.pegasus2avro.timeseries.TimeWindow.Builder(other);
  }
  
  /** Creates a new TimeWindow RecordBuilder by copying an existing TimeWindow instance */
  public static com.linkedin.pegasus2avro.timeseries.TimeWindow.Builder newBuilder(com.linkedin.pegasus2avro.timeseries.TimeWindow other) {
    return new com.linkedin.pegasus2avro.timeseries.TimeWindow.Builder(other);
  }
  
  /**
   * RecordBuilder for TimeWindow instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TimeWindow>
    implements org.apache.avro.data.RecordBuilder<TimeWindow> {

    private long startTimeMillis;
    private com.linkedin.pegasus2avro.timeseries.TimeWindowSize length;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.timeseries.TimeWindow.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.timeseries.TimeWindow.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.startTimeMillis)) {
        this.startTimeMillis = data().deepCopy(fields()[0].schema(), other.startTimeMillis);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.length)) {
        this.length = data().deepCopy(fields()[1].schema(), other.length);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing TimeWindow instance */
    private Builder(com.linkedin.pegasus2avro.timeseries.TimeWindow other) {
            super(com.linkedin.pegasus2avro.timeseries.TimeWindow.SCHEMA$);
      if (isValidValue(fields()[0], other.startTimeMillis)) {
        this.startTimeMillis = data().deepCopy(fields()[0].schema(), other.startTimeMillis);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.length)) {
        this.length = data().deepCopy(fields()[1].schema(), other.length);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'startTimeMillis' field */
    public java.lang.Long getStartTimeMillis() {
      return startTimeMillis;
    }
    
    /** Sets the value of the 'startTimeMillis' field */
    public com.linkedin.pegasus2avro.timeseries.TimeWindow.Builder setStartTimeMillis(long value) {
      validate(fields()[0], value);
      this.startTimeMillis = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'startTimeMillis' field has been set */
    public boolean hasStartTimeMillis() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'startTimeMillis' field */
    public com.linkedin.pegasus2avro.timeseries.TimeWindow.Builder clearStartTimeMillis() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'length' field */
    public com.linkedin.pegasus2avro.timeseries.TimeWindowSize getLength() {
      return length;
    }
    
    /** Sets the value of the 'length' field */
    public com.linkedin.pegasus2avro.timeseries.TimeWindow.Builder setLength(com.linkedin.pegasus2avro.timeseries.TimeWindowSize value) {
      validate(fields()[1], value);
      this.length = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'length' field has been set */
    public boolean hasLength() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'length' field */
    public com.linkedin.pegasus2avro.timeseries.TimeWindow.Builder clearLength() {
      length = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public TimeWindow build() {
      try {
        TimeWindow record = new TimeWindow();
        record.startTimeMillis = fieldSetFlags()[0] ? this.startTimeMillis : (java.lang.Long) defaultValue(fields()[0]);
        record.length = fieldSetFlags()[1] ? this.length : (com.linkedin.pegasus2avro.timeseries.TimeWindowSize) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
