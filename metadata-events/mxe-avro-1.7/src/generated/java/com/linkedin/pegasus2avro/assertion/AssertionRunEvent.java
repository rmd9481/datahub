/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.assertion;  
@SuppressWarnings("all")
/** An event representing the current status of evaluating an assertion on a batch.
AssertionRunEvent should be used for reporting the status of a run as an assertion evaluation progresses. */
@org.apache.avro.specific.AvroGenerated
public class AssertionRunEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AssertionRunEvent\",\"namespace\":\"com.linkedin.pegasus2avro.assertion\",\"doc\":\"An event representing the current status of evaluating an assertion on a batch.\\nAssertionRunEvent should be used for reporting the status of a run as an assertion evaluation progresses.\",\"fields\":[{\"name\":\"timestampMillis\",\"type\":\"long\",\"doc\":\"The event timestamp field as epoch at UTC in milli seconds.\"},{\"name\":\"eventGranularity\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"TimeWindowSize\",\"namespace\":\"com.linkedin.pegasus2avro.timeseries\",\"doc\":\"Defines the size of a time window.\",\"fields\":[{\"name\":\"unit\",\"type\":{\"type\":\"enum\",\"name\":\"CalendarInterval\",\"symbols\":[\"SECOND\",\"MINUTE\",\"HOUR\",\"DAY\",\"WEEK\",\"MONTH\",\"QUARTER\",\"YEAR\"]},\"doc\":\"Interval unit such as minute/hour/day etc.\"},{\"name\":\"multiple\",\"type\":\"int\",\"doc\":\"How many units. Defaults to 1.\",\"default\":1}]}],\"doc\":\"Granularity of the event if applicable\",\"default\":null},{\"name\":\"partitionSpec\",\"type\":[{\"type\":\"record\",\"name\":\"PartitionSpec\",\"namespace\":\"com.linkedin.pegasus2avro.timeseries\",\"doc\":\"Defines how the data is partitioned\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"PartitionType\",\"symbols\":[\"FULL_TABLE\",\"QUERY\",\"PARTITION\"]},\"default\":\"PARTITION\"},{\"name\":\"partition\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"String representation of the partition\",\"TimeseriesField\":{}},{\"name\":\"timePartition\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"TimeWindow\",\"fields\":[{\"name\":\"startTimeMillis\",\"type\":\"long\",\"doc\":\"Start time as epoch at UTC.\"},{\"name\":\"length\",\"type\":\"TimeWindowSize\",\"doc\":\"The length of the window.\"}]}],\"doc\":\"Time window of the partition if applicable\",\"default\":null}]},\"null\"],\"doc\":\"The optional partition specification.\",\"default\":{\"partition\":\"FULL_TABLE_SNAPSHOT\",\"type\":\"FULL_TABLE\",\"timePartition\":null}},{\"name\":\"messageId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The optional messageId, if provided serves as a custom user-defined unique identifier for an aspect value.\",\"default\":null},{\"name\":\"runId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\" Native (platform-specific) identifier for this run\"},{\"name\":\"assertionUrn\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"TimeseriesField\":{},\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"asserteeUrn\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"TimeseriesField\":{},\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"batchSpec\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"BatchSpec\",\"doc\":\"A batch on which certain operations, e.g. data quality evaluation, is done.\",\"fields\":[{\"name\":\"customProperties\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"},\"doc\":\"Custom property bag.\",\"default\":{},\"Searchable\":{\"/*\":{\"queryByDefault\":true}}},{\"name\":\"nativeBatchId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The native identifier as specified by the system operating on the batch.\",\"default\":null},{\"name\":\"query\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"A query that identifies a batch of data\",\"default\":null},{\"name\":\"limit\",\"type\":[\"null\",\"int\"],\"doc\":\"Any limit to the number of rows in the batch, if applied\",\"default\":null}]}],\"doc\":\"Specification of the batch which this run is evaluating\",\"default\":null},{\"name\":\"status\",\"type\":{\"type\":\"enum\",\"name\":\"AssertionRunStatus\",\"symbols\":[\"COMPLETE\"],\"symbolDocs\":{\"COMPLETE\":\"The Assertion Run has completed\"}},\"doc\":\"The status of the assertion run as per this timeseries event.\",\"TimeseriesField\":{}},{\"name\":\"result\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"AssertionResult\",\"doc\":\"The result of running an assertion\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"AssertionResultType\",\"symbols\":[\"SUCCESS\",\"FAILURE\"],\"symbolDocs\":{\"FAILURE\":\" The Assertion Failed\",\"SUCCESS\":\" The Assertion Succeeded\"}},\"doc\":\" The final result, e.g. either SUCCESS or FAILURE.\",\"TimeseriesField\":{}},{\"name\":\"rowCount\",\"type\":[\"null\",\"long\"],\"doc\":\"Number of rows for evaluated batch\",\"default\":null},{\"name\":\"missingCount\",\"type\":[\"null\",\"long\"],\"doc\":\"Number of rows with missing value for evaluated batch\",\"default\":null},{\"name\":\"unexpectedCount\",\"type\":[\"null\",\"long\"],\"doc\":\"Number of rows with unexpected value for evaluated batch\",\"default\":null},{\"name\":\"actualAggValue\",\"type\":[\"null\",\"float\"],\"doc\":\"Observed aggregate value for evaluated batch\",\"default\":null},{\"name\":\"nativeResults\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}],\"doc\":\"Other results of evaluation\",\"default\":null},{\"name\":\"externalUrl\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"URL where full results are available\",\"default\":null}]}],\"doc\":\"Results of assertion, present if the status is COMPLETE\",\"default\":null},{\"name\":\"runtimeContext\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}],\"doc\":\"Runtime parameters of evaluation\",\"default\":null}],\"Aspect\":{\"name\":\"assertionRunEvent\",\"type\":\"timeseries\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The event timestamp field as epoch at UTC in milli seconds. */
  @Deprecated public long timestampMillis;
  /** Granularity of the event if applicable */
  @Deprecated public com.linkedin.pegasus2avro.timeseries.TimeWindowSize eventGranularity;
  /** The optional partition specification. */
  @Deprecated public com.linkedin.pegasus2avro.timeseries.PartitionSpec partitionSpec;
  /** The optional messageId, if provided serves as a custom user-defined unique identifier for an aspect value. */
  @Deprecated public java.lang.String messageId;
  /**  Native (platform-specific) identifier for this run */
  @Deprecated public java.lang.String runId;
  @Deprecated public java.lang.String assertionUrn;
  @Deprecated public java.lang.String asserteeUrn;
  /** Specification of the batch which this run is evaluating */
  @Deprecated public com.linkedin.pegasus2avro.assertion.BatchSpec batchSpec;
  /** The status of the assertion run as per this timeseries event. */
  @Deprecated public com.linkedin.pegasus2avro.assertion.AssertionRunStatus status;
  /** Results of assertion, present if the status is COMPLETE */
  @Deprecated public com.linkedin.pegasus2avro.assertion.AssertionResult result;
  /** Runtime parameters of evaluation */
  @Deprecated public java.util.Map<java.lang.String,java.lang.String> runtimeContext;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public AssertionRunEvent() {}

  /**
   * All-args constructor.
   */
  public AssertionRunEvent(java.lang.Long timestampMillis, com.linkedin.pegasus2avro.timeseries.TimeWindowSize eventGranularity, com.linkedin.pegasus2avro.timeseries.PartitionSpec partitionSpec, java.lang.String messageId, java.lang.String runId, java.lang.String assertionUrn, java.lang.String asserteeUrn, com.linkedin.pegasus2avro.assertion.BatchSpec batchSpec, com.linkedin.pegasus2avro.assertion.AssertionRunStatus status, com.linkedin.pegasus2avro.assertion.AssertionResult result, java.util.Map<java.lang.String,java.lang.String> runtimeContext) {
    this.timestampMillis = timestampMillis;
    this.eventGranularity = eventGranularity;
    this.partitionSpec = partitionSpec;
    this.messageId = messageId;
    this.runId = runId;
    this.assertionUrn = assertionUrn;
    this.asserteeUrn = asserteeUrn;
    this.batchSpec = batchSpec;
    this.status = status;
    this.result = result;
    this.runtimeContext = runtimeContext;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return timestampMillis;
    case 1: return eventGranularity;
    case 2: return partitionSpec;
    case 3: return messageId;
    case 4: return runId;
    case 5: return assertionUrn;
    case 6: return asserteeUrn;
    case 7: return batchSpec;
    case 8: return status;
    case 9: return result;
    case 10: return runtimeContext;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: timestampMillis = (java.lang.Long)value$; break;
    case 1: eventGranularity = (com.linkedin.pegasus2avro.timeseries.TimeWindowSize)value$; break;
    case 2: partitionSpec = (com.linkedin.pegasus2avro.timeseries.PartitionSpec)value$; break;
    case 3: messageId = (java.lang.String)value$; break;
    case 4: runId = (java.lang.String)value$; break;
    case 5: assertionUrn = (java.lang.String)value$; break;
    case 6: asserteeUrn = (java.lang.String)value$; break;
    case 7: batchSpec = (com.linkedin.pegasus2avro.assertion.BatchSpec)value$; break;
    case 8: status = (com.linkedin.pegasus2avro.assertion.AssertionRunStatus)value$; break;
    case 9: result = (com.linkedin.pegasus2avro.assertion.AssertionResult)value$; break;
    case 10: runtimeContext = (java.util.Map<java.lang.String,java.lang.String>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'timestampMillis' field.
   * The event timestamp field as epoch at UTC in milli seconds.   */
  public java.lang.Long getTimestampMillis() {
    return timestampMillis;
  }

  /**
   * Sets the value of the 'timestampMillis' field.
   * The event timestamp field as epoch at UTC in milli seconds.   * @param value the value to set.
   */
  public void setTimestampMillis(java.lang.Long value) {
    this.timestampMillis = value;
  }

  /**
   * Gets the value of the 'eventGranularity' field.
   * Granularity of the event if applicable   */
  public com.linkedin.pegasus2avro.timeseries.TimeWindowSize getEventGranularity() {
    return eventGranularity;
  }

  /**
   * Sets the value of the 'eventGranularity' field.
   * Granularity of the event if applicable   * @param value the value to set.
   */
  public void setEventGranularity(com.linkedin.pegasus2avro.timeseries.TimeWindowSize value) {
    this.eventGranularity = value;
  }

  /**
   * Gets the value of the 'partitionSpec' field.
   * The optional partition specification.   */
  public com.linkedin.pegasus2avro.timeseries.PartitionSpec getPartitionSpec() {
    return partitionSpec;
  }

  /**
   * Sets the value of the 'partitionSpec' field.
   * The optional partition specification.   * @param value the value to set.
   */
  public void setPartitionSpec(com.linkedin.pegasus2avro.timeseries.PartitionSpec value) {
    this.partitionSpec = value;
  }

  /**
   * Gets the value of the 'messageId' field.
   * The optional messageId, if provided serves as a custom user-defined unique identifier for an aspect value.   */
  public java.lang.String getMessageId() {
    return messageId;
  }

  /**
   * Sets the value of the 'messageId' field.
   * The optional messageId, if provided serves as a custom user-defined unique identifier for an aspect value.   * @param value the value to set.
   */
  public void setMessageId(java.lang.String value) {
    this.messageId = value;
  }

  /**
   * Gets the value of the 'runId' field.
   *  Native (platform-specific) identifier for this run   */
  public java.lang.String getRunId() {
    return runId;
  }

  /**
   * Sets the value of the 'runId' field.
   *  Native (platform-specific) identifier for this run   * @param value the value to set.
   */
  public void setRunId(java.lang.String value) {
    this.runId = value;
  }

  /**
   * Gets the value of the 'assertionUrn' field.
   */
  public java.lang.String getAssertionUrn() {
    return assertionUrn;
  }

  /**
   * Sets the value of the 'assertionUrn' field.
   * @param value the value to set.
   */
  public void setAssertionUrn(java.lang.String value) {
    this.assertionUrn = value;
  }

  /**
   * Gets the value of the 'asserteeUrn' field.
   */
  public java.lang.String getAsserteeUrn() {
    return asserteeUrn;
  }

  /**
   * Sets the value of the 'asserteeUrn' field.
   * @param value the value to set.
   */
  public void setAsserteeUrn(java.lang.String value) {
    this.asserteeUrn = value;
  }

  /**
   * Gets the value of the 'batchSpec' field.
   * Specification of the batch which this run is evaluating   */
  public com.linkedin.pegasus2avro.assertion.BatchSpec getBatchSpec() {
    return batchSpec;
  }

  /**
   * Sets the value of the 'batchSpec' field.
   * Specification of the batch which this run is evaluating   * @param value the value to set.
   */
  public void setBatchSpec(com.linkedin.pegasus2avro.assertion.BatchSpec value) {
    this.batchSpec = value;
  }

  /**
   * Gets the value of the 'status' field.
   * The status of the assertion run as per this timeseries event.   */
  public com.linkedin.pegasus2avro.assertion.AssertionRunStatus getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * The status of the assertion run as per this timeseries event.   * @param value the value to set.
   */
  public void setStatus(com.linkedin.pegasus2avro.assertion.AssertionRunStatus value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'result' field.
   * Results of assertion, present if the status is COMPLETE   */
  public com.linkedin.pegasus2avro.assertion.AssertionResult getResult() {
    return result;
  }

  /**
   * Sets the value of the 'result' field.
   * Results of assertion, present if the status is COMPLETE   * @param value the value to set.
   */
  public void setResult(com.linkedin.pegasus2avro.assertion.AssertionResult value) {
    this.result = value;
  }

  /**
   * Gets the value of the 'runtimeContext' field.
   * Runtime parameters of evaluation   */
  public java.util.Map<java.lang.String,java.lang.String> getRuntimeContext() {
    return runtimeContext;
  }

  /**
   * Sets the value of the 'runtimeContext' field.
   * Runtime parameters of evaluation   * @param value the value to set.
   */
  public void setRuntimeContext(java.util.Map<java.lang.String,java.lang.String> value) {
    this.runtimeContext = value;
  }

  /** Creates a new AssertionRunEvent RecordBuilder */
  public static com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder();
  }
  
  /** Creates a new AssertionRunEvent RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder newBuilder(com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder other) {
    return new com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder(other);
  }
  
  /** Creates a new AssertionRunEvent RecordBuilder by copying an existing AssertionRunEvent instance */
  public static com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder newBuilder(com.linkedin.pegasus2avro.assertion.AssertionRunEvent other) {
    return new com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder(other);
  }
  
  /**
   * RecordBuilder for AssertionRunEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AssertionRunEvent>
    implements org.apache.avro.data.RecordBuilder<AssertionRunEvent> {

    private long timestampMillis;
    private com.linkedin.pegasus2avro.timeseries.TimeWindowSize eventGranularity;
    private com.linkedin.pegasus2avro.timeseries.PartitionSpec partitionSpec;
    private java.lang.String messageId;
    private java.lang.String runId;
    private java.lang.String assertionUrn;
    private java.lang.String asserteeUrn;
    private com.linkedin.pegasus2avro.assertion.BatchSpec batchSpec;
    private com.linkedin.pegasus2avro.assertion.AssertionRunStatus status;
    private com.linkedin.pegasus2avro.assertion.AssertionResult result;
    private java.util.Map<java.lang.String,java.lang.String> runtimeContext;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.assertion.AssertionRunEvent.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.timestampMillis)) {
        this.timestampMillis = data().deepCopy(fields()[0].schema(), other.timestampMillis);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.eventGranularity)) {
        this.eventGranularity = data().deepCopy(fields()[1].schema(), other.eventGranularity);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.partitionSpec)) {
        this.partitionSpec = data().deepCopy(fields()[2].schema(), other.partitionSpec);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.messageId)) {
        this.messageId = data().deepCopy(fields()[3].schema(), other.messageId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.runId)) {
        this.runId = data().deepCopy(fields()[4].schema(), other.runId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.assertionUrn)) {
        this.assertionUrn = data().deepCopy(fields()[5].schema(), other.assertionUrn);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.asserteeUrn)) {
        this.asserteeUrn = data().deepCopy(fields()[6].schema(), other.asserteeUrn);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.batchSpec)) {
        this.batchSpec = data().deepCopy(fields()[7].schema(), other.batchSpec);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.status)) {
        this.status = data().deepCopy(fields()[8].schema(), other.status);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.result)) {
        this.result = data().deepCopy(fields()[9].schema(), other.result);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.runtimeContext)) {
        this.runtimeContext = data().deepCopy(fields()[10].schema(), other.runtimeContext);
        fieldSetFlags()[10] = true;
      }
    }
    
    /** Creates a Builder by copying an existing AssertionRunEvent instance */
    private Builder(com.linkedin.pegasus2avro.assertion.AssertionRunEvent other) {
            super(com.linkedin.pegasus2avro.assertion.AssertionRunEvent.SCHEMA$);
      if (isValidValue(fields()[0], other.timestampMillis)) {
        this.timestampMillis = data().deepCopy(fields()[0].schema(), other.timestampMillis);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.eventGranularity)) {
        this.eventGranularity = data().deepCopy(fields()[1].schema(), other.eventGranularity);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.partitionSpec)) {
        this.partitionSpec = data().deepCopy(fields()[2].schema(), other.partitionSpec);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.messageId)) {
        this.messageId = data().deepCopy(fields()[3].schema(), other.messageId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.runId)) {
        this.runId = data().deepCopy(fields()[4].schema(), other.runId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.assertionUrn)) {
        this.assertionUrn = data().deepCopy(fields()[5].schema(), other.assertionUrn);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.asserteeUrn)) {
        this.asserteeUrn = data().deepCopy(fields()[6].schema(), other.asserteeUrn);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.batchSpec)) {
        this.batchSpec = data().deepCopy(fields()[7].schema(), other.batchSpec);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.status)) {
        this.status = data().deepCopy(fields()[8].schema(), other.status);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.result)) {
        this.result = data().deepCopy(fields()[9].schema(), other.result);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.runtimeContext)) {
        this.runtimeContext = data().deepCopy(fields()[10].schema(), other.runtimeContext);
        fieldSetFlags()[10] = true;
      }
    }

    /** Gets the value of the 'timestampMillis' field */
    public java.lang.Long getTimestampMillis() {
      return timestampMillis;
    }
    
    /** Sets the value of the 'timestampMillis' field */
    public com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder setTimestampMillis(long value) {
      validate(fields()[0], value);
      this.timestampMillis = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'timestampMillis' field has been set */
    public boolean hasTimestampMillis() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'timestampMillis' field */
    public com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder clearTimestampMillis() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'eventGranularity' field */
    public com.linkedin.pegasus2avro.timeseries.TimeWindowSize getEventGranularity() {
      return eventGranularity;
    }
    
    /** Sets the value of the 'eventGranularity' field */
    public com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder setEventGranularity(com.linkedin.pegasus2avro.timeseries.TimeWindowSize value) {
      validate(fields()[1], value);
      this.eventGranularity = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'eventGranularity' field has been set */
    public boolean hasEventGranularity() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'eventGranularity' field */
    public com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder clearEventGranularity() {
      eventGranularity = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'partitionSpec' field */
    public com.linkedin.pegasus2avro.timeseries.PartitionSpec getPartitionSpec() {
      return partitionSpec;
    }
    
    /** Sets the value of the 'partitionSpec' field */
    public com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder setPartitionSpec(com.linkedin.pegasus2avro.timeseries.PartitionSpec value) {
      validate(fields()[2], value);
      this.partitionSpec = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'partitionSpec' field has been set */
    public boolean hasPartitionSpec() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'partitionSpec' field */
    public com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder clearPartitionSpec() {
      partitionSpec = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'messageId' field */
    public java.lang.String getMessageId() {
      return messageId;
    }
    
    /** Sets the value of the 'messageId' field */
    public com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder setMessageId(java.lang.String value) {
      validate(fields()[3], value);
      this.messageId = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'messageId' field has been set */
    public boolean hasMessageId() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'messageId' field */
    public com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder clearMessageId() {
      messageId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'runId' field */
    public java.lang.String getRunId() {
      return runId;
    }
    
    /** Sets the value of the 'runId' field */
    public com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder setRunId(java.lang.String value) {
      validate(fields()[4], value);
      this.runId = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'runId' field has been set */
    public boolean hasRunId() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'runId' field */
    public com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder clearRunId() {
      runId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'assertionUrn' field */
    public java.lang.String getAssertionUrn() {
      return assertionUrn;
    }
    
    /** Sets the value of the 'assertionUrn' field */
    public com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder setAssertionUrn(java.lang.String value) {
      validate(fields()[5], value);
      this.assertionUrn = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'assertionUrn' field has been set */
    public boolean hasAssertionUrn() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'assertionUrn' field */
    public com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder clearAssertionUrn() {
      assertionUrn = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'asserteeUrn' field */
    public java.lang.String getAsserteeUrn() {
      return asserteeUrn;
    }
    
    /** Sets the value of the 'asserteeUrn' field */
    public com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder setAsserteeUrn(java.lang.String value) {
      validate(fields()[6], value);
      this.asserteeUrn = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'asserteeUrn' field has been set */
    public boolean hasAsserteeUrn() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'asserteeUrn' field */
    public com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder clearAsserteeUrn() {
      asserteeUrn = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'batchSpec' field */
    public com.linkedin.pegasus2avro.assertion.BatchSpec getBatchSpec() {
      return batchSpec;
    }
    
    /** Sets the value of the 'batchSpec' field */
    public com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder setBatchSpec(com.linkedin.pegasus2avro.assertion.BatchSpec value) {
      validate(fields()[7], value);
      this.batchSpec = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'batchSpec' field has been set */
    public boolean hasBatchSpec() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'batchSpec' field */
    public com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder clearBatchSpec() {
      batchSpec = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'status' field */
    public com.linkedin.pegasus2avro.assertion.AssertionRunStatus getStatus() {
      return status;
    }
    
    /** Sets the value of the 'status' field */
    public com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder setStatus(com.linkedin.pegasus2avro.assertion.AssertionRunStatus value) {
      validate(fields()[8], value);
      this.status = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'status' field has been set */
    public boolean hasStatus() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'status' field */
    public com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder clearStatus() {
      status = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'result' field */
    public com.linkedin.pegasus2avro.assertion.AssertionResult getResult() {
      return result;
    }
    
    /** Sets the value of the 'result' field */
    public com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder setResult(com.linkedin.pegasus2avro.assertion.AssertionResult value) {
      validate(fields()[9], value);
      this.result = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'result' field has been set */
    public boolean hasResult() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'result' field */
    public com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder clearResult() {
      result = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'runtimeContext' field */
    public java.util.Map<java.lang.String,java.lang.String> getRuntimeContext() {
      return runtimeContext;
    }
    
    /** Sets the value of the 'runtimeContext' field */
    public com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder setRuntimeContext(java.util.Map<java.lang.String,java.lang.String> value) {
      validate(fields()[10], value);
      this.runtimeContext = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'runtimeContext' field has been set */
    public boolean hasRuntimeContext() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'runtimeContext' field */
    public com.linkedin.pegasus2avro.assertion.AssertionRunEvent.Builder clearRuntimeContext() {
      runtimeContext = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    public AssertionRunEvent build() {
      try {
        AssertionRunEvent record = new AssertionRunEvent();
        record.timestampMillis = fieldSetFlags()[0] ? this.timestampMillis : (java.lang.Long) defaultValue(fields()[0]);
        record.eventGranularity = fieldSetFlags()[1] ? this.eventGranularity : (com.linkedin.pegasus2avro.timeseries.TimeWindowSize) defaultValue(fields()[1]);
        record.partitionSpec = fieldSetFlags()[2] ? this.partitionSpec : (com.linkedin.pegasus2avro.timeseries.PartitionSpec) defaultValue(fields()[2]);
        record.messageId = fieldSetFlags()[3] ? this.messageId : (java.lang.String) defaultValue(fields()[3]);
        record.runId = fieldSetFlags()[4] ? this.runId : (java.lang.String) defaultValue(fields()[4]);
        record.assertionUrn = fieldSetFlags()[5] ? this.assertionUrn : (java.lang.String) defaultValue(fields()[5]);
        record.asserteeUrn = fieldSetFlags()[6] ? this.asserteeUrn : (java.lang.String) defaultValue(fields()[6]);
        record.batchSpec = fieldSetFlags()[7] ? this.batchSpec : (com.linkedin.pegasus2avro.assertion.BatchSpec) defaultValue(fields()[7]);
        record.status = fieldSetFlags()[8] ? this.status : (com.linkedin.pegasus2avro.assertion.AssertionRunStatus) defaultValue(fields()[8]);
        record.result = fieldSetFlags()[9] ? this.result : (com.linkedin.pegasus2avro.assertion.AssertionResult) defaultValue(fields()[9]);
        record.runtimeContext = fieldSetFlags()[10] ? this.runtimeContext : (java.util.Map<java.lang.String,java.lang.String>) defaultValue(fields()[10]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
