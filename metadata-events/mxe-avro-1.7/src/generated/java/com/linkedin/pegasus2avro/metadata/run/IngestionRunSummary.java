/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.metadata.run;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class IngestionRunSummary extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"IngestionRunSummary\",\"namespace\":\"com.linkedin.pegasus2avro.metadata.run\",\"fields\":[{\"name\":\"runId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"timestamp\",\"type\":\"long\"},{\"name\":\"rows\",\"type\":\"long\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String runId;
  @Deprecated public long timestamp;
  @Deprecated public long rows;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public IngestionRunSummary() {}

  /**
   * All-args constructor.
   */
  public IngestionRunSummary(java.lang.String runId, java.lang.Long timestamp, java.lang.Long rows) {
    this.runId = runId;
    this.timestamp = timestamp;
    this.rows = rows;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return runId;
    case 1: return timestamp;
    case 2: return rows;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: runId = (java.lang.String)value$; break;
    case 1: timestamp = (java.lang.Long)value$; break;
    case 2: rows = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'runId' field.
   */
  public java.lang.String getRunId() {
    return runId;
  }

  /**
   * Sets the value of the 'runId' field.
   * @param value the value to set.
   */
  public void setRunId(java.lang.String value) {
    this.runId = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   */
  public java.lang.Long getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.Long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'rows' field.
   */
  public java.lang.Long getRows() {
    return rows;
  }

  /**
   * Sets the value of the 'rows' field.
   * @param value the value to set.
   */
  public void setRows(java.lang.Long value) {
    this.rows = value;
  }

  /** Creates a new IngestionRunSummary RecordBuilder */
  public static com.linkedin.pegasus2avro.metadata.run.IngestionRunSummary.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.metadata.run.IngestionRunSummary.Builder();
  }
  
  /** Creates a new IngestionRunSummary RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.metadata.run.IngestionRunSummary.Builder newBuilder(com.linkedin.pegasus2avro.metadata.run.IngestionRunSummary.Builder other) {
    return new com.linkedin.pegasus2avro.metadata.run.IngestionRunSummary.Builder(other);
  }
  
  /** Creates a new IngestionRunSummary RecordBuilder by copying an existing IngestionRunSummary instance */
  public static com.linkedin.pegasus2avro.metadata.run.IngestionRunSummary.Builder newBuilder(com.linkedin.pegasus2avro.metadata.run.IngestionRunSummary other) {
    return new com.linkedin.pegasus2avro.metadata.run.IngestionRunSummary.Builder(other);
  }
  
  /**
   * RecordBuilder for IngestionRunSummary instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<IngestionRunSummary>
    implements org.apache.avro.data.RecordBuilder<IngestionRunSummary> {

    private java.lang.String runId;
    private long timestamp;
    private long rows;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.metadata.run.IngestionRunSummary.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.metadata.run.IngestionRunSummary.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.runId)) {
        this.runId = data().deepCopy(fields()[0].schema(), other.runId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[1].schema(), other.timestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.rows)) {
        this.rows = data().deepCopy(fields()[2].schema(), other.rows);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing IngestionRunSummary instance */
    private Builder(com.linkedin.pegasus2avro.metadata.run.IngestionRunSummary other) {
            super(com.linkedin.pegasus2avro.metadata.run.IngestionRunSummary.SCHEMA$);
      if (isValidValue(fields()[0], other.runId)) {
        this.runId = data().deepCopy(fields()[0].schema(), other.runId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[1].schema(), other.timestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.rows)) {
        this.rows = data().deepCopy(fields()[2].schema(), other.rows);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'runId' field */
    public java.lang.String getRunId() {
      return runId;
    }
    
    /** Sets the value of the 'runId' field */
    public com.linkedin.pegasus2avro.metadata.run.IngestionRunSummary.Builder setRunId(java.lang.String value) {
      validate(fields()[0], value);
      this.runId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'runId' field has been set */
    public boolean hasRunId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'runId' field */
    public com.linkedin.pegasus2avro.metadata.run.IngestionRunSummary.Builder clearRunId() {
      runId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'timestamp' field */
    public java.lang.Long getTimestamp() {
      return timestamp;
    }
    
    /** Sets the value of the 'timestamp' field */
    public com.linkedin.pegasus2avro.metadata.run.IngestionRunSummary.Builder setTimestamp(long value) {
      validate(fields()[1], value);
      this.timestamp = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'timestamp' field has been set */
    public boolean hasTimestamp() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'timestamp' field */
    public com.linkedin.pegasus2avro.metadata.run.IngestionRunSummary.Builder clearTimestamp() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'rows' field */
    public java.lang.Long getRows() {
      return rows;
    }
    
    /** Sets the value of the 'rows' field */
    public com.linkedin.pegasus2avro.metadata.run.IngestionRunSummary.Builder setRows(long value) {
      validate(fields()[2], value);
      this.rows = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'rows' field has been set */
    public boolean hasRows() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'rows' field */
    public com.linkedin.pegasus2avro.metadata.run.IngestionRunSummary.Builder clearRows() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public IngestionRunSummary build() {
      try {
        IngestionRunSummary record = new IngestionRunSummary();
        record.runId = fieldSetFlags()[0] ? this.runId : (java.lang.String) defaultValue(fields()[0]);
        record.timestamp = fieldSetFlags()[1] ? this.timestamp : (java.lang.Long) defaultValue(fields()[1]);
        record.rows = fieldSetFlags()[2] ? this.rows : (java.lang.Long) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
