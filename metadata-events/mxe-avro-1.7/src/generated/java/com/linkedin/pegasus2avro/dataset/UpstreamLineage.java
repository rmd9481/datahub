/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.dataset;  
@SuppressWarnings("all")
/** Upstream lineage of a dataset */
@org.apache.avro.specific.AvroGenerated
public class UpstreamLineage extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UpstreamLineage\",\"namespace\":\"com.linkedin.pegasus2avro.dataset\",\"doc\":\"Upstream lineage of a dataset\",\"fields\":[{\"name\":\"upstreams\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Upstream\",\"doc\":\"Upstream lineage information about a dataset including the source reporting the lineage\",\"fields\":[{\"name\":\"auditStamp\",\"type\":{\"type\":\"record\",\"name\":\"AuditStamp\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage.\",\"fields\":[{\"name\":\"time\",\"type\":\"long\",\"doc\":\"When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent.\"},{\"name\":\"actor\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change.\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"impersonator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor.\",\"default\":null,\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"message\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually.\",\"default\":null}]},\"doc\":\"Audit stamp containing who reported the lineage and when.\",\"default\":{\"actor\":\"urn:li:corpuser:unknown\",\"impersonator\":null,\"time\":0,\"message\":null}},{\"name\":\"created\",\"type\":[\"null\",\"com.linkedin.pegasus2avro.common.AuditStamp\"],\"doc\":\"Audit stamp containing who created the lineage and when.\",\"default\":null},{\"name\":\"dataset\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The upstream dataset the lineage points to\",\"Relationship\":{\"createdActor\":\"upstreams/*/created/actor\",\"createdOn\":\"upstreams/*/created/time\",\"entityTypes\":[\"dataset\"],\"isLineage\":true,\"name\":\"DownstreamOf\",\"properties\":\"upstreams/*/properties\",\"updatedActor\":\"upstreams/*/auditStamp/actor\",\"updatedOn\":\"upstreams/*/auditStamp/time\"},\"Searchable\":{\"fieldName\":\"upstreams\",\"fieldType\":\"URN\",\"queryByDefault\":false},\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.DatasetUrn\"}},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"DatasetLineageType\",\"doc\":\"The various types of supported dataset lineage\",\"symbols\":[\"COPY\",\"TRANSFORMED\",\"VIEW\"],\"symbolDocs\":{\"COPY\":\"Direct copy without modification\",\"TRANSFORMED\":\"Transformed data with modification (format or content change)\",\"VIEW\":\"Represents a view defined on the sources e.g. Hive view defined on underlying hive tables or a Hive table pointing to a HDFS dataset or DALI view defined on multiple sources\"}},\"doc\":\"The type of the lineage\"},{\"name\":\"properties\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}],\"doc\":\"A generic properties bag that allows us to store specific information on this graph edge.\",\"default\":null}]}},\"doc\":\"List of upstream dataset lineage information\"},{\"name\":\"fineGrainedLineages\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"FineGrainedLineage\",\"doc\":\"A fine-grained lineage from upstream fields/datasets to downstream field(s)\",\"fields\":[{\"name\":\"upstreamType\",\"type\":{\"type\":\"enum\",\"name\":\"FineGrainedLineageUpstreamType\",\"doc\":\"The type of upstream entity in a fine-grained lineage\",\"symbols\":[\"FIELD_SET\",\"DATASET\",\"NONE\"],\"symbolDocs\":{\"DATASET\":\" Indicates that this lineage is originating from upstream dataset(s)\",\"FIELD_SET\":\" Indicates that this lineage is originating from upstream field(s)\",\"NONE\":\" Indicates that there is no upstream lineage i.e. the downstream field is not a derived field\"}},\"doc\":\"The type of upstream entity\"},{\"name\":\"upstreams\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"Upstream entities in the lineage\",\"default\":null},{\"name\":\"downstreamType\",\"type\":{\"type\":\"enum\",\"name\":\"FineGrainedLineageDownstreamType\",\"doc\":\"The type of downstream field(s) in a fine-grained lineage\",\"symbols\":[\"FIELD\",\"FIELD_SET\"],\"symbolDocs\":{\"FIELD\":\" Indicates that the lineage is for a single, specific, downstream field\",\"FIELD_SET\":\" Indicates that the lineage is for a set of downstream fields\"}},\"doc\":\"The type of downstream field(s)\"},{\"name\":\"downstreams\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"Downstream fields in the lineage\",\"default\":null},{\"name\":\"transformOperation\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The transform operation applied to the upstream entities to produce the downstream field(s)\",\"default\":null},{\"name\":\"confidenceScore\",\"type\":\"float\",\"doc\":\"The confidence in this lineage between 0 (low confidence) and 1 (high confidence)\",\"default\":1.0}]}}],\"doc\":\" List of fine-grained lineage information, including field-level lineage\",\"default\":null,\"Relationship\":{\"/*/upstreams/*\":{\"entityTypes\":[\"dataset\",\"schemaField\"],\"name\":\"DownstreamOf\"}}}],\"Aspect\":{\"name\":\"upstreamLineage\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** List of upstream dataset lineage information */
  @Deprecated public java.util.List<com.linkedin.pegasus2avro.dataset.Upstream> upstreams;
  /**  List of fine-grained lineage information, including field-level lineage */
  @Deprecated public java.util.List<com.linkedin.pegasus2avro.dataset.FineGrainedLineage> fineGrainedLineages;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public UpstreamLineage() {}

  /**
   * All-args constructor.
   */
  public UpstreamLineage(java.util.List<com.linkedin.pegasus2avro.dataset.Upstream> upstreams, java.util.List<com.linkedin.pegasus2avro.dataset.FineGrainedLineage> fineGrainedLineages) {
    this.upstreams = upstreams;
    this.fineGrainedLineages = fineGrainedLineages;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return upstreams;
    case 1: return fineGrainedLineages;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: upstreams = (java.util.List<com.linkedin.pegasus2avro.dataset.Upstream>)value$; break;
    case 1: fineGrainedLineages = (java.util.List<com.linkedin.pegasus2avro.dataset.FineGrainedLineage>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'upstreams' field.
   * List of upstream dataset lineage information   */
  public java.util.List<com.linkedin.pegasus2avro.dataset.Upstream> getUpstreams() {
    return upstreams;
  }

  /**
   * Sets the value of the 'upstreams' field.
   * List of upstream dataset lineage information   * @param value the value to set.
   */
  public void setUpstreams(java.util.List<com.linkedin.pegasus2avro.dataset.Upstream> value) {
    this.upstreams = value;
  }

  /**
   * Gets the value of the 'fineGrainedLineages' field.
   *  List of fine-grained lineage information, including field-level lineage   */
  public java.util.List<com.linkedin.pegasus2avro.dataset.FineGrainedLineage> getFineGrainedLineages() {
    return fineGrainedLineages;
  }

  /**
   * Sets the value of the 'fineGrainedLineages' field.
   *  List of fine-grained lineage information, including field-level lineage   * @param value the value to set.
   */
  public void setFineGrainedLineages(java.util.List<com.linkedin.pegasus2avro.dataset.FineGrainedLineage> value) {
    this.fineGrainedLineages = value;
  }

  /** Creates a new UpstreamLineage RecordBuilder */
  public static com.linkedin.pegasus2avro.dataset.UpstreamLineage.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.dataset.UpstreamLineage.Builder();
  }
  
  /** Creates a new UpstreamLineage RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.dataset.UpstreamLineage.Builder newBuilder(com.linkedin.pegasus2avro.dataset.UpstreamLineage.Builder other) {
    return new com.linkedin.pegasus2avro.dataset.UpstreamLineage.Builder(other);
  }
  
  /** Creates a new UpstreamLineage RecordBuilder by copying an existing UpstreamLineage instance */
  public static com.linkedin.pegasus2avro.dataset.UpstreamLineage.Builder newBuilder(com.linkedin.pegasus2avro.dataset.UpstreamLineage other) {
    return new com.linkedin.pegasus2avro.dataset.UpstreamLineage.Builder(other);
  }
  
  /**
   * RecordBuilder for UpstreamLineage instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UpstreamLineage>
    implements org.apache.avro.data.RecordBuilder<UpstreamLineage> {

    private java.util.List<com.linkedin.pegasus2avro.dataset.Upstream> upstreams;
    private java.util.List<com.linkedin.pegasus2avro.dataset.FineGrainedLineage> fineGrainedLineages;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.dataset.UpstreamLineage.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.dataset.UpstreamLineage.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.upstreams)) {
        this.upstreams = data().deepCopy(fields()[0].schema(), other.upstreams);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.fineGrainedLineages)) {
        this.fineGrainedLineages = data().deepCopy(fields()[1].schema(), other.fineGrainedLineages);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing UpstreamLineage instance */
    private Builder(com.linkedin.pegasus2avro.dataset.UpstreamLineage other) {
            super(com.linkedin.pegasus2avro.dataset.UpstreamLineage.SCHEMA$);
      if (isValidValue(fields()[0], other.upstreams)) {
        this.upstreams = data().deepCopy(fields()[0].schema(), other.upstreams);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.fineGrainedLineages)) {
        this.fineGrainedLineages = data().deepCopy(fields()[1].schema(), other.fineGrainedLineages);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'upstreams' field */
    public java.util.List<com.linkedin.pegasus2avro.dataset.Upstream> getUpstreams() {
      return upstreams;
    }
    
    /** Sets the value of the 'upstreams' field */
    public com.linkedin.pegasus2avro.dataset.UpstreamLineage.Builder setUpstreams(java.util.List<com.linkedin.pegasus2avro.dataset.Upstream> value) {
      validate(fields()[0], value);
      this.upstreams = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'upstreams' field has been set */
    public boolean hasUpstreams() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'upstreams' field */
    public com.linkedin.pegasus2avro.dataset.UpstreamLineage.Builder clearUpstreams() {
      upstreams = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'fineGrainedLineages' field */
    public java.util.List<com.linkedin.pegasus2avro.dataset.FineGrainedLineage> getFineGrainedLineages() {
      return fineGrainedLineages;
    }
    
    /** Sets the value of the 'fineGrainedLineages' field */
    public com.linkedin.pegasus2avro.dataset.UpstreamLineage.Builder setFineGrainedLineages(java.util.List<com.linkedin.pegasus2avro.dataset.FineGrainedLineage> value) {
      validate(fields()[1], value);
      this.fineGrainedLineages = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'fineGrainedLineages' field has been set */
    public boolean hasFineGrainedLineages() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'fineGrainedLineages' field */
    public com.linkedin.pegasus2avro.dataset.UpstreamLineage.Builder clearFineGrainedLineages() {
      fineGrainedLineages = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public UpstreamLineage build() {
      try {
        UpstreamLineage record = new UpstreamLineage();
        record.upstreams = fieldSetFlags()[0] ? this.upstreams : (java.util.List<com.linkedin.pegasus2avro.dataset.Upstream>) defaultValue(fields()[0]);
        record.fineGrainedLineages = fieldSetFlags()[1] ? this.fineGrainedLineages : (java.util.List<com.linkedin.pegasus2avro.dataset.FineGrainedLineage>) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
