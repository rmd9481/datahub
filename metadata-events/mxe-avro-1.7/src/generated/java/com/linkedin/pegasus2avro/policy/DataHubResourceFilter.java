/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.policy;  
@SuppressWarnings("all")
/** Information used to filter DataHub resource. */
@org.apache.avro.specific.AvroGenerated
public class DataHubResourceFilter extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DataHubResourceFilter\",\"namespace\":\"com.linkedin.pegasus2avro.policy\",\"doc\":\"Information used to filter DataHub resource.\",\"fields\":[{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The type of resource that the policy applies to. This will most often be a data asset entity name, for\\nexample 'dataset'. It is not strictly required because in the future we will want to support filtering a resource\\nby domain, as well.\",\"default\":null,\"deprecated\":true},{\"name\":\"resources\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"A specific set of resources to apply the policy to, e.g. asset urns\",\"default\":null,\"deprecated\":true},{\"name\":\"allResources\",\"type\":\"boolean\",\"doc\":\"Whether the policy should be applied to all assets matching the filter.\",\"default\":false,\"deprecated\":true},{\"name\":\"filter\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"PolicyMatchFilter\",\"doc\":\"The filter for specifying the resource or actor to apply privileges to\",\"fields\":[{\"name\":\"criteria\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"PolicyMatchCriterion\",\"doc\":\"A criterion for matching a field with given value\",\"fields\":[{\"name\":\"field\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The name of the field that the criterion refers to\"},{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"doc\":\"Values. Matches criterion if any one of the values matches condition (OR-relationship)\"},{\"name\":\"condition\",\"type\":{\"type\":\"enum\",\"name\":\"PolicyMatchCondition\",\"doc\":\"The matching condition in a filter criterion\",\"symbols\":[\"EQUALS\"],\"symbolDocs\":{\"EQUALS\":\"Whether the field matches the value\"}},\"doc\":\"The condition for the criterion\",\"default\":\"EQUALS\"}]}},\"doc\":\"A list of criteria to apply conjunctively (so all criteria must pass)\"}]}],\"doc\":\"Filter to apply privileges to\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The type of resource that the policy applies to. This will most often be a data asset entity name, for
example 'dataset'. It is not strictly required because in the future we will want to support filtering a resource
by domain, as well. */
  @Deprecated public java.lang.String type;
  /** A specific set of resources to apply the policy to, e.g. asset urns */
  @Deprecated public java.util.List<java.lang.String> resources;
  /** Whether the policy should be applied to all assets matching the filter. */
  @Deprecated public boolean allResources;
  /** Filter to apply privileges to */
  @Deprecated public com.linkedin.pegasus2avro.policy.PolicyMatchFilter filter;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public DataHubResourceFilter() {}

  /**
   * All-args constructor.
   */
  public DataHubResourceFilter(java.lang.String type, java.util.List<java.lang.String> resources, java.lang.Boolean allResources, com.linkedin.pegasus2avro.policy.PolicyMatchFilter filter) {
    this.type = type;
    this.resources = resources;
    this.allResources = allResources;
    this.filter = filter;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return type;
    case 1: return resources;
    case 2: return allResources;
    case 3: return filter;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: type = (java.lang.String)value$; break;
    case 1: resources = (java.util.List<java.lang.String>)value$; break;
    case 2: allResources = (java.lang.Boolean)value$; break;
    case 3: filter = (com.linkedin.pegasus2avro.policy.PolicyMatchFilter)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'type' field.
   * The type of resource that the policy applies to. This will most often be a data asset entity name, for
example 'dataset'. It is not strictly required because in the future we will want to support filtering a resource
by domain, as well.   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * The type of resource that the policy applies to. This will most often be a data asset entity name, for
example 'dataset'. It is not strictly required because in the future we will want to support filtering a resource
by domain, as well.   * @param value the value to set.
   */
  public void setType(java.lang.String value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'resources' field.
   * A specific set of resources to apply the policy to, e.g. asset urns   */
  public java.util.List<java.lang.String> getResources() {
    return resources;
  }

  /**
   * Sets the value of the 'resources' field.
   * A specific set of resources to apply the policy to, e.g. asset urns   * @param value the value to set.
   */
  public void setResources(java.util.List<java.lang.String> value) {
    this.resources = value;
  }

  /**
   * Gets the value of the 'allResources' field.
   * Whether the policy should be applied to all assets matching the filter.   */
  public java.lang.Boolean getAllResources() {
    return allResources;
  }

  /**
   * Sets the value of the 'allResources' field.
   * Whether the policy should be applied to all assets matching the filter.   * @param value the value to set.
   */
  public void setAllResources(java.lang.Boolean value) {
    this.allResources = value;
  }

  /**
   * Gets the value of the 'filter' field.
   * Filter to apply privileges to   */
  public com.linkedin.pegasus2avro.policy.PolicyMatchFilter getFilter() {
    return filter;
  }

  /**
   * Sets the value of the 'filter' field.
   * Filter to apply privileges to   * @param value the value to set.
   */
  public void setFilter(com.linkedin.pegasus2avro.policy.PolicyMatchFilter value) {
    this.filter = value;
  }

  /** Creates a new DataHubResourceFilter RecordBuilder */
  public static com.linkedin.pegasus2avro.policy.DataHubResourceFilter.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.policy.DataHubResourceFilter.Builder();
  }
  
  /** Creates a new DataHubResourceFilter RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.policy.DataHubResourceFilter.Builder newBuilder(com.linkedin.pegasus2avro.policy.DataHubResourceFilter.Builder other) {
    return new com.linkedin.pegasus2avro.policy.DataHubResourceFilter.Builder(other);
  }
  
  /** Creates a new DataHubResourceFilter RecordBuilder by copying an existing DataHubResourceFilter instance */
  public static com.linkedin.pegasus2avro.policy.DataHubResourceFilter.Builder newBuilder(com.linkedin.pegasus2avro.policy.DataHubResourceFilter other) {
    return new com.linkedin.pegasus2avro.policy.DataHubResourceFilter.Builder(other);
  }
  
  /**
   * RecordBuilder for DataHubResourceFilter instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DataHubResourceFilter>
    implements org.apache.avro.data.RecordBuilder<DataHubResourceFilter> {

    private java.lang.String type;
    private java.util.List<java.lang.String> resources;
    private boolean allResources;
    private com.linkedin.pegasus2avro.policy.PolicyMatchFilter filter;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.policy.DataHubResourceFilter.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.policy.DataHubResourceFilter.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.resources)) {
        this.resources = data().deepCopy(fields()[1].schema(), other.resources);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.allResources)) {
        this.allResources = data().deepCopy(fields()[2].schema(), other.allResources);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.filter)) {
        this.filter = data().deepCopy(fields()[3].schema(), other.filter);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing DataHubResourceFilter instance */
    private Builder(com.linkedin.pegasus2avro.policy.DataHubResourceFilter other) {
            super(com.linkedin.pegasus2avro.policy.DataHubResourceFilter.SCHEMA$);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.resources)) {
        this.resources = data().deepCopy(fields()[1].schema(), other.resources);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.allResources)) {
        this.allResources = data().deepCopy(fields()[2].schema(), other.allResources);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.filter)) {
        this.filter = data().deepCopy(fields()[3].schema(), other.filter);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'type' field */
    public java.lang.String getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public com.linkedin.pegasus2avro.policy.DataHubResourceFilter.Builder setType(java.lang.String value) {
      validate(fields()[0], value);
      this.type = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'type' field */
    public com.linkedin.pegasus2avro.policy.DataHubResourceFilter.Builder clearType() {
      type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'resources' field */
    public java.util.List<java.lang.String> getResources() {
      return resources;
    }
    
    /** Sets the value of the 'resources' field */
    public com.linkedin.pegasus2avro.policy.DataHubResourceFilter.Builder setResources(java.util.List<java.lang.String> value) {
      validate(fields()[1], value);
      this.resources = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'resources' field has been set */
    public boolean hasResources() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'resources' field */
    public com.linkedin.pegasus2avro.policy.DataHubResourceFilter.Builder clearResources() {
      resources = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'allResources' field */
    public java.lang.Boolean getAllResources() {
      return allResources;
    }
    
    /** Sets the value of the 'allResources' field */
    public com.linkedin.pegasus2avro.policy.DataHubResourceFilter.Builder setAllResources(boolean value) {
      validate(fields()[2], value);
      this.allResources = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'allResources' field has been set */
    public boolean hasAllResources() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'allResources' field */
    public com.linkedin.pegasus2avro.policy.DataHubResourceFilter.Builder clearAllResources() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'filter' field */
    public com.linkedin.pegasus2avro.policy.PolicyMatchFilter getFilter() {
      return filter;
    }
    
    /** Sets the value of the 'filter' field */
    public com.linkedin.pegasus2avro.policy.DataHubResourceFilter.Builder setFilter(com.linkedin.pegasus2avro.policy.PolicyMatchFilter value) {
      validate(fields()[3], value);
      this.filter = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'filter' field has been set */
    public boolean hasFilter() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'filter' field */
    public com.linkedin.pegasus2avro.policy.DataHubResourceFilter.Builder clearFilter() {
      filter = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public DataHubResourceFilter build() {
      try {
        DataHubResourceFilter record = new DataHubResourceFilter();
        record.type = fieldSetFlags()[0] ? this.type : (java.lang.String) defaultValue(fields()[0]);
        record.resources = fieldSetFlags()[1] ? this.resources : (java.util.List<java.lang.String>) defaultValue(fields()[1]);
        record.allResources = fieldSetFlags()[2] ? this.allResources : (java.lang.Boolean) defaultValue(fields()[2]);
        record.filter = fieldSetFlags()[3] ? this.filter : (com.linkedin.pegasus2avro.policy.PolicyMatchFilter) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
