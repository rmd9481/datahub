/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.common;  
@SuppressWarnings("all")
/** A standard event timestamp */
@org.apache.avro.specific.AvroGenerated
public class TimeStamp extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TimeStamp\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"A standard event timestamp\",\"fields\":[{\"name\":\"time\",\"type\":\"long\",\"doc\":\"When did the event occur\"},{\"name\":\"actor\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Optional: The actor urn involved in the event.\",\"default\":null,\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** When did the event occur */
  @Deprecated public long time;
  /** Optional: The actor urn involved in the event. */
  @Deprecated public java.lang.String actor;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public TimeStamp() {}

  /**
   * All-args constructor.
   */
  public TimeStamp(java.lang.Long time, java.lang.String actor) {
    this.time = time;
    this.actor = actor;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return time;
    case 1: return actor;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: time = (java.lang.Long)value$; break;
    case 1: actor = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'time' field.
   * When did the event occur   */
  public java.lang.Long getTime() {
    return time;
  }

  /**
   * Sets the value of the 'time' field.
   * When did the event occur   * @param value the value to set.
   */
  public void setTime(java.lang.Long value) {
    this.time = value;
  }

  /**
   * Gets the value of the 'actor' field.
   * Optional: The actor urn involved in the event.   */
  public java.lang.String getActor() {
    return actor;
  }

  /**
   * Sets the value of the 'actor' field.
   * Optional: The actor urn involved in the event.   * @param value the value to set.
   */
  public void setActor(java.lang.String value) {
    this.actor = value;
  }

  /** Creates a new TimeStamp RecordBuilder */
  public static com.linkedin.pegasus2avro.common.TimeStamp.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.common.TimeStamp.Builder();
  }
  
  /** Creates a new TimeStamp RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.common.TimeStamp.Builder newBuilder(com.linkedin.pegasus2avro.common.TimeStamp.Builder other) {
    return new com.linkedin.pegasus2avro.common.TimeStamp.Builder(other);
  }
  
  /** Creates a new TimeStamp RecordBuilder by copying an existing TimeStamp instance */
  public static com.linkedin.pegasus2avro.common.TimeStamp.Builder newBuilder(com.linkedin.pegasus2avro.common.TimeStamp other) {
    return new com.linkedin.pegasus2avro.common.TimeStamp.Builder(other);
  }
  
  /**
   * RecordBuilder for TimeStamp instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TimeStamp>
    implements org.apache.avro.data.RecordBuilder<TimeStamp> {

    private long time;
    private java.lang.String actor;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.common.TimeStamp.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.common.TimeStamp.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.time)) {
        this.time = data().deepCopy(fields()[0].schema(), other.time);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.actor)) {
        this.actor = data().deepCopy(fields()[1].schema(), other.actor);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing TimeStamp instance */
    private Builder(com.linkedin.pegasus2avro.common.TimeStamp other) {
            super(com.linkedin.pegasus2avro.common.TimeStamp.SCHEMA$);
      if (isValidValue(fields()[0], other.time)) {
        this.time = data().deepCopy(fields()[0].schema(), other.time);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.actor)) {
        this.actor = data().deepCopy(fields()[1].schema(), other.actor);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'time' field */
    public java.lang.Long getTime() {
      return time;
    }
    
    /** Sets the value of the 'time' field */
    public com.linkedin.pegasus2avro.common.TimeStamp.Builder setTime(long value) {
      validate(fields()[0], value);
      this.time = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'time' field has been set */
    public boolean hasTime() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'time' field */
    public com.linkedin.pegasus2avro.common.TimeStamp.Builder clearTime() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'actor' field */
    public java.lang.String getActor() {
      return actor;
    }
    
    /** Sets the value of the 'actor' field */
    public com.linkedin.pegasus2avro.common.TimeStamp.Builder setActor(java.lang.String value) {
      validate(fields()[1], value);
      this.actor = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'actor' field has been set */
    public boolean hasActor() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'actor' field */
    public com.linkedin.pegasus2avro.common.TimeStamp.Builder clearActor() {
      actor = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public TimeStamp build() {
      try {
        TimeStamp record = new TimeStamp();
        record.time = fieldSetFlags()[0] ? this.time : (java.lang.Long) defaultValue(fields()[0]);
        record.actor = fieldSetFlags()[1] ? this.actor : (java.lang.String) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
