/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.common;  
@SuppressWarnings("all")
/** Shared aspect containing Browse Paths to be indexed for an entity. */
@org.apache.avro.specific.AvroGenerated
public class BrowsePaths extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BrowsePaths\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"Shared aspect containing Browse Paths to be indexed for an entity.\",\"fields\":[{\"name\":\"paths\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"doc\":\"A list of valid browse paths for the entity.\\n\\nBrowse paths are expected to be forward slash-separated strings. For example: 'prod/snowflake/datasetName'\",\"Searchable\":{\"/*\":{\"fieldName\":\"browsePaths\",\"fieldType\":\"BROWSE_PATH\"}}}],\"Aspect\":{\"name\":\"browsePaths\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** A list of valid browse paths for the entity.

Browse paths are expected to be forward slash-separated strings. For example: 'prod/snowflake/datasetName' */
  @Deprecated public java.util.List<java.lang.String> paths;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public BrowsePaths() {}

  /**
   * All-args constructor.
   */
  public BrowsePaths(java.util.List<java.lang.String> paths) {
    this.paths = paths;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return paths;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: paths = (java.util.List<java.lang.String>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'paths' field.
   * A list of valid browse paths for the entity.

Browse paths are expected to be forward slash-separated strings. For example: 'prod/snowflake/datasetName'   */
  public java.util.List<java.lang.String> getPaths() {
    return paths;
  }

  /**
   * Sets the value of the 'paths' field.
   * A list of valid browse paths for the entity.

Browse paths are expected to be forward slash-separated strings. For example: 'prod/snowflake/datasetName'   * @param value the value to set.
   */
  public void setPaths(java.util.List<java.lang.String> value) {
    this.paths = value;
  }

  /** Creates a new BrowsePaths RecordBuilder */
  public static com.linkedin.pegasus2avro.common.BrowsePaths.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.common.BrowsePaths.Builder();
  }
  
  /** Creates a new BrowsePaths RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.common.BrowsePaths.Builder newBuilder(com.linkedin.pegasus2avro.common.BrowsePaths.Builder other) {
    return new com.linkedin.pegasus2avro.common.BrowsePaths.Builder(other);
  }
  
  /** Creates a new BrowsePaths RecordBuilder by copying an existing BrowsePaths instance */
  public static com.linkedin.pegasus2avro.common.BrowsePaths.Builder newBuilder(com.linkedin.pegasus2avro.common.BrowsePaths other) {
    return new com.linkedin.pegasus2avro.common.BrowsePaths.Builder(other);
  }
  
  /**
   * RecordBuilder for BrowsePaths instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BrowsePaths>
    implements org.apache.avro.data.RecordBuilder<BrowsePaths> {

    private java.util.List<java.lang.String> paths;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.common.BrowsePaths.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.common.BrowsePaths.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.paths)) {
        this.paths = data().deepCopy(fields()[0].schema(), other.paths);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing BrowsePaths instance */
    private Builder(com.linkedin.pegasus2avro.common.BrowsePaths other) {
            super(com.linkedin.pegasus2avro.common.BrowsePaths.SCHEMA$);
      if (isValidValue(fields()[0], other.paths)) {
        this.paths = data().deepCopy(fields()[0].schema(), other.paths);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'paths' field */
    public java.util.List<java.lang.String> getPaths() {
      return paths;
    }
    
    /** Sets the value of the 'paths' field */
    public com.linkedin.pegasus2avro.common.BrowsePaths.Builder setPaths(java.util.List<java.lang.String> value) {
      validate(fields()[0], value);
      this.paths = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'paths' field has been set */
    public boolean hasPaths() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'paths' field */
    public com.linkedin.pegasus2avro.common.BrowsePaths.Builder clearPaths() {
      paths = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public BrowsePaths build() {
      try {
        BrowsePaths record = new BrowsePaths();
        record.paths = fieldSetFlags()[0] ? this.paths : (java.util.List<java.lang.String>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
