/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.chart;  
@SuppressWarnings("all")
/** Records a single user's usage counts for a given resource */
@org.apache.avro.specific.AvroGenerated
public class ChartUserUsageCounts extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ChartUserUsageCounts\",\"namespace\":\"com.linkedin.pegasus2avro.chart\",\"doc\":\"Records a single user's usage counts for a given resource\",\"fields\":[{\"name\":\"user\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The unique id of the user.\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"viewsCount\",\"type\":[\"null\",\"int\"],\"doc\":\"The number of times the user has viewed the chart\",\"default\":null,\"TimeseriesField\":{}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The unique id of the user. */
  @Deprecated public java.lang.String user;
  /** The number of times the user has viewed the chart */
  @Deprecated public java.lang.Integer viewsCount;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ChartUserUsageCounts() {}

  /**
   * All-args constructor.
   */
  public ChartUserUsageCounts(java.lang.String user, java.lang.Integer viewsCount) {
    this.user = user;
    this.viewsCount = viewsCount;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return user;
    case 1: return viewsCount;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: user = (java.lang.String)value$; break;
    case 1: viewsCount = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'user' field.
   * The unique id of the user.   */
  public java.lang.String getUser() {
    return user;
  }

  /**
   * Sets the value of the 'user' field.
   * The unique id of the user.   * @param value the value to set.
   */
  public void setUser(java.lang.String value) {
    this.user = value;
  }

  /**
   * Gets the value of the 'viewsCount' field.
   * The number of times the user has viewed the chart   */
  public java.lang.Integer getViewsCount() {
    return viewsCount;
  }

  /**
   * Sets the value of the 'viewsCount' field.
   * The number of times the user has viewed the chart   * @param value the value to set.
   */
  public void setViewsCount(java.lang.Integer value) {
    this.viewsCount = value;
  }

  /** Creates a new ChartUserUsageCounts RecordBuilder */
  public static com.linkedin.pegasus2avro.chart.ChartUserUsageCounts.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.chart.ChartUserUsageCounts.Builder();
  }
  
  /** Creates a new ChartUserUsageCounts RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.chart.ChartUserUsageCounts.Builder newBuilder(com.linkedin.pegasus2avro.chart.ChartUserUsageCounts.Builder other) {
    return new com.linkedin.pegasus2avro.chart.ChartUserUsageCounts.Builder(other);
  }
  
  /** Creates a new ChartUserUsageCounts RecordBuilder by copying an existing ChartUserUsageCounts instance */
  public static com.linkedin.pegasus2avro.chart.ChartUserUsageCounts.Builder newBuilder(com.linkedin.pegasus2avro.chart.ChartUserUsageCounts other) {
    return new com.linkedin.pegasus2avro.chart.ChartUserUsageCounts.Builder(other);
  }
  
  /**
   * RecordBuilder for ChartUserUsageCounts instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ChartUserUsageCounts>
    implements org.apache.avro.data.RecordBuilder<ChartUserUsageCounts> {

    private java.lang.String user;
    private java.lang.Integer viewsCount;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.chart.ChartUserUsageCounts.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.chart.ChartUserUsageCounts.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.user)) {
        this.user = data().deepCopy(fields()[0].schema(), other.user);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.viewsCount)) {
        this.viewsCount = data().deepCopy(fields()[1].schema(), other.viewsCount);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ChartUserUsageCounts instance */
    private Builder(com.linkedin.pegasus2avro.chart.ChartUserUsageCounts other) {
            super(com.linkedin.pegasus2avro.chart.ChartUserUsageCounts.SCHEMA$);
      if (isValidValue(fields()[0], other.user)) {
        this.user = data().deepCopy(fields()[0].schema(), other.user);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.viewsCount)) {
        this.viewsCount = data().deepCopy(fields()[1].schema(), other.viewsCount);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'user' field */
    public java.lang.String getUser() {
      return user;
    }
    
    /** Sets the value of the 'user' field */
    public com.linkedin.pegasus2avro.chart.ChartUserUsageCounts.Builder setUser(java.lang.String value) {
      validate(fields()[0], value);
      this.user = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'user' field has been set */
    public boolean hasUser() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'user' field */
    public com.linkedin.pegasus2avro.chart.ChartUserUsageCounts.Builder clearUser() {
      user = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'viewsCount' field */
    public java.lang.Integer getViewsCount() {
      return viewsCount;
    }
    
    /** Sets the value of the 'viewsCount' field */
    public com.linkedin.pegasus2avro.chart.ChartUserUsageCounts.Builder setViewsCount(java.lang.Integer value) {
      validate(fields()[1], value);
      this.viewsCount = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'viewsCount' field has been set */
    public boolean hasViewsCount() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'viewsCount' field */
    public com.linkedin.pegasus2avro.chart.ChartUserUsageCounts.Builder clearViewsCount() {
      viewsCount = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public ChartUserUsageCounts build() {
      try {
        ChartUserUsageCounts record = new ChartUserUsageCounts();
        record.user = fieldSetFlags()[0] ? this.user : (java.lang.String) defaultValue(fields()[0]);
        record.viewsCount = fieldSetFlags()[1] ? this.viewsCount : (java.lang.Integer) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
