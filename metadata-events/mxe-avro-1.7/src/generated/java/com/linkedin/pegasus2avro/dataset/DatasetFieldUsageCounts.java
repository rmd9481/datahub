/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.dataset;  
@SuppressWarnings("all")
/** Records field-level usage counts for a given dataset */
@org.apache.avro.specific.AvroGenerated
public class DatasetFieldUsageCounts extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DatasetFieldUsageCounts\",\"namespace\":\"com.linkedin.pegasus2avro.dataset\",\"doc\":\"Records field-level usage counts for a given dataset\",\"fields\":[{\"name\":\"fieldPath\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The name of the field.\"},{\"name\":\"count\",\"type\":\"int\",\"doc\":\"Number of times the field has been used.\",\"TimeseriesField\":{}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The name of the field. */
  @Deprecated public java.lang.String fieldPath;
  /** Number of times the field has been used. */
  @Deprecated public int count;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public DatasetFieldUsageCounts() {}

  /**
   * All-args constructor.
   */
  public DatasetFieldUsageCounts(java.lang.String fieldPath, java.lang.Integer count) {
    this.fieldPath = fieldPath;
    this.count = count;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return fieldPath;
    case 1: return count;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: fieldPath = (java.lang.String)value$; break;
    case 1: count = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'fieldPath' field.
   * The name of the field.   */
  public java.lang.String getFieldPath() {
    return fieldPath;
  }

  /**
   * Sets the value of the 'fieldPath' field.
   * The name of the field.   * @param value the value to set.
   */
  public void setFieldPath(java.lang.String value) {
    this.fieldPath = value;
  }

  /**
   * Gets the value of the 'count' field.
   * Number of times the field has been used.   */
  public java.lang.Integer getCount() {
    return count;
  }

  /**
   * Sets the value of the 'count' field.
   * Number of times the field has been used.   * @param value the value to set.
   */
  public void setCount(java.lang.Integer value) {
    this.count = value;
  }

  /** Creates a new DatasetFieldUsageCounts RecordBuilder */
  public static com.linkedin.pegasus2avro.dataset.DatasetFieldUsageCounts.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.dataset.DatasetFieldUsageCounts.Builder();
  }
  
  /** Creates a new DatasetFieldUsageCounts RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.dataset.DatasetFieldUsageCounts.Builder newBuilder(com.linkedin.pegasus2avro.dataset.DatasetFieldUsageCounts.Builder other) {
    return new com.linkedin.pegasus2avro.dataset.DatasetFieldUsageCounts.Builder(other);
  }
  
  /** Creates a new DatasetFieldUsageCounts RecordBuilder by copying an existing DatasetFieldUsageCounts instance */
  public static com.linkedin.pegasus2avro.dataset.DatasetFieldUsageCounts.Builder newBuilder(com.linkedin.pegasus2avro.dataset.DatasetFieldUsageCounts other) {
    return new com.linkedin.pegasus2avro.dataset.DatasetFieldUsageCounts.Builder(other);
  }
  
  /**
   * RecordBuilder for DatasetFieldUsageCounts instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DatasetFieldUsageCounts>
    implements org.apache.avro.data.RecordBuilder<DatasetFieldUsageCounts> {

    private java.lang.String fieldPath;
    private int count;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.dataset.DatasetFieldUsageCounts.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.dataset.DatasetFieldUsageCounts.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.fieldPath)) {
        this.fieldPath = data().deepCopy(fields()[0].schema(), other.fieldPath);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.count)) {
        this.count = data().deepCopy(fields()[1].schema(), other.count);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing DatasetFieldUsageCounts instance */
    private Builder(com.linkedin.pegasus2avro.dataset.DatasetFieldUsageCounts other) {
            super(com.linkedin.pegasus2avro.dataset.DatasetFieldUsageCounts.SCHEMA$);
      if (isValidValue(fields()[0], other.fieldPath)) {
        this.fieldPath = data().deepCopy(fields()[0].schema(), other.fieldPath);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.count)) {
        this.count = data().deepCopy(fields()[1].schema(), other.count);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'fieldPath' field */
    public java.lang.String getFieldPath() {
      return fieldPath;
    }
    
    /** Sets the value of the 'fieldPath' field */
    public com.linkedin.pegasus2avro.dataset.DatasetFieldUsageCounts.Builder setFieldPath(java.lang.String value) {
      validate(fields()[0], value);
      this.fieldPath = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'fieldPath' field has been set */
    public boolean hasFieldPath() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'fieldPath' field */
    public com.linkedin.pegasus2avro.dataset.DatasetFieldUsageCounts.Builder clearFieldPath() {
      fieldPath = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'count' field */
    public java.lang.Integer getCount() {
      return count;
    }
    
    /** Sets the value of the 'count' field */
    public com.linkedin.pegasus2avro.dataset.DatasetFieldUsageCounts.Builder setCount(int value) {
      validate(fields()[1], value);
      this.count = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'count' field has been set */
    public boolean hasCount() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'count' field */
    public com.linkedin.pegasus2avro.dataset.DatasetFieldUsageCounts.Builder clearCount() {
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public DatasetFieldUsageCounts build() {
      try {
        DatasetFieldUsageCounts record = new DatasetFieldUsageCounts();
        record.fieldPath = fieldSetFlags()[0] ? this.fieldPath : (java.lang.String) defaultValue(fields()[0]);
        record.count = fieldSetFlags()[1] ? this.count : (java.lang.Integer) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
