/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.timeseries;  
@SuppressWarnings("all")
/** Encapsulates the response of the getIndexSizes API */
@org.apache.avro.specific.AvroGenerated
public class TimeseriesIndicesSizesResult extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TimeseriesIndicesSizesResult\",\"namespace\":\"com.linkedin.pegasus2avro.timeseries\",\"doc\":\"Encapsulates the response of the getIndexSizes API\",\"fields\":[{\"name\":\"indexSizes\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TimeseriesIndexSizeResult\",\"doc\":\"Encapsulates the response of the getIndexSizes API\",\"fields\":[{\"name\":\"indexName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Name of the index\"},{\"name\":\"entityName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Name of the entity associated with the index\"},{\"name\":\"aspectName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Name of the aspect associated with the index\"},{\"name\":\"sizeMb\",\"type\":\"float\",\"doc\":\"Size\",\"default\":0.0}]}},\"doc\":\"Collection of index sizes for all indices in the result\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Collection of index sizes for all indices in the result */
  @Deprecated public java.util.List<com.linkedin.pegasus2avro.timeseries.TimeseriesIndexSizeResult> indexSizes;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public TimeseriesIndicesSizesResult() {}

  /**
   * All-args constructor.
   */
  public TimeseriesIndicesSizesResult(java.util.List<com.linkedin.pegasus2avro.timeseries.TimeseriesIndexSizeResult> indexSizes) {
    this.indexSizes = indexSizes;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return indexSizes;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: indexSizes = (java.util.List<com.linkedin.pegasus2avro.timeseries.TimeseriesIndexSizeResult>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'indexSizes' field.
   * Collection of index sizes for all indices in the result   */
  public java.util.List<com.linkedin.pegasus2avro.timeseries.TimeseriesIndexSizeResult> getIndexSizes() {
    return indexSizes;
  }

  /**
   * Sets the value of the 'indexSizes' field.
   * Collection of index sizes for all indices in the result   * @param value the value to set.
   */
  public void setIndexSizes(java.util.List<com.linkedin.pegasus2avro.timeseries.TimeseriesIndexSizeResult> value) {
    this.indexSizes = value;
  }

  /** Creates a new TimeseriesIndicesSizesResult RecordBuilder */
  public static com.linkedin.pegasus2avro.timeseries.TimeseriesIndicesSizesResult.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.timeseries.TimeseriesIndicesSizesResult.Builder();
  }
  
  /** Creates a new TimeseriesIndicesSizesResult RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.timeseries.TimeseriesIndicesSizesResult.Builder newBuilder(com.linkedin.pegasus2avro.timeseries.TimeseriesIndicesSizesResult.Builder other) {
    return new com.linkedin.pegasus2avro.timeseries.TimeseriesIndicesSizesResult.Builder(other);
  }
  
  /** Creates a new TimeseriesIndicesSizesResult RecordBuilder by copying an existing TimeseriesIndicesSizesResult instance */
  public static com.linkedin.pegasus2avro.timeseries.TimeseriesIndicesSizesResult.Builder newBuilder(com.linkedin.pegasus2avro.timeseries.TimeseriesIndicesSizesResult other) {
    return new com.linkedin.pegasus2avro.timeseries.TimeseriesIndicesSizesResult.Builder(other);
  }
  
  /**
   * RecordBuilder for TimeseriesIndicesSizesResult instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TimeseriesIndicesSizesResult>
    implements org.apache.avro.data.RecordBuilder<TimeseriesIndicesSizesResult> {

    private java.util.List<com.linkedin.pegasus2avro.timeseries.TimeseriesIndexSizeResult> indexSizes;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.timeseries.TimeseriesIndicesSizesResult.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.timeseries.TimeseriesIndicesSizesResult.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.indexSizes)) {
        this.indexSizes = data().deepCopy(fields()[0].schema(), other.indexSizes);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing TimeseriesIndicesSizesResult instance */
    private Builder(com.linkedin.pegasus2avro.timeseries.TimeseriesIndicesSizesResult other) {
            super(com.linkedin.pegasus2avro.timeseries.TimeseriesIndicesSizesResult.SCHEMA$);
      if (isValidValue(fields()[0], other.indexSizes)) {
        this.indexSizes = data().deepCopy(fields()[0].schema(), other.indexSizes);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'indexSizes' field */
    public java.util.List<com.linkedin.pegasus2avro.timeseries.TimeseriesIndexSizeResult> getIndexSizes() {
      return indexSizes;
    }
    
    /** Sets the value of the 'indexSizes' field */
    public com.linkedin.pegasus2avro.timeseries.TimeseriesIndicesSizesResult.Builder setIndexSizes(java.util.List<com.linkedin.pegasus2avro.timeseries.TimeseriesIndexSizeResult> value) {
      validate(fields()[0], value);
      this.indexSizes = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'indexSizes' field has been set */
    public boolean hasIndexSizes() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'indexSizes' field */
    public com.linkedin.pegasus2avro.timeseries.TimeseriesIndicesSizesResult.Builder clearIndexSizes() {
      indexSizes = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public TimeseriesIndicesSizesResult build() {
      try {
        TimeseriesIndicesSizesResult record = new TimeseriesIndicesSizesResult();
        record.indexSizes = fieldSetFlags()[0] ? this.indexSizes : (java.util.List<com.linkedin.pegasus2avro.timeseries.TimeseriesIndexSizeResult>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
