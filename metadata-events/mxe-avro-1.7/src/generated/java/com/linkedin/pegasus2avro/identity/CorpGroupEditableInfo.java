/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.identity;  
@SuppressWarnings("all")
/** Group information that can be edited from UI */
@org.apache.avro.specific.AvroGenerated
public class CorpGroupEditableInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CorpGroupEditableInfo\",\"namespace\":\"com.linkedin.pegasus2avro.identity\",\"doc\":\"Group information that can be edited from UI\",\"fields\":[{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"A description of the group\",\"default\":null,\"Searchable\":{\"fieldName\":\"editedDescription\",\"fieldType\":\"TEXT\"}},{\"name\":\"pictureLink\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"A URL which points to a picture which user wants to set as the photo for the group\",\"default\":\"https://raw.githubusercontent.com/datahub-project/datahub/master/datahub-web-react/src/images/default_avatar.png\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.url.Url\",\"coercerClass\":\"com.linkedin.pegasus2avro.common.url.UrlCoercer\"}},{\"name\":\"slack\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Slack channel for the group\",\"default\":null},{\"name\":\"email\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Email address to contact the group\",\"default\":null}],\"Aspect\":{\"name\":\"corpGroupEditableInfo\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** A description of the group */
  @Deprecated public java.lang.String description;
  /** A URL which points to a picture which user wants to set as the photo for the group */
  @Deprecated public java.lang.String pictureLink;
  /** Slack channel for the group */
  @Deprecated public java.lang.String slack;
  /** Email address to contact the group */
  @Deprecated public java.lang.String email;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public CorpGroupEditableInfo() {}

  /**
   * All-args constructor.
   */
  public CorpGroupEditableInfo(java.lang.String description, java.lang.String pictureLink, java.lang.String slack, java.lang.String email) {
    this.description = description;
    this.pictureLink = pictureLink;
    this.slack = slack;
    this.email = email;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return description;
    case 1: return pictureLink;
    case 2: return slack;
    case 3: return email;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: description = (java.lang.String)value$; break;
    case 1: pictureLink = (java.lang.String)value$; break;
    case 2: slack = (java.lang.String)value$; break;
    case 3: email = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'description' field.
   * A description of the group   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * A description of the group   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'pictureLink' field.
   * A URL which points to a picture which user wants to set as the photo for the group   */
  public java.lang.String getPictureLink() {
    return pictureLink;
  }

  /**
   * Sets the value of the 'pictureLink' field.
   * A URL which points to a picture which user wants to set as the photo for the group   * @param value the value to set.
   */
  public void setPictureLink(java.lang.String value) {
    this.pictureLink = value;
  }

  /**
   * Gets the value of the 'slack' field.
   * Slack channel for the group   */
  public java.lang.String getSlack() {
    return slack;
  }

  /**
   * Sets the value of the 'slack' field.
   * Slack channel for the group   * @param value the value to set.
   */
  public void setSlack(java.lang.String value) {
    this.slack = value;
  }

  /**
   * Gets the value of the 'email' field.
   * Email address to contact the group   */
  public java.lang.String getEmail() {
    return email;
  }

  /**
   * Sets the value of the 'email' field.
   * Email address to contact the group   * @param value the value to set.
   */
  public void setEmail(java.lang.String value) {
    this.email = value;
  }

  /** Creates a new CorpGroupEditableInfo RecordBuilder */
  public static com.linkedin.pegasus2avro.identity.CorpGroupEditableInfo.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.identity.CorpGroupEditableInfo.Builder();
  }
  
  /** Creates a new CorpGroupEditableInfo RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.identity.CorpGroupEditableInfo.Builder newBuilder(com.linkedin.pegasus2avro.identity.CorpGroupEditableInfo.Builder other) {
    return new com.linkedin.pegasus2avro.identity.CorpGroupEditableInfo.Builder(other);
  }
  
  /** Creates a new CorpGroupEditableInfo RecordBuilder by copying an existing CorpGroupEditableInfo instance */
  public static com.linkedin.pegasus2avro.identity.CorpGroupEditableInfo.Builder newBuilder(com.linkedin.pegasus2avro.identity.CorpGroupEditableInfo other) {
    return new com.linkedin.pegasus2avro.identity.CorpGroupEditableInfo.Builder(other);
  }
  
  /**
   * RecordBuilder for CorpGroupEditableInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CorpGroupEditableInfo>
    implements org.apache.avro.data.RecordBuilder<CorpGroupEditableInfo> {

    private java.lang.String description;
    private java.lang.String pictureLink;
    private java.lang.String slack;
    private java.lang.String email;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.identity.CorpGroupEditableInfo.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.identity.CorpGroupEditableInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.description)) {
        this.description = data().deepCopy(fields()[0].schema(), other.description);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.pictureLink)) {
        this.pictureLink = data().deepCopy(fields()[1].schema(), other.pictureLink);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.slack)) {
        this.slack = data().deepCopy(fields()[2].schema(), other.slack);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.email)) {
        this.email = data().deepCopy(fields()[3].schema(), other.email);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing CorpGroupEditableInfo instance */
    private Builder(com.linkedin.pegasus2avro.identity.CorpGroupEditableInfo other) {
            super(com.linkedin.pegasus2avro.identity.CorpGroupEditableInfo.SCHEMA$);
      if (isValidValue(fields()[0], other.description)) {
        this.description = data().deepCopy(fields()[0].schema(), other.description);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.pictureLink)) {
        this.pictureLink = data().deepCopy(fields()[1].schema(), other.pictureLink);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.slack)) {
        this.slack = data().deepCopy(fields()[2].schema(), other.slack);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.email)) {
        this.email = data().deepCopy(fields()[3].schema(), other.email);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'description' field */
    public java.lang.String getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public com.linkedin.pegasus2avro.identity.CorpGroupEditableInfo.Builder setDescription(java.lang.String value) {
      validate(fields()[0], value);
      this.description = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'description' field */
    public com.linkedin.pegasus2avro.identity.CorpGroupEditableInfo.Builder clearDescription() {
      description = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'pictureLink' field */
    public java.lang.String getPictureLink() {
      return pictureLink;
    }
    
    /** Sets the value of the 'pictureLink' field */
    public com.linkedin.pegasus2avro.identity.CorpGroupEditableInfo.Builder setPictureLink(java.lang.String value) {
      validate(fields()[1], value);
      this.pictureLink = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'pictureLink' field has been set */
    public boolean hasPictureLink() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'pictureLink' field */
    public com.linkedin.pegasus2avro.identity.CorpGroupEditableInfo.Builder clearPictureLink() {
      pictureLink = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'slack' field */
    public java.lang.String getSlack() {
      return slack;
    }
    
    /** Sets the value of the 'slack' field */
    public com.linkedin.pegasus2avro.identity.CorpGroupEditableInfo.Builder setSlack(java.lang.String value) {
      validate(fields()[2], value);
      this.slack = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'slack' field has been set */
    public boolean hasSlack() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'slack' field */
    public com.linkedin.pegasus2avro.identity.CorpGroupEditableInfo.Builder clearSlack() {
      slack = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'email' field */
    public java.lang.String getEmail() {
      return email;
    }
    
    /** Sets the value of the 'email' field */
    public com.linkedin.pegasus2avro.identity.CorpGroupEditableInfo.Builder setEmail(java.lang.String value) {
      validate(fields()[3], value);
      this.email = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'email' field has been set */
    public boolean hasEmail() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'email' field */
    public com.linkedin.pegasus2avro.identity.CorpGroupEditableInfo.Builder clearEmail() {
      email = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public CorpGroupEditableInfo build() {
      try {
        CorpGroupEditableInfo record = new CorpGroupEditableInfo();
        record.description = fieldSetFlags()[0] ? this.description : (java.lang.String) defaultValue(fields()[0]);
        record.pictureLink = fieldSetFlags()[1] ? this.pictureLink : (java.lang.String) defaultValue(fields()[1]);
        record.slack = fieldSetFlags()[2] ? this.slack : (java.lang.String) defaultValue(fields()[2]);
        record.email = fieldSetFlags()[3] ? this.email : (java.lang.String) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
