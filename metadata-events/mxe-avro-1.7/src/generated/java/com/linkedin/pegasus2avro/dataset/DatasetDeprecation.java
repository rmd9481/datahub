/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.dataset;  
@SuppressWarnings("all")
/** Dataset deprecation status
Deprecated! This aspect is deprecated in favor of the more-general-purpose 'Deprecation' aspect. */
@org.apache.avro.specific.AvroGenerated
public class DatasetDeprecation extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DatasetDeprecation\",\"namespace\":\"com.linkedin.pegasus2avro.dataset\",\"doc\":\"Dataset deprecation status\\nDeprecated! This aspect is deprecated in favor of the more-general-purpose 'Deprecation' aspect.\",\"fields\":[{\"name\":\"deprecated\",\"type\":\"boolean\",\"doc\":\"Whether the dataset is deprecated by owner.\",\"Searchable\":{\"fieldType\":\"BOOLEAN\",\"weightsPerFieldValue\":{\"true\":0.5}}},{\"name\":\"decommissionTime\",\"type\":[\"null\",\"long\"],\"doc\":\"The time user plan to decommission this dataset.\",\"default\":null},{\"name\":\"note\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Additional information about the dataset deprecation plan, such as the wiki, doc, RB.\"},{\"name\":\"actor\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The corpuser URN which will be credited for modifying this deprecation content.\",\"default\":null,\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}}],\"Aspect\":{\"name\":\"datasetDeprecation\"},\"Deprecated\":true}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Whether the dataset is deprecated by owner. */
  @Deprecated public boolean deprecated;
  /** The time user plan to decommission this dataset. */
  @Deprecated public java.lang.Long decommissionTime;
  /** Additional information about the dataset deprecation plan, such as the wiki, doc, RB. */
  @Deprecated public java.lang.String note;
  /** The corpuser URN which will be credited for modifying this deprecation content. */
  @Deprecated public java.lang.String actor;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public DatasetDeprecation() {}

  /**
   * All-args constructor.
   */
  public DatasetDeprecation(java.lang.Boolean deprecated, java.lang.Long decommissionTime, java.lang.String note, java.lang.String actor) {
    this.deprecated = deprecated;
    this.decommissionTime = decommissionTime;
    this.note = note;
    this.actor = actor;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return deprecated;
    case 1: return decommissionTime;
    case 2: return note;
    case 3: return actor;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: deprecated = (java.lang.Boolean)value$; break;
    case 1: decommissionTime = (java.lang.Long)value$; break;
    case 2: note = (java.lang.String)value$; break;
    case 3: actor = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'deprecated' field.
   * Whether the dataset is deprecated by owner.   */
  public java.lang.Boolean getDeprecated() {
    return deprecated;
  }

  /**
   * Sets the value of the 'deprecated' field.
   * Whether the dataset is deprecated by owner.   * @param value the value to set.
   */
  public void setDeprecated(java.lang.Boolean value) {
    this.deprecated = value;
  }

  /**
   * Gets the value of the 'decommissionTime' field.
   * The time user plan to decommission this dataset.   */
  public java.lang.Long getDecommissionTime() {
    return decommissionTime;
  }

  /**
   * Sets the value of the 'decommissionTime' field.
   * The time user plan to decommission this dataset.   * @param value the value to set.
   */
  public void setDecommissionTime(java.lang.Long value) {
    this.decommissionTime = value;
  }

  /**
   * Gets the value of the 'note' field.
   * Additional information about the dataset deprecation plan, such as the wiki, doc, RB.   */
  public java.lang.String getNote() {
    return note;
  }

  /**
   * Sets the value of the 'note' field.
   * Additional information about the dataset deprecation plan, such as the wiki, doc, RB.   * @param value the value to set.
   */
  public void setNote(java.lang.String value) {
    this.note = value;
  }

  /**
   * Gets the value of the 'actor' field.
   * The corpuser URN which will be credited for modifying this deprecation content.   */
  public java.lang.String getActor() {
    return actor;
  }

  /**
   * Sets the value of the 'actor' field.
   * The corpuser URN which will be credited for modifying this deprecation content.   * @param value the value to set.
   */
  public void setActor(java.lang.String value) {
    this.actor = value;
  }

  /** Creates a new DatasetDeprecation RecordBuilder */
  public static com.linkedin.pegasus2avro.dataset.DatasetDeprecation.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.dataset.DatasetDeprecation.Builder();
  }
  
  /** Creates a new DatasetDeprecation RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.dataset.DatasetDeprecation.Builder newBuilder(com.linkedin.pegasus2avro.dataset.DatasetDeprecation.Builder other) {
    return new com.linkedin.pegasus2avro.dataset.DatasetDeprecation.Builder(other);
  }
  
  /** Creates a new DatasetDeprecation RecordBuilder by copying an existing DatasetDeprecation instance */
  public static com.linkedin.pegasus2avro.dataset.DatasetDeprecation.Builder newBuilder(com.linkedin.pegasus2avro.dataset.DatasetDeprecation other) {
    return new com.linkedin.pegasus2avro.dataset.DatasetDeprecation.Builder(other);
  }
  
  /**
   * RecordBuilder for DatasetDeprecation instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DatasetDeprecation>
    implements org.apache.avro.data.RecordBuilder<DatasetDeprecation> {

    private boolean deprecated;
    private java.lang.Long decommissionTime;
    private java.lang.String note;
    private java.lang.String actor;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.dataset.DatasetDeprecation.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.dataset.DatasetDeprecation.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.deprecated)) {
        this.deprecated = data().deepCopy(fields()[0].schema(), other.deprecated);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.decommissionTime)) {
        this.decommissionTime = data().deepCopy(fields()[1].schema(), other.decommissionTime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.note)) {
        this.note = data().deepCopy(fields()[2].schema(), other.note);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.actor)) {
        this.actor = data().deepCopy(fields()[3].schema(), other.actor);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing DatasetDeprecation instance */
    private Builder(com.linkedin.pegasus2avro.dataset.DatasetDeprecation other) {
            super(com.linkedin.pegasus2avro.dataset.DatasetDeprecation.SCHEMA$);
      if (isValidValue(fields()[0], other.deprecated)) {
        this.deprecated = data().deepCopy(fields()[0].schema(), other.deprecated);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.decommissionTime)) {
        this.decommissionTime = data().deepCopy(fields()[1].schema(), other.decommissionTime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.note)) {
        this.note = data().deepCopy(fields()[2].schema(), other.note);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.actor)) {
        this.actor = data().deepCopy(fields()[3].schema(), other.actor);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'deprecated' field */
    public java.lang.Boolean getDeprecated() {
      return deprecated;
    }
    
    /** Sets the value of the 'deprecated' field */
    public com.linkedin.pegasus2avro.dataset.DatasetDeprecation.Builder setDeprecated(boolean value) {
      validate(fields()[0], value);
      this.deprecated = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'deprecated' field has been set */
    public boolean hasDeprecated() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'deprecated' field */
    public com.linkedin.pegasus2avro.dataset.DatasetDeprecation.Builder clearDeprecated() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'decommissionTime' field */
    public java.lang.Long getDecommissionTime() {
      return decommissionTime;
    }
    
    /** Sets the value of the 'decommissionTime' field */
    public com.linkedin.pegasus2avro.dataset.DatasetDeprecation.Builder setDecommissionTime(java.lang.Long value) {
      validate(fields()[1], value);
      this.decommissionTime = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'decommissionTime' field has been set */
    public boolean hasDecommissionTime() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'decommissionTime' field */
    public com.linkedin.pegasus2avro.dataset.DatasetDeprecation.Builder clearDecommissionTime() {
      decommissionTime = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'note' field */
    public java.lang.String getNote() {
      return note;
    }
    
    /** Sets the value of the 'note' field */
    public com.linkedin.pegasus2avro.dataset.DatasetDeprecation.Builder setNote(java.lang.String value) {
      validate(fields()[2], value);
      this.note = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'note' field has been set */
    public boolean hasNote() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'note' field */
    public com.linkedin.pegasus2avro.dataset.DatasetDeprecation.Builder clearNote() {
      note = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'actor' field */
    public java.lang.String getActor() {
      return actor;
    }
    
    /** Sets the value of the 'actor' field */
    public com.linkedin.pegasus2avro.dataset.DatasetDeprecation.Builder setActor(java.lang.String value) {
      validate(fields()[3], value);
      this.actor = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'actor' field has been set */
    public boolean hasActor() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'actor' field */
    public com.linkedin.pegasus2avro.dataset.DatasetDeprecation.Builder clearActor() {
      actor = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public DatasetDeprecation build() {
      try {
        DatasetDeprecation record = new DatasetDeprecation();
        record.deprecated = fieldSetFlags()[0] ? this.deprecated : (java.lang.Boolean) defaultValue(fields()[0]);
        record.decommissionTime = fieldSetFlags()[1] ? this.decommissionTime : (java.lang.Long) defaultValue(fields()[1]);
        record.note = fieldSetFlags()[2] ? this.note : (java.lang.String) defaultValue(fields()[2]);
        record.actor = fieldSetFlags()[3] ? this.actor : (java.lang.String) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
