/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.common;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Cost extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Cost\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"fields\":[{\"name\":\"costType\",\"type\":{\"type\":\"enum\",\"name\":\"CostType\",\"doc\":\"Type of Cost Code\",\"symbols\":[\"ORG_COST_TYPE\"],\"symbolDocs\":{\"ORG_COST_TYPE\":\"Org Cost Type to which the Cost of this entity should be attributed to\"}}},{\"name\":\"cost\",\"type\":{\"type\":\"record\",\"name\":\"CostCost\",\"fields\":[{\"name\":\"costId\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"costCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"fieldDiscriminator\",\"type\":{\"type\":\"enum\",\"name\":\"CostCostDiscriminator\",\"symbols\":[\"costId\",\"costCode\"]},\"doc\":\"Contains the name of the field that has its value set.\"}]}}],\"Aspect\":{\"name\":\"cost\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public com.linkedin.pegasus2avro.common.CostType costType;
  @Deprecated public com.linkedin.pegasus2avro.common.CostCost cost;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Cost() {}

  /**
   * All-args constructor.
   */
  public Cost(com.linkedin.pegasus2avro.common.CostType costType, com.linkedin.pegasus2avro.common.CostCost cost) {
    this.costType = costType;
    this.cost = cost;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return costType;
    case 1: return cost;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: costType = (com.linkedin.pegasus2avro.common.CostType)value$; break;
    case 1: cost = (com.linkedin.pegasus2avro.common.CostCost)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'costType' field.
   */
  public com.linkedin.pegasus2avro.common.CostType getCostType() {
    return costType;
  }

  /**
   * Sets the value of the 'costType' field.
   * @param value the value to set.
   */
  public void setCostType(com.linkedin.pegasus2avro.common.CostType value) {
    this.costType = value;
  }

  /**
   * Gets the value of the 'cost' field.
   */
  public com.linkedin.pegasus2avro.common.CostCost getCost() {
    return cost;
  }

  /**
   * Sets the value of the 'cost' field.
   * @param value the value to set.
   */
  public void setCost(com.linkedin.pegasus2avro.common.CostCost value) {
    this.cost = value;
  }

  /** Creates a new Cost RecordBuilder */
  public static com.linkedin.pegasus2avro.common.Cost.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.common.Cost.Builder();
  }
  
  /** Creates a new Cost RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.common.Cost.Builder newBuilder(com.linkedin.pegasus2avro.common.Cost.Builder other) {
    return new com.linkedin.pegasus2avro.common.Cost.Builder(other);
  }
  
  /** Creates a new Cost RecordBuilder by copying an existing Cost instance */
  public static com.linkedin.pegasus2avro.common.Cost.Builder newBuilder(com.linkedin.pegasus2avro.common.Cost other) {
    return new com.linkedin.pegasus2avro.common.Cost.Builder(other);
  }
  
  /**
   * RecordBuilder for Cost instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Cost>
    implements org.apache.avro.data.RecordBuilder<Cost> {

    private com.linkedin.pegasus2avro.common.CostType costType;
    private com.linkedin.pegasus2avro.common.CostCost cost;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.common.Cost.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.common.Cost.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.costType)) {
        this.costType = data().deepCopy(fields()[0].schema(), other.costType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.cost)) {
        this.cost = data().deepCopy(fields()[1].schema(), other.cost);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Cost instance */
    private Builder(com.linkedin.pegasus2avro.common.Cost other) {
            super(com.linkedin.pegasus2avro.common.Cost.SCHEMA$);
      if (isValidValue(fields()[0], other.costType)) {
        this.costType = data().deepCopy(fields()[0].schema(), other.costType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.cost)) {
        this.cost = data().deepCopy(fields()[1].schema(), other.cost);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'costType' field */
    public com.linkedin.pegasus2avro.common.CostType getCostType() {
      return costType;
    }
    
    /** Sets the value of the 'costType' field */
    public com.linkedin.pegasus2avro.common.Cost.Builder setCostType(com.linkedin.pegasus2avro.common.CostType value) {
      validate(fields()[0], value);
      this.costType = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'costType' field has been set */
    public boolean hasCostType() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'costType' field */
    public com.linkedin.pegasus2avro.common.Cost.Builder clearCostType() {
      costType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'cost' field */
    public com.linkedin.pegasus2avro.common.CostCost getCost() {
      return cost;
    }
    
    /** Sets the value of the 'cost' field */
    public com.linkedin.pegasus2avro.common.Cost.Builder setCost(com.linkedin.pegasus2avro.common.CostCost value) {
      validate(fields()[1], value);
      this.cost = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'cost' field has been set */
    public boolean hasCost() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'cost' field */
    public com.linkedin.pegasus2avro.common.Cost.Builder clearCost() {
      cost = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public Cost build() {
      try {
        Cost record = new Cost();
        record.costType = fieldSetFlags()[0] ? this.costType : (com.linkedin.pegasus2avro.common.CostType) defaultValue(fields()[0]);
        record.cost = fieldSetFlags()[1] ? this.cost : (com.linkedin.pegasus2avro.common.CostCost) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
