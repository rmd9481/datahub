/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.timeseries;  
@SuppressWarnings("all")
/** Defines the group by bucket definitions for time series requests. */
@org.apache.avro.specific.AvroGenerated
public class GroupingBucket extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"GroupingBucket\",\"namespace\":\"com.linkedin.pegasus2avro.timeseries\",\"doc\":\"Defines the group by bucket definitions for time series requests.\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"GroupingBucketType\",\"doc\":\"Defines a grouping bucket type.\",\"symbols\":[\"DATE_GROUPING_BUCKET\",\"STRING_GROUPING_BUCKET\"]},\"doc\":\"Type of the grouping bucket.\"},{\"name\":\"key\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Key that specifies the column name to be used as the timestamp field for bucketing.\"},{\"name\":\"timeWindowSize\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"TimeWindowSize\",\"doc\":\"Defines the size of a time window.\",\"fields\":[{\"name\":\"unit\",\"type\":{\"type\":\"enum\",\"name\":\"CalendarInterval\",\"symbols\":[\"SECOND\",\"MINUTE\",\"HOUR\",\"DAY\",\"WEEK\",\"MONTH\",\"QUARTER\",\"YEAR\"]},\"doc\":\"Interval unit such as minute/hour/day etc.\"},{\"name\":\"multiple\",\"type\":\"int\",\"doc\":\"How many units. Defaults to 1.\",\"default\":1}]}],\"doc\":\"Bucket size (like a day/hour etc) for the date grouping buckets.\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Type of the grouping bucket. */
  @Deprecated public com.linkedin.pegasus2avro.timeseries.GroupingBucketType type;
  /** Key that specifies the column name to be used as the timestamp field for bucketing. */
  @Deprecated public java.lang.String key;
  /** Bucket size (like a day/hour etc) for the date grouping buckets. */
  @Deprecated public com.linkedin.pegasus2avro.timeseries.TimeWindowSize timeWindowSize;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public GroupingBucket() {}

  /**
   * All-args constructor.
   */
  public GroupingBucket(com.linkedin.pegasus2avro.timeseries.GroupingBucketType type, java.lang.String key, com.linkedin.pegasus2avro.timeseries.TimeWindowSize timeWindowSize) {
    this.type = type;
    this.key = key;
    this.timeWindowSize = timeWindowSize;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return type;
    case 1: return key;
    case 2: return timeWindowSize;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: type = (com.linkedin.pegasus2avro.timeseries.GroupingBucketType)value$; break;
    case 1: key = (java.lang.String)value$; break;
    case 2: timeWindowSize = (com.linkedin.pegasus2avro.timeseries.TimeWindowSize)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'type' field.
   * Type of the grouping bucket.   */
  public com.linkedin.pegasus2avro.timeseries.GroupingBucketType getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * Type of the grouping bucket.   * @param value the value to set.
   */
  public void setType(com.linkedin.pegasus2avro.timeseries.GroupingBucketType value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'key' field.
   * Key that specifies the column name to be used as the timestamp field for bucketing.   */
  public java.lang.String getKey() {
    return key;
  }

  /**
   * Sets the value of the 'key' field.
   * Key that specifies the column name to be used as the timestamp field for bucketing.   * @param value the value to set.
   */
  public void setKey(java.lang.String value) {
    this.key = value;
  }

  /**
   * Gets the value of the 'timeWindowSize' field.
   * Bucket size (like a day/hour etc) for the date grouping buckets.   */
  public com.linkedin.pegasus2avro.timeseries.TimeWindowSize getTimeWindowSize() {
    return timeWindowSize;
  }

  /**
   * Sets the value of the 'timeWindowSize' field.
   * Bucket size (like a day/hour etc) for the date grouping buckets.   * @param value the value to set.
   */
  public void setTimeWindowSize(com.linkedin.pegasus2avro.timeseries.TimeWindowSize value) {
    this.timeWindowSize = value;
  }

  /** Creates a new GroupingBucket RecordBuilder */
  public static com.linkedin.pegasus2avro.timeseries.GroupingBucket.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.timeseries.GroupingBucket.Builder();
  }
  
  /** Creates a new GroupingBucket RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.timeseries.GroupingBucket.Builder newBuilder(com.linkedin.pegasus2avro.timeseries.GroupingBucket.Builder other) {
    return new com.linkedin.pegasus2avro.timeseries.GroupingBucket.Builder(other);
  }
  
  /** Creates a new GroupingBucket RecordBuilder by copying an existing GroupingBucket instance */
  public static com.linkedin.pegasus2avro.timeseries.GroupingBucket.Builder newBuilder(com.linkedin.pegasus2avro.timeseries.GroupingBucket other) {
    return new com.linkedin.pegasus2avro.timeseries.GroupingBucket.Builder(other);
  }
  
  /**
   * RecordBuilder for GroupingBucket instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<GroupingBucket>
    implements org.apache.avro.data.RecordBuilder<GroupingBucket> {

    private com.linkedin.pegasus2avro.timeseries.GroupingBucketType type;
    private java.lang.String key;
    private com.linkedin.pegasus2avro.timeseries.TimeWindowSize timeWindowSize;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.timeseries.GroupingBucket.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.timeseries.GroupingBucket.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.key)) {
        this.key = data().deepCopy(fields()[1].schema(), other.key);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timeWindowSize)) {
        this.timeWindowSize = data().deepCopy(fields()[2].schema(), other.timeWindowSize);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing GroupingBucket instance */
    private Builder(com.linkedin.pegasus2avro.timeseries.GroupingBucket other) {
            super(com.linkedin.pegasus2avro.timeseries.GroupingBucket.SCHEMA$);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.key)) {
        this.key = data().deepCopy(fields()[1].schema(), other.key);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timeWindowSize)) {
        this.timeWindowSize = data().deepCopy(fields()[2].schema(), other.timeWindowSize);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'type' field */
    public com.linkedin.pegasus2avro.timeseries.GroupingBucketType getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public com.linkedin.pegasus2avro.timeseries.GroupingBucket.Builder setType(com.linkedin.pegasus2avro.timeseries.GroupingBucketType value) {
      validate(fields()[0], value);
      this.type = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'type' field */
    public com.linkedin.pegasus2avro.timeseries.GroupingBucket.Builder clearType() {
      type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'key' field */
    public java.lang.String getKey() {
      return key;
    }
    
    /** Sets the value of the 'key' field */
    public com.linkedin.pegasus2avro.timeseries.GroupingBucket.Builder setKey(java.lang.String value) {
      validate(fields()[1], value);
      this.key = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'key' field has been set */
    public boolean hasKey() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'key' field */
    public com.linkedin.pegasus2avro.timeseries.GroupingBucket.Builder clearKey() {
      key = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'timeWindowSize' field */
    public com.linkedin.pegasus2avro.timeseries.TimeWindowSize getTimeWindowSize() {
      return timeWindowSize;
    }
    
    /** Sets the value of the 'timeWindowSize' field */
    public com.linkedin.pegasus2avro.timeseries.GroupingBucket.Builder setTimeWindowSize(com.linkedin.pegasus2avro.timeseries.TimeWindowSize value) {
      validate(fields()[2], value);
      this.timeWindowSize = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'timeWindowSize' field has been set */
    public boolean hasTimeWindowSize() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'timeWindowSize' field */
    public com.linkedin.pegasus2avro.timeseries.GroupingBucket.Builder clearTimeWindowSize() {
      timeWindowSize = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public GroupingBucket build() {
      try {
        GroupingBucket record = new GroupingBucket();
        record.type = fieldSetFlags()[0] ? this.type : (com.linkedin.pegasus2avro.timeseries.GroupingBucketType) defaultValue(fields()[0]);
        record.key = fieldSetFlags()[1] ? this.key : (java.lang.String) defaultValue(fields()[1]);
        record.timeWindowSize = fieldSetFlags()[2] ? this.timeWindowSize : (com.linkedin.pegasus2avro.timeseries.TimeWindowSize) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
