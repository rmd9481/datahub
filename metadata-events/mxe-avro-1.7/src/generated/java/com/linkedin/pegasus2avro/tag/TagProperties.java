/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.tag;  
@SuppressWarnings("all")
/** Properties associated with a Tag */
@org.apache.avro.specific.AvroGenerated
public class TagProperties extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TagProperties\",\"namespace\":\"com.linkedin.pegasus2avro.tag\",\"doc\":\"Properties associated with a Tag\",\"fields\":[{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Display name of the tag\",\"Searchable\":{\"boostScore\":10.0,\"enableAutocomplete\":true,\"fieldNameAliases\":[\"_entityName\"],\"fieldType\":\"WORD_GRAM\"}},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Documentation of the tag\",\"default\":null,\"Searchable\":{}},{\"name\":\"colorHex\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The color associated with the Tag in Hex. For example #FFFFFF.\",\"default\":null}],\"Aspect\":{\"name\":\"tagProperties\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Display name of the tag */
  @Deprecated public java.lang.String name;
  /** Documentation of the tag */
  @Deprecated public java.lang.String description;
  /** The color associated with the Tag in Hex. For example #FFFFFF. */
  @Deprecated public java.lang.String colorHex;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public TagProperties() {}

  /**
   * All-args constructor.
   */
  public TagProperties(java.lang.String name, java.lang.String description, java.lang.String colorHex) {
    this.name = name;
    this.description = description;
    this.colorHex = colorHex;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return description;
    case 2: return colorHex;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.String)value$; break;
    case 1: description = (java.lang.String)value$; break;
    case 2: colorHex = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   * Display name of the tag   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * Display name of the tag   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'description' field.
   * Documentation of the tag   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * Documentation of the tag   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'colorHex' field.
   * The color associated with the Tag in Hex. For example #FFFFFF.   */
  public java.lang.String getColorHex() {
    return colorHex;
  }

  /**
   * Sets the value of the 'colorHex' field.
   * The color associated with the Tag in Hex. For example #FFFFFF.   * @param value the value to set.
   */
  public void setColorHex(java.lang.String value) {
    this.colorHex = value;
  }

  /** Creates a new TagProperties RecordBuilder */
  public static com.linkedin.pegasus2avro.tag.TagProperties.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.tag.TagProperties.Builder();
  }
  
  /** Creates a new TagProperties RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.tag.TagProperties.Builder newBuilder(com.linkedin.pegasus2avro.tag.TagProperties.Builder other) {
    return new com.linkedin.pegasus2avro.tag.TagProperties.Builder(other);
  }
  
  /** Creates a new TagProperties RecordBuilder by copying an existing TagProperties instance */
  public static com.linkedin.pegasus2avro.tag.TagProperties.Builder newBuilder(com.linkedin.pegasus2avro.tag.TagProperties other) {
    return new com.linkedin.pegasus2avro.tag.TagProperties.Builder(other);
  }
  
  /**
   * RecordBuilder for TagProperties instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TagProperties>
    implements org.apache.avro.data.RecordBuilder<TagProperties> {

    private java.lang.String name;
    private java.lang.String description;
    private java.lang.String colorHex;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.tag.TagProperties.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.tag.TagProperties.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.description)) {
        this.description = data().deepCopy(fields()[1].schema(), other.description);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.colorHex)) {
        this.colorHex = data().deepCopy(fields()[2].schema(), other.colorHex);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing TagProperties instance */
    private Builder(com.linkedin.pegasus2avro.tag.TagProperties other) {
            super(com.linkedin.pegasus2avro.tag.TagProperties.SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.description)) {
        this.description = data().deepCopy(fields()[1].schema(), other.description);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.colorHex)) {
        this.colorHex = data().deepCopy(fields()[2].schema(), other.colorHex);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'name' field */
    public java.lang.String getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public com.linkedin.pegasus2avro.tag.TagProperties.Builder setName(java.lang.String value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'name' field */
    public com.linkedin.pegasus2avro.tag.TagProperties.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'description' field */
    public java.lang.String getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public com.linkedin.pegasus2avro.tag.TagProperties.Builder setDescription(java.lang.String value) {
      validate(fields()[1], value);
      this.description = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'description' field */
    public com.linkedin.pegasus2avro.tag.TagProperties.Builder clearDescription() {
      description = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'colorHex' field */
    public java.lang.String getColorHex() {
      return colorHex;
    }
    
    /** Sets the value of the 'colorHex' field */
    public com.linkedin.pegasus2avro.tag.TagProperties.Builder setColorHex(java.lang.String value) {
      validate(fields()[2], value);
      this.colorHex = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'colorHex' field has been set */
    public boolean hasColorHex() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'colorHex' field */
    public com.linkedin.pegasus2avro.tag.TagProperties.Builder clearColorHex() {
      colorHex = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public TagProperties build() {
      try {
        TagProperties record = new TagProperties();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.String) defaultValue(fields()[0]);
        record.description = fieldSetFlags()[1] ? this.description : (java.lang.String) defaultValue(fields()[1]);
        record.colorHex = fieldSetFlags()[2] ? this.colorHex : (java.lang.String) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
