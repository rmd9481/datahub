/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.assertion;  
@SuppressWarnings("all")
/** Information about an assertion */
@org.apache.avro.specific.AvroGenerated
public class AssertionInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AssertionInfo\",\"namespace\":\"com.linkedin.pegasus2avro.assertion\",\"doc\":\"Information about an assertion\",\"fields\":[{\"name\":\"customProperties\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"},\"doc\":\"Custom property bag.\",\"default\":{},\"Searchable\":{\"/*\":{\"queryByDefault\":true}}},{\"name\":\"externalUrl\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"URL where the reference exist\",\"default\":null,\"Searchable\":{\"fieldType\":\"KEYWORD\"},\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.url.Url\",\"coercerClass\":\"com.linkedin.pegasus2avro.common.url.UrlCoercer\"}},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"AssertionType\",\"symbols\":[\"DATASET\"]},\"doc\":\"Type of assertion. Assertion types can evolve to span Datasets, Flows (Pipelines), Models, Features etc.\"},{\"name\":\"datasetAssertion\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DatasetAssertionInfo\",\"doc\":\"Attributes that are applicable to single-Dataset Assertions\",\"fields\":[{\"name\":\"dataset\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The dataset targeted by this assertion.\",\"Relationship\":{\"entityTypes\":[\"dataset\"],\"name\":\"Asserts\"},\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"scope\",\"type\":{\"type\":\"enum\",\"name\":\"DatasetAssertionScope\",\"symbols\":[\"DATASET_COLUMN\",\"DATASET_ROWS\",\"DATASET_SCHEMA\",\"UNKNOWN\"],\"symbolDocs\":{\"DATASET_COLUMN\":\"This assertion applies to dataset columns\",\"DATASET_ROWS\":\"This assertion applies to entire rows of the dataset\",\"DATASET_SCHEMA\":\"This assertion applies to the schema of the dataset\",\"UNKNOWN\":\"The scope of the assertion is unknown\"}},\"doc\":\"Scope of the Assertion. What part of the dataset does this assertion apply to?\"},{\"name\":\"fields\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"One or more dataset schema fields that are targeted by this assertion\",\"default\":null,\"Relationship\":{\"/*\":{\"entityTypes\":[\"schemaField\"],\"name\":\"Asserts\"}}},{\"name\":\"aggregation\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"AssertionStdAggregation\",\"doc\":\"The function that is applied to the aggregation input (schema, rows, column values) before evaluating an operator.\",\"symbols\":[\"ROW_COUNT\",\"COLUMNS\",\"COLUMN_COUNT\",\"IDENTITY\",\"MEAN\",\"MEDIAN\",\"UNIQUE_COUNT\",\"UNIQUE_PROPOTION\",\"NULL_COUNT\",\"NULL_PROPORTION\",\"STDDEV\",\"MIN\",\"MAX\",\"SUM\",\"_NATIVE_\"],\"symbolDocs\":{\"COLUMNS\":\"Assertion is applied on all columns.\",\"COLUMN_COUNT\":\"Assertion is applied on number of columns.\",\"IDENTITY\":\"Assertion is applied on individual column value.\",\"MAX\":\"Assertion is applied on column std deviation\",\"MEAN\":\"Assertion is applied on column mean\",\"MEDIAN\":\"Assertion is applied on column median\",\"MIN\":\"Assertion is applied on column min\",\"NULL_COUNT\":\"Assertion is applied on number of null values in column\",\"NULL_PROPORTION\":\"Assertion is applied on proportion of null values in column\",\"ROW_COUNT\":\"Assertion is applied on number of rows.\",\"STDDEV\":\"Assertion is applied on column std deviation\",\"SUM\":\"Assertion is applied on column sum\",\"UNIQUE_COUNT\":\"Assertion is applied on number of distinct values in column\",\"UNIQUE_PROPOTION\":\"Assertion is applied on proportion of distinct values in column\",\"_NATIVE_\":\"Other\"}}],\"doc\":\"Standardized assertion operator\",\"default\":null},{\"name\":\"operator\",\"type\":{\"type\":\"enum\",\"name\":\"AssertionStdOperator\",\"doc\":\"A boolean operator that is applied on the input to an assertion, after an aggregation function has been applied.\",\"symbols\":[\"BETWEEN\",\"LESS_THAN\",\"LESS_THAN_OR_EQUAL_TO\",\"GREATER_THAN\",\"GREATER_THAN_OR_EQUAL_TO\",\"EQUAL_TO\",\"NOT_NULL\",\"CONTAIN\",\"END_WITH\",\"START_WITH\",\"REGEX_MATCH\",\"IN\",\"NOT_IN\",\"_NATIVE_\"],\"symbolDocs\":{\"BETWEEN\":\"Value being asserted is between min_value and max_value.  Requires 'minValue' & 'maxValue' parameters.\",\"CONTAIN\":\"Value being asserted contains value. Requires 'value' parameter.\",\"END_WITH\":\"Value being asserted ends with value. Requires 'value' parameter.\",\"EQUAL_TO\":\"Value being asserted is equal to value. Requires 'value' parameter.\",\"GREATER_THAN\":\"Value being asserted is greater than some value. Requires 'value' parameter.\",\"GREATER_THAN_OR_EQUAL_TO\":\"Value being asserted is greater than or equal to some value. Requires 'value' parameter.\",\"IN\":\"Value being asserted is one of the array values. Requires 'value' parameter.\",\"LESS_THAN\":\"Value being asserted is less than a max value. Requires 'value' parameter.\",\"LESS_THAN_OR_EQUAL_TO\":\"Value being asserted is less than or equal to some value. Requires 'value' parameter.\",\"NOT_IN\":\"Value being asserted is not in one of the array values. Requires 'value' parameter.\",\"NOT_NULL\":\"Value being asserted is not null. Requires no parameters.\",\"REGEX_MATCH\":\"Value being asserted matches the regex value. Requires 'value' parameter.\",\"START_WITH\":\"Value being asserted starts with value. Requires 'value' parameter.\",\"_NATIVE_\":\"Other\"}},\"doc\":\"Standardized assertion operator\"},{\"name\":\"parameters\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"AssertionStdParameters\",\"doc\":\"Parameters for AssertionStdOperators.\",\"fields\":[{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"AssertionStdParameter\",\"doc\":\"Single parameter for AssertionStdOperators.\",\"fields\":[{\"name\":\"value\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The parameter value\"},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"AssertionStdParameterType\",\"symbols\":[\"STRING\",\"NUMBER\",\"LIST\",\"SET\",\"UNKNOWN\"]},\"doc\":\"The type of the parameter\"}]}],\"doc\":\"The value parameter of an assertion\",\"default\":null},{\"name\":\"maxValue\",\"type\":[\"null\",\"AssertionStdParameter\"],\"doc\":\"The maxValue parameter of an assertion\",\"default\":null},{\"name\":\"minValue\",\"type\":[\"null\",\"AssertionStdParameter\"],\"doc\":\"The minValue parameter of an assertion\",\"default\":null}]}],\"doc\":\"Standard parameters required for the assertion. e.g. min_value, max_value, value, columns\",\"default\":null},{\"name\":\"nativeType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Native assertion type\",\"default\":null},{\"name\":\"nativeParameters\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}],\"doc\":\"Native parameters required for the assertion.\",\"default\":null},{\"name\":\"logic\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"doc\":\"Dataset Assertion information when type is DATASET\",\"default\":null}],\"Aspect\":{\"name\":\"assertionInfo\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Custom property bag. */
  @Deprecated public java.util.Map<java.lang.String,java.lang.String> customProperties;
  /** URL where the reference exist */
  @Deprecated public java.lang.String externalUrl;
  /** Type of assertion. Assertion types can evolve to span Datasets, Flows (Pipelines), Models, Features etc. */
  @Deprecated public com.linkedin.pegasus2avro.assertion.AssertionType type;
  /** Dataset Assertion information when type is DATASET */
  @Deprecated public com.linkedin.pegasus2avro.assertion.DatasetAssertionInfo datasetAssertion;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public AssertionInfo() {}

  /**
   * All-args constructor.
   */
  public AssertionInfo(java.util.Map<java.lang.String,java.lang.String> customProperties, java.lang.String externalUrl, com.linkedin.pegasus2avro.assertion.AssertionType type, com.linkedin.pegasus2avro.assertion.DatasetAssertionInfo datasetAssertion) {
    this.customProperties = customProperties;
    this.externalUrl = externalUrl;
    this.type = type;
    this.datasetAssertion = datasetAssertion;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return customProperties;
    case 1: return externalUrl;
    case 2: return type;
    case 3: return datasetAssertion;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: customProperties = (java.util.Map<java.lang.String,java.lang.String>)value$; break;
    case 1: externalUrl = (java.lang.String)value$; break;
    case 2: type = (com.linkedin.pegasus2avro.assertion.AssertionType)value$; break;
    case 3: datasetAssertion = (com.linkedin.pegasus2avro.assertion.DatasetAssertionInfo)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'customProperties' field.
   * Custom property bag.   */
  public java.util.Map<java.lang.String,java.lang.String> getCustomProperties() {
    return customProperties;
  }

  /**
   * Sets the value of the 'customProperties' field.
   * Custom property bag.   * @param value the value to set.
   */
  public void setCustomProperties(java.util.Map<java.lang.String,java.lang.String> value) {
    this.customProperties = value;
  }

  /**
   * Gets the value of the 'externalUrl' field.
   * URL where the reference exist   */
  public java.lang.String getExternalUrl() {
    return externalUrl;
  }

  /**
   * Sets the value of the 'externalUrl' field.
   * URL where the reference exist   * @param value the value to set.
   */
  public void setExternalUrl(java.lang.String value) {
    this.externalUrl = value;
  }

  /**
   * Gets the value of the 'type' field.
   * Type of assertion. Assertion types can evolve to span Datasets, Flows (Pipelines), Models, Features etc.   */
  public com.linkedin.pegasus2avro.assertion.AssertionType getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * Type of assertion. Assertion types can evolve to span Datasets, Flows (Pipelines), Models, Features etc.   * @param value the value to set.
   */
  public void setType(com.linkedin.pegasus2avro.assertion.AssertionType value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'datasetAssertion' field.
   * Dataset Assertion information when type is DATASET   */
  public com.linkedin.pegasus2avro.assertion.DatasetAssertionInfo getDatasetAssertion() {
    return datasetAssertion;
  }

  /**
   * Sets the value of the 'datasetAssertion' field.
   * Dataset Assertion information when type is DATASET   * @param value the value to set.
   */
  public void setDatasetAssertion(com.linkedin.pegasus2avro.assertion.DatasetAssertionInfo value) {
    this.datasetAssertion = value;
  }

  /** Creates a new AssertionInfo RecordBuilder */
  public static com.linkedin.pegasus2avro.assertion.AssertionInfo.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.assertion.AssertionInfo.Builder();
  }
  
  /** Creates a new AssertionInfo RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.assertion.AssertionInfo.Builder newBuilder(com.linkedin.pegasus2avro.assertion.AssertionInfo.Builder other) {
    return new com.linkedin.pegasus2avro.assertion.AssertionInfo.Builder(other);
  }
  
  /** Creates a new AssertionInfo RecordBuilder by copying an existing AssertionInfo instance */
  public static com.linkedin.pegasus2avro.assertion.AssertionInfo.Builder newBuilder(com.linkedin.pegasus2avro.assertion.AssertionInfo other) {
    return new com.linkedin.pegasus2avro.assertion.AssertionInfo.Builder(other);
  }
  
  /**
   * RecordBuilder for AssertionInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AssertionInfo>
    implements org.apache.avro.data.RecordBuilder<AssertionInfo> {

    private java.util.Map<java.lang.String,java.lang.String> customProperties;
    private java.lang.String externalUrl;
    private com.linkedin.pegasus2avro.assertion.AssertionType type;
    private com.linkedin.pegasus2avro.assertion.DatasetAssertionInfo datasetAssertion;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.assertion.AssertionInfo.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.assertion.AssertionInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.customProperties)) {
        this.customProperties = data().deepCopy(fields()[0].schema(), other.customProperties);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.externalUrl)) {
        this.externalUrl = data().deepCopy(fields()[1].schema(), other.externalUrl);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.datasetAssertion)) {
        this.datasetAssertion = data().deepCopy(fields()[3].schema(), other.datasetAssertion);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing AssertionInfo instance */
    private Builder(com.linkedin.pegasus2avro.assertion.AssertionInfo other) {
            super(com.linkedin.pegasus2avro.assertion.AssertionInfo.SCHEMA$);
      if (isValidValue(fields()[0], other.customProperties)) {
        this.customProperties = data().deepCopy(fields()[0].schema(), other.customProperties);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.externalUrl)) {
        this.externalUrl = data().deepCopy(fields()[1].schema(), other.externalUrl);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.datasetAssertion)) {
        this.datasetAssertion = data().deepCopy(fields()[3].schema(), other.datasetAssertion);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'customProperties' field */
    public java.util.Map<java.lang.String,java.lang.String> getCustomProperties() {
      return customProperties;
    }
    
    /** Sets the value of the 'customProperties' field */
    public com.linkedin.pegasus2avro.assertion.AssertionInfo.Builder setCustomProperties(java.util.Map<java.lang.String,java.lang.String> value) {
      validate(fields()[0], value);
      this.customProperties = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'customProperties' field has been set */
    public boolean hasCustomProperties() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'customProperties' field */
    public com.linkedin.pegasus2avro.assertion.AssertionInfo.Builder clearCustomProperties() {
      customProperties = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'externalUrl' field */
    public java.lang.String getExternalUrl() {
      return externalUrl;
    }
    
    /** Sets the value of the 'externalUrl' field */
    public com.linkedin.pegasus2avro.assertion.AssertionInfo.Builder setExternalUrl(java.lang.String value) {
      validate(fields()[1], value);
      this.externalUrl = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'externalUrl' field has been set */
    public boolean hasExternalUrl() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'externalUrl' field */
    public com.linkedin.pegasus2avro.assertion.AssertionInfo.Builder clearExternalUrl() {
      externalUrl = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'type' field */
    public com.linkedin.pegasus2avro.assertion.AssertionType getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public com.linkedin.pegasus2avro.assertion.AssertionInfo.Builder setType(com.linkedin.pegasus2avro.assertion.AssertionType value) {
      validate(fields()[2], value);
      this.type = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'type' field */
    public com.linkedin.pegasus2avro.assertion.AssertionInfo.Builder clearType() {
      type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'datasetAssertion' field */
    public com.linkedin.pegasus2avro.assertion.DatasetAssertionInfo getDatasetAssertion() {
      return datasetAssertion;
    }
    
    /** Sets the value of the 'datasetAssertion' field */
    public com.linkedin.pegasus2avro.assertion.AssertionInfo.Builder setDatasetAssertion(com.linkedin.pegasus2avro.assertion.DatasetAssertionInfo value) {
      validate(fields()[3], value);
      this.datasetAssertion = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'datasetAssertion' field has been set */
    public boolean hasDatasetAssertion() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'datasetAssertion' field */
    public com.linkedin.pegasus2avro.assertion.AssertionInfo.Builder clearDatasetAssertion() {
      datasetAssertion = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public AssertionInfo build() {
      try {
        AssertionInfo record = new AssertionInfo();
        record.customProperties = fieldSetFlags()[0] ? this.customProperties : (java.util.Map<java.lang.String,java.lang.String>) defaultValue(fields()[0]);
        record.externalUrl = fieldSetFlags()[1] ? this.externalUrl : (java.lang.String) defaultValue(fields()[1]);
        record.type = fieldSetFlags()[2] ? this.type : (com.linkedin.pegasus2avro.assertion.AssertionType) defaultValue(fields()[2]);
        record.datasetAssertion = fieldSetFlags()[3] ? this.datasetAssertion : (com.linkedin.pegasus2avro.assertion.DatasetAssertionInfo) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
