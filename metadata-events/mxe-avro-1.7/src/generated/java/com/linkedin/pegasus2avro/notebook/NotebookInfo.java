/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.notebook;  
@SuppressWarnings("all")
/** Information about a Notebook
Note: This is IN BETA version */
@org.apache.avro.specific.AvroGenerated
public class NotebookInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"NotebookInfo\",\"namespace\":\"com.linkedin.pegasus2avro.notebook\",\"doc\":\"Information about a Notebook\\nNote: This is IN BETA version\",\"fields\":[{\"name\":\"customProperties\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"},\"doc\":\"Custom property bag.\",\"default\":{},\"Searchable\":{\"/*\":{\"queryByDefault\":true}}},{\"name\":\"externalUrl\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"URL where the reference exist\",\"default\":null,\"Searchable\":{\"fieldType\":\"KEYWORD\"},\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.url.Url\",\"coercerClass\":\"com.linkedin.pegasus2avro.common.url.UrlCoercer\"}},{\"name\":\"title\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Title of the Notebook\",\"Searchable\":{\"boostScore\":10.0,\"enableAutocomplete\":true,\"fieldNameAliases\":[\"_entityName\"],\"fieldType\":\"WORD_GRAM\"}},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Detailed description about the Notebook\",\"default\":null,\"Searchable\":{\"fieldType\":\"TEXT\",\"hasValuesFieldName\":\"hasDescription\"}},{\"name\":\"changeAuditStamps\",\"type\":{\"type\":\"record\",\"name\":\"ChangeAuditStamps\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into various lifecycle stages, and who acted to move it into those lifecycle stages. The recommended best practice is to include this record in your record schema, and annotate its fields as @readOnly in your resource. See https://github.com/linkedin/rest.li/wiki/Validation-in-Rest.li#restli-validation-annotations\",\"fields\":[{\"name\":\"created\",\"type\":{\"type\":\"record\",\"name\":\"AuditStamp\",\"doc\":\"Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage.\",\"fields\":[{\"name\":\"time\",\"type\":\"long\",\"doc\":\"When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent.\"},{\"name\":\"actor\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change.\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"impersonator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor.\",\"default\":null,\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"message\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually.\",\"default\":null}]},\"doc\":\"An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data.\",\"default\":{\"actor\":\"urn:li:corpuser:unknown\",\"impersonator\":null,\"time\":0,\"message\":null}},{\"name\":\"lastModified\",\"type\":\"AuditStamp\",\"doc\":\"An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data.\",\"default\":{\"actor\":\"urn:li:corpuser:unknown\",\"impersonator\":null,\"time\":0,\"message\":null}},{\"name\":\"deleted\",\"type\":[\"null\",\"AuditStamp\"],\"doc\":\"An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics.\",\"default\":null}]},\"doc\":\"Captures information about who created/last modified/deleted this Notebook and when\"}],\"Aspect\":{\"name\":\"notebookInfo\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Custom property bag. */
  @Deprecated public java.util.Map<java.lang.String,java.lang.String> customProperties;
  /** URL where the reference exist */
  @Deprecated public java.lang.String externalUrl;
  /** Title of the Notebook */
  @Deprecated public java.lang.String title;
  /** Detailed description about the Notebook */
  @Deprecated public java.lang.String description;
  /** Captures information about who created/last modified/deleted this Notebook and when */
  @Deprecated public com.linkedin.pegasus2avro.common.ChangeAuditStamps changeAuditStamps;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public NotebookInfo() {}

  /**
   * All-args constructor.
   */
  public NotebookInfo(java.util.Map<java.lang.String,java.lang.String> customProperties, java.lang.String externalUrl, java.lang.String title, java.lang.String description, com.linkedin.pegasus2avro.common.ChangeAuditStamps changeAuditStamps) {
    this.customProperties = customProperties;
    this.externalUrl = externalUrl;
    this.title = title;
    this.description = description;
    this.changeAuditStamps = changeAuditStamps;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return customProperties;
    case 1: return externalUrl;
    case 2: return title;
    case 3: return description;
    case 4: return changeAuditStamps;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: customProperties = (java.util.Map<java.lang.String,java.lang.String>)value$; break;
    case 1: externalUrl = (java.lang.String)value$; break;
    case 2: title = (java.lang.String)value$; break;
    case 3: description = (java.lang.String)value$; break;
    case 4: changeAuditStamps = (com.linkedin.pegasus2avro.common.ChangeAuditStamps)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'customProperties' field.
   * Custom property bag.   */
  public java.util.Map<java.lang.String,java.lang.String> getCustomProperties() {
    return customProperties;
  }

  /**
   * Sets the value of the 'customProperties' field.
   * Custom property bag.   * @param value the value to set.
   */
  public void setCustomProperties(java.util.Map<java.lang.String,java.lang.String> value) {
    this.customProperties = value;
  }

  /**
   * Gets the value of the 'externalUrl' field.
   * URL where the reference exist   */
  public java.lang.String getExternalUrl() {
    return externalUrl;
  }

  /**
   * Sets the value of the 'externalUrl' field.
   * URL where the reference exist   * @param value the value to set.
   */
  public void setExternalUrl(java.lang.String value) {
    this.externalUrl = value;
  }

  /**
   * Gets the value of the 'title' field.
   * Title of the Notebook   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * Sets the value of the 'title' field.
   * Title of the Notebook   * @param value the value to set.
   */
  public void setTitle(java.lang.String value) {
    this.title = value;
  }

  /**
   * Gets the value of the 'description' field.
   * Detailed description about the Notebook   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * Detailed description about the Notebook   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'changeAuditStamps' field.
   * Captures information about who created/last modified/deleted this Notebook and when   */
  public com.linkedin.pegasus2avro.common.ChangeAuditStamps getChangeAuditStamps() {
    return changeAuditStamps;
  }

  /**
   * Sets the value of the 'changeAuditStamps' field.
   * Captures information about who created/last modified/deleted this Notebook and when   * @param value the value to set.
   */
  public void setChangeAuditStamps(com.linkedin.pegasus2avro.common.ChangeAuditStamps value) {
    this.changeAuditStamps = value;
  }

  /** Creates a new NotebookInfo RecordBuilder */
  public static com.linkedin.pegasus2avro.notebook.NotebookInfo.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.notebook.NotebookInfo.Builder();
  }
  
  /** Creates a new NotebookInfo RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.notebook.NotebookInfo.Builder newBuilder(com.linkedin.pegasus2avro.notebook.NotebookInfo.Builder other) {
    return new com.linkedin.pegasus2avro.notebook.NotebookInfo.Builder(other);
  }
  
  /** Creates a new NotebookInfo RecordBuilder by copying an existing NotebookInfo instance */
  public static com.linkedin.pegasus2avro.notebook.NotebookInfo.Builder newBuilder(com.linkedin.pegasus2avro.notebook.NotebookInfo other) {
    return new com.linkedin.pegasus2avro.notebook.NotebookInfo.Builder(other);
  }
  
  /**
   * RecordBuilder for NotebookInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<NotebookInfo>
    implements org.apache.avro.data.RecordBuilder<NotebookInfo> {

    private java.util.Map<java.lang.String,java.lang.String> customProperties;
    private java.lang.String externalUrl;
    private java.lang.String title;
    private java.lang.String description;
    private com.linkedin.pegasus2avro.common.ChangeAuditStamps changeAuditStamps;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.notebook.NotebookInfo.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.notebook.NotebookInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.customProperties)) {
        this.customProperties = data().deepCopy(fields()[0].schema(), other.customProperties);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.externalUrl)) {
        this.externalUrl = data().deepCopy(fields()[1].schema(), other.externalUrl);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.title)) {
        this.title = data().deepCopy(fields()[2].schema(), other.title);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.description)) {
        this.description = data().deepCopy(fields()[3].schema(), other.description);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.changeAuditStamps)) {
        this.changeAuditStamps = data().deepCopy(fields()[4].schema(), other.changeAuditStamps);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing NotebookInfo instance */
    private Builder(com.linkedin.pegasus2avro.notebook.NotebookInfo other) {
            super(com.linkedin.pegasus2avro.notebook.NotebookInfo.SCHEMA$);
      if (isValidValue(fields()[0], other.customProperties)) {
        this.customProperties = data().deepCopy(fields()[0].schema(), other.customProperties);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.externalUrl)) {
        this.externalUrl = data().deepCopy(fields()[1].schema(), other.externalUrl);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.title)) {
        this.title = data().deepCopy(fields()[2].schema(), other.title);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.description)) {
        this.description = data().deepCopy(fields()[3].schema(), other.description);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.changeAuditStamps)) {
        this.changeAuditStamps = data().deepCopy(fields()[4].schema(), other.changeAuditStamps);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'customProperties' field */
    public java.util.Map<java.lang.String,java.lang.String> getCustomProperties() {
      return customProperties;
    }
    
    /** Sets the value of the 'customProperties' field */
    public com.linkedin.pegasus2avro.notebook.NotebookInfo.Builder setCustomProperties(java.util.Map<java.lang.String,java.lang.String> value) {
      validate(fields()[0], value);
      this.customProperties = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'customProperties' field has been set */
    public boolean hasCustomProperties() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'customProperties' field */
    public com.linkedin.pegasus2avro.notebook.NotebookInfo.Builder clearCustomProperties() {
      customProperties = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'externalUrl' field */
    public java.lang.String getExternalUrl() {
      return externalUrl;
    }
    
    /** Sets the value of the 'externalUrl' field */
    public com.linkedin.pegasus2avro.notebook.NotebookInfo.Builder setExternalUrl(java.lang.String value) {
      validate(fields()[1], value);
      this.externalUrl = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'externalUrl' field has been set */
    public boolean hasExternalUrl() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'externalUrl' field */
    public com.linkedin.pegasus2avro.notebook.NotebookInfo.Builder clearExternalUrl() {
      externalUrl = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'title' field */
    public java.lang.String getTitle() {
      return title;
    }
    
    /** Sets the value of the 'title' field */
    public com.linkedin.pegasus2avro.notebook.NotebookInfo.Builder setTitle(java.lang.String value) {
      validate(fields()[2], value);
      this.title = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'title' field has been set */
    public boolean hasTitle() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'title' field */
    public com.linkedin.pegasus2avro.notebook.NotebookInfo.Builder clearTitle() {
      title = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'description' field */
    public java.lang.String getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public com.linkedin.pegasus2avro.notebook.NotebookInfo.Builder setDescription(java.lang.String value) {
      validate(fields()[3], value);
      this.description = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'description' field */
    public com.linkedin.pegasus2avro.notebook.NotebookInfo.Builder clearDescription() {
      description = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'changeAuditStamps' field */
    public com.linkedin.pegasus2avro.common.ChangeAuditStamps getChangeAuditStamps() {
      return changeAuditStamps;
    }
    
    /** Sets the value of the 'changeAuditStamps' field */
    public com.linkedin.pegasus2avro.notebook.NotebookInfo.Builder setChangeAuditStamps(com.linkedin.pegasus2avro.common.ChangeAuditStamps value) {
      validate(fields()[4], value);
      this.changeAuditStamps = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'changeAuditStamps' field has been set */
    public boolean hasChangeAuditStamps() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'changeAuditStamps' field */
    public com.linkedin.pegasus2avro.notebook.NotebookInfo.Builder clearChangeAuditStamps() {
      changeAuditStamps = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public NotebookInfo build() {
      try {
        NotebookInfo record = new NotebookInfo();
        record.customProperties = fieldSetFlags()[0] ? this.customProperties : (java.util.Map<java.lang.String,java.lang.String>) defaultValue(fields()[0]);
        record.externalUrl = fieldSetFlags()[1] ? this.externalUrl : (java.lang.String) defaultValue(fields()[1]);
        record.title = fieldSetFlags()[2] ? this.title : (java.lang.String) defaultValue(fields()[2]);
        record.description = fieldSetFlags()[3] ? this.description : (java.lang.String) defaultValue(fields()[3]);
        record.changeAuditStamps = fieldSetFlags()[4] ? this.changeAuditStamps : (com.linkedin.pegasus2avro.common.ChangeAuditStamps) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
