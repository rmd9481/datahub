/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.metadata.key;  
@SuppressWarnings("all")
/** Key for a SchemaField */
@org.apache.avro.specific.AvroGenerated
public class SchemaFieldKey extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SchemaFieldKey\",\"namespace\":\"com.linkedin.pegasus2avro.metadata.key\",\"doc\":\"Key for a SchemaField\",\"fields\":[{\"name\":\"parent\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Parent associated with the schema field\",\"Searchable\":{\"fieldType\":\"URN\"},\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"fieldPath\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"fieldPath identifying the schema field\",\"Searchable\":{\"fieldType\":\"KEYWORD\"}}],\"Aspect\":{\"name\":\"schemaFieldKey\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Parent associated with the schema field */
  @Deprecated public java.lang.String parent;
  /** fieldPath identifying the schema field */
  @Deprecated public java.lang.String fieldPath;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public SchemaFieldKey() {}

  /**
   * All-args constructor.
   */
  public SchemaFieldKey(java.lang.String parent, java.lang.String fieldPath) {
    this.parent = parent;
    this.fieldPath = fieldPath;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return parent;
    case 1: return fieldPath;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: parent = (java.lang.String)value$; break;
    case 1: fieldPath = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'parent' field.
   * Parent associated with the schema field   */
  public java.lang.String getParent() {
    return parent;
  }

  /**
   * Sets the value of the 'parent' field.
   * Parent associated with the schema field   * @param value the value to set.
   */
  public void setParent(java.lang.String value) {
    this.parent = value;
  }

  /**
   * Gets the value of the 'fieldPath' field.
   * fieldPath identifying the schema field   */
  public java.lang.String getFieldPath() {
    return fieldPath;
  }

  /**
   * Sets the value of the 'fieldPath' field.
   * fieldPath identifying the schema field   * @param value the value to set.
   */
  public void setFieldPath(java.lang.String value) {
    this.fieldPath = value;
  }

  /** Creates a new SchemaFieldKey RecordBuilder */
  public static com.linkedin.pegasus2avro.metadata.key.SchemaFieldKey.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.metadata.key.SchemaFieldKey.Builder();
  }
  
  /** Creates a new SchemaFieldKey RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.metadata.key.SchemaFieldKey.Builder newBuilder(com.linkedin.pegasus2avro.metadata.key.SchemaFieldKey.Builder other) {
    return new com.linkedin.pegasus2avro.metadata.key.SchemaFieldKey.Builder(other);
  }
  
  /** Creates a new SchemaFieldKey RecordBuilder by copying an existing SchemaFieldKey instance */
  public static com.linkedin.pegasus2avro.metadata.key.SchemaFieldKey.Builder newBuilder(com.linkedin.pegasus2avro.metadata.key.SchemaFieldKey other) {
    return new com.linkedin.pegasus2avro.metadata.key.SchemaFieldKey.Builder(other);
  }
  
  /**
   * RecordBuilder for SchemaFieldKey instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SchemaFieldKey>
    implements org.apache.avro.data.RecordBuilder<SchemaFieldKey> {

    private java.lang.String parent;
    private java.lang.String fieldPath;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.metadata.key.SchemaFieldKey.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.metadata.key.SchemaFieldKey.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.parent)) {
        this.parent = data().deepCopy(fields()[0].schema(), other.parent);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.fieldPath)) {
        this.fieldPath = data().deepCopy(fields()[1].schema(), other.fieldPath);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing SchemaFieldKey instance */
    private Builder(com.linkedin.pegasus2avro.metadata.key.SchemaFieldKey other) {
            super(com.linkedin.pegasus2avro.metadata.key.SchemaFieldKey.SCHEMA$);
      if (isValidValue(fields()[0], other.parent)) {
        this.parent = data().deepCopy(fields()[0].schema(), other.parent);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.fieldPath)) {
        this.fieldPath = data().deepCopy(fields()[1].schema(), other.fieldPath);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'parent' field */
    public java.lang.String getParent() {
      return parent;
    }
    
    /** Sets the value of the 'parent' field */
    public com.linkedin.pegasus2avro.metadata.key.SchemaFieldKey.Builder setParent(java.lang.String value) {
      validate(fields()[0], value);
      this.parent = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'parent' field has been set */
    public boolean hasParent() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'parent' field */
    public com.linkedin.pegasus2avro.metadata.key.SchemaFieldKey.Builder clearParent() {
      parent = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'fieldPath' field */
    public java.lang.String getFieldPath() {
      return fieldPath;
    }
    
    /** Sets the value of the 'fieldPath' field */
    public com.linkedin.pegasus2avro.metadata.key.SchemaFieldKey.Builder setFieldPath(java.lang.String value) {
      validate(fields()[1], value);
      this.fieldPath = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'fieldPath' field has been set */
    public boolean hasFieldPath() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'fieldPath' field */
    public com.linkedin.pegasus2avro.metadata.key.SchemaFieldKey.Builder clearFieldPath() {
      fieldPath = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public SchemaFieldKey build() {
      try {
        SchemaFieldKey record = new SchemaFieldKey();
        record.parent = fieldSetFlags()[0] ? this.parent : (java.lang.String) defaultValue(fields()[0]);
        record.fieldPath = fieldSetFlags()[1] ? this.fieldPath : (java.lang.String) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
