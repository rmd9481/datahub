/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.dataprocess;  
@SuppressWarnings("all")
/** Information about the outputs of a Data process */
@org.apache.avro.specific.AvroGenerated
public class DataProcessInstanceOutput extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DataProcessInstanceOutput\",\"namespace\":\"com.linkedin.pegasus2avro.dataprocess\",\"doc\":\"Information about the outputs of a Data process\",\"fields\":[{\"name\":\"outputs\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"doc\":\"Output datasets to be produced\",\"Relationship\":{\"/*\":{\"entityTypes\":[\"dataset\"],\"name\":\"Produces\"}},\"Searchable\":{\"/*\":{\"addToFilters\":true,\"fieldName\":\"outputs\",\"fieldType\":\"URN\",\"numValuesFieldName\":\"numOutputs\",\"queryByDefault\":false}}}],\"Aspect\":{\"name\":\"dataProcessInstanceOutput\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Output datasets to be produced */
  @Deprecated public java.util.List<java.lang.String> outputs;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public DataProcessInstanceOutput() {}

  /**
   * All-args constructor.
   */
  public DataProcessInstanceOutput(java.util.List<java.lang.String> outputs) {
    this.outputs = outputs;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return outputs;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: outputs = (java.util.List<java.lang.String>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'outputs' field.
   * Output datasets to be produced   */
  public java.util.List<java.lang.String> getOutputs() {
    return outputs;
  }

  /**
   * Sets the value of the 'outputs' field.
   * Output datasets to be produced   * @param value the value to set.
   */
  public void setOutputs(java.util.List<java.lang.String> value) {
    this.outputs = value;
  }

  /** Creates a new DataProcessInstanceOutput RecordBuilder */
  public static com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceOutput.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceOutput.Builder();
  }
  
  /** Creates a new DataProcessInstanceOutput RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceOutput.Builder newBuilder(com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceOutput.Builder other) {
    return new com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceOutput.Builder(other);
  }
  
  /** Creates a new DataProcessInstanceOutput RecordBuilder by copying an existing DataProcessInstanceOutput instance */
  public static com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceOutput.Builder newBuilder(com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceOutput other) {
    return new com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceOutput.Builder(other);
  }
  
  /**
   * RecordBuilder for DataProcessInstanceOutput instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DataProcessInstanceOutput>
    implements org.apache.avro.data.RecordBuilder<DataProcessInstanceOutput> {

    private java.util.List<java.lang.String> outputs;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceOutput.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceOutput.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.outputs)) {
        this.outputs = data().deepCopy(fields()[0].schema(), other.outputs);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing DataProcessInstanceOutput instance */
    private Builder(com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceOutput other) {
            super(com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceOutput.SCHEMA$);
      if (isValidValue(fields()[0], other.outputs)) {
        this.outputs = data().deepCopy(fields()[0].schema(), other.outputs);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'outputs' field */
    public java.util.List<java.lang.String> getOutputs() {
      return outputs;
    }
    
    /** Sets the value of the 'outputs' field */
    public com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceOutput.Builder setOutputs(java.util.List<java.lang.String> value) {
      validate(fields()[0], value);
      this.outputs = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'outputs' field has been set */
    public boolean hasOutputs() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'outputs' field */
    public com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceOutput.Builder clearOutputs() {
      outputs = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public DataProcessInstanceOutput build() {
      try {
        DataProcessInstanceOutput record = new DataProcessInstanceOutput();
        record.outputs = fieldSetFlags()[0] ? this.outputs : (java.util.List<java.lang.String>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
