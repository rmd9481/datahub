/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.metadata.browse;  
@SuppressWarnings("all")
/** The model for the result of a browse query */
@org.apache.avro.specific.AvroGenerated
public class BrowseResultGroupV2 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BrowseResultGroupV2\",\"namespace\":\"com.linkedin.pegasus2avro.metadata.browse\",\"doc\":\"The model for the result of a browse query\",\"fields\":[{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Name of the group\"},{\"name\":\"urn\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Urn of the group if this is an entity\",\"default\":null,\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"count\",\"type\":\"long\",\"doc\":\"Number of entities that can be reached from this path\"},{\"name\":\"hasSubGroups\",\"type\":\"boolean\",\"doc\":\"Whether or not this group has any sub-groups underneath it\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Name of the group */
  @Deprecated public java.lang.String name;
  /** Urn of the group if this is an entity */
  @Deprecated public java.lang.String urn;
  /** Number of entities that can be reached from this path */
  @Deprecated public long count;
  /** Whether or not this group has any sub-groups underneath it */
  @Deprecated public boolean hasSubGroups;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public BrowseResultGroupV2() {}

  /**
   * All-args constructor.
   */
  public BrowseResultGroupV2(java.lang.String name, java.lang.String urn, java.lang.Long count, java.lang.Boolean hasSubGroups) {
    this.name = name;
    this.urn = urn;
    this.count = count;
    this.hasSubGroups = hasSubGroups;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return urn;
    case 2: return count;
    case 3: return hasSubGroups;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.String)value$; break;
    case 1: urn = (java.lang.String)value$; break;
    case 2: count = (java.lang.Long)value$; break;
    case 3: hasSubGroups = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   * Name of the group   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * Name of the group   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'urn' field.
   * Urn of the group if this is an entity   */
  public java.lang.String getUrn() {
    return urn;
  }

  /**
   * Sets the value of the 'urn' field.
   * Urn of the group if this is an entity   * @param value the value to set.
   */
  public void setUrn(java.lang.String value) {
    this.urn = value;
  }

  /**
   * Gets the value of the 'count' field.
   * Number of entities that can be reached from this path   */
  public java.lang.Long getCount() {
    return count;
  }

  /**
   * Sets the value of the 'count' field.
   * Number of entities that can be reached from this path   * @param value the value to set.
   */
  public void setCount(java.lang.Long value) {
    this.count = value;
  }

  /**
   * Gets the value of the 'hasSubGroups' field.
   * Whether or not this group has any sub-groups underneath it   */
  public java.lang.Boolean getHasSubGroups() {
    return hasSubGroups;
  }

  /**
   * Sets the value of the 'hasSubGroups' field.
   * Whether or not this group has any sub-groups underneath it   * @param value the value to set.
   */
  public void setHasSubGroups(java.lang.Boolean value) {
    this.hasSubGroups = value;
  }

  /** Creates a new BrowseResultGroupV2 RecordBuilder */
  public static com.linkedin.pegasus2avro.metadata.browse.BrowseResultGroupV2.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.metadata.browse.BrowseResultGroupV2.Builder();
  }
  
  /** Creates a new BrowseResultGroupV2 RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.metadata.browse.BrowseResultGroupV2.Builder newBuilder(com.linkedin.pegasus2avro.metadata.browse.BrowseResultGroupV2.Builder other) {
    return new com.linkedin.pegasus2avro.metadata.browse.BrowseResultGroupV2.Builder(other);
  }
  
  /** Creates a new BrowseResultGroupV2 RecordBuilder by copying an existing BrowseResultGroupV2 instance */
  public static com.linkedin.pegasus2avro.metadata.browse.BrowseResultGroupV2.Builder newBuilder(com.linkedin.pegasus2avro.metadata.browse.BrowseResultGroupV2 other) {
    return new com.linkedin.pegasus2avro.metadata.browse.BrowseResultGroupV2.Builder(other);
  }
  
  /**
   * RecordBuilder for BrowseResultGroupV2 instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BrowseResultGroupV2>
    implements org.apache.avro.data.RecordBuilder<BrowseResultGroupV2> {

    private java.lang.String name;
    private java.lang.String urn;
    private long count;
    private boolean hasSubGroups;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.metadata.browse.BrowseResultGroupV2.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.metadata.browse.BrowseResultGroupV2.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.urn)) {
        this.urn = data().deepCopy(fields()[1].schema(), other.urn);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.count)) {
        this.count = data().deepCopy(fields()[2].schema(), other.count);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.hasSubGroups)) {
        this.hasSubGroups = data().deepCopy(fields()[3].schema(), other.hasSubGroups);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing BrowseResultGroupV2 instance */
    private Builder(com.linkedin.pegasus2avro.metadata.browse.BrowseResultGroupV2 other) {
            super(com.linkedin.pegasus2avro.metadata.browse.BrowseResultGroupV2.SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.urn)) {
        this.urn = data().deepCopy(fields()[1].schema(), other.urn);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.count)) {
        this.count = data().deepCopy(fields()[2].schema(), other.count);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.hasSubGroups)) {
        this.hasSubGroups = data().deepCopy(fields()[3].schema(), other.hasSubGroups);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'name' field */
    public java.lang.String getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public com.linkedin.pegasus2avro.metadata.browse.BrowseResultGroupV2.Builder setName(java.lang.String value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'name' field */
    public com.linkedin.pegasus2avro.metadata.browse.BrowseResultGroupV2.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'urn' field */
    public java.lang.String getUrn() {
      return urn;
    }
    
    /** Sets the value of the 'urn' field */
    public com.linkedin.pegasus2avro.metadata.browse.BrowseResultGroupV2.Builder setUrn(java.lang.String value) {
      validate(fields()[1], value);
      this.urn = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'urn' field has been set */
    public boolean hasUrn() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'urn' field */
    public com.linkedin.pegasus2avro.metadata.browse.BrowseResultGroupV2.Builder clearUrn() {
      urn = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'count' field */
    public java.lang.Long getCount() {
      return count;
    }
    
    /** Sets the value of the 'count' field */
    public com.linkedin.pegasus2avro.metadata.browse.BrowseResultGroupV2.Builder setCount(long value) {
      validate(fields()[2], value);
      this.count = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'count' field has been set */
    public boolean hasCount() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'count' field */
    public com.linkedin.pegasus2avro.metadata.browse.BrowseResultGroupV2.Builder clearCount() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'hasSubGroups' field */
    public java.lang.Boolean getHasSubGroups() {
      return hasSubGroups;
    }
    
    /** Sets the value of the 'hasSubGroups' field */
    public com.linkedin.pegasus2avro.metadata.browse.BrowseResultGroupV2.Builder setHasSubGroups(boolean value) {
      validate(fields()[3], value);
      this.hasSubGroups = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'hasSubGroups' field has been set */
    public boolean hasHasSubGroups() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'hasSubGroups' field */
    public com.linkedin.pegasus2avro.metadata.browse.BrowseResultGroupV2.Builder clearHasSubGroups() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public BrowseResultGroupV2 build() {
      try {
        BrowseResultGroupV2 record = new BrowseResultGroupV2();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.String) defaultValue(fields()[0]);
        record.urn = fieldSetFlags()[1] ? this.urn : (java.lang.String) defaultValue(fields()[1]);
        record.count = fieldSetFlags()[2] ? this.count : (java.lang.Long) defaultValue(fields()[2]);
        record.hasSubGroups = fieldSetFlags()[3] ? this.hasSubGroups : (java.lang.Boolean) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
