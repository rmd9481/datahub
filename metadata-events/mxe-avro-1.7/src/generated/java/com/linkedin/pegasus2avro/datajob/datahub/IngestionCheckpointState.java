/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.datajob.datahub;  
@SuppressWarnings("all")
/** The checkpoint state object of a datahub ingestion run for a given job. */
@org.apache.avro.specific.AvroGenerated
public class IngestionCheckpointState extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"IngestionCheckpointState\",\"namespace\":\"com.linkedin.pegasus2avro.datajob.datahub\",\"doc\":\"The checkpoint state object of a datahub ingestion run for a given job.\",\"fields\":[{\"name\":\"formatVersion\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The version of the state format.\"},{\"name\":\"serde\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The serialization/deserialization protocol.\"},{\"name\":\"payload\",\"type\":[\"null\",\"bytes\"],\"doc\":\"Opaque blob of the state representation.\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The version of the state format. */
  @Deprecated public java.lang.String formatVersion;
  /** The serialization/deserialization protocol. */
  @Deprecated public java.lang.String serde;
  /** Opaque blob of the state representation. */
  @Deprecated public java.nio.ByteBuffer payload;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public IngestionCheckpointState() {}

  /**
   * All-args constructor.
   */
  public IngestionCheckpointState(java.lang.String formatVersion, java.lang.String serde, java.nio.ByteBuffer payload) {
    this.formatVersion = formatVersion;
    this.serde = serde;
    this.payload = payload;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return formatVersion;
    case 1: return serde;
    case 2: return payload;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: formatVersion = (java.lang.String)value$; break;
    case 1: serde = (java.lang.String)value$; break;
    case 2: payload = (java.nio.ByteBuffer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'formatVersion' field.
   * The version of the state format.   */
  public java.lang.String getFormatVersion() {
    return formatVersion;
  }

  /**
   * Sets the value of the 'formatVersion' field.
   * The version of the state format.   * @param value the value to set.
   */
  public void setFormatVersion(java.lang.String value) {
    this.formatVersion = value;
  }

  /**
   * Gets the value of the 'serde' field.
   * The serialization/deserialization protocol.   */
  public java.lang.String getSerde() {
    return serde;
  }

  /**
   * Sets the value of the 'serde' field.
   * The serialization/deserialization protocol.   * @param value the value to set.
   */
  public void setSerde(java.lang.String value) {
    this.serde = value;
  }

  /**
   * Gets the value of the 'payload' field.
   * Opaque blob of the state representation.   */
  public java.nio.ByteBuffer getPayload() {
    return payload;
  }

  /**
   * Sets the value of the 'payload' field.
   * Opaque blob of the state representation.   * @param value the value to set.
   */
  public void setPayload(java.nio.ByteBuffer value) {
    this.payload = value;
  }

  /** Creates a new IngestionCheckpointState RecordBuilder */
  public static com.linkedin.pegasus2avro.datajob.datahub.IngestionCheckpointState.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.datajob.datahub.IngestionCheckpointState.Builder();
  }
  
  /** Creates a new IngestionCheckpointState RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.datajob.datahub.IngestionCheckpointState.Builder newBuilder(com.linkedin.pegasus2avro.datajob.datahub.IngestionCheckpointState.Builder other) {
    return new com.linkedin.pegasus2avro.datajob.datahub.IngestionCheckpointState.Builder(other);
  }
  
  /** Creates a new IngestionCheckpointState RecordBuilder by copying an existing IngestionCheckpointState instance */
  public static com.linkedin.pegasus2avro.datajob.datahub.IngestionCheckpointState.Builder newBuilder(com.linkedin.pegasus2avro.datajob.datahub.IngestionCheckpointState other) {
    return new com.linkedin.pegasus2avro.datajob.datahub.IngestionCheckpointState.Builder(other);
  }
  
  /**
   * RecordBuilder for IngestionCheckpointState instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<IngestionCheckpointState>
    implements org.apache.avro.data.RecordBuilder<IngestionCheckpointState> {

    private java.lang.String formatVersion;
    private java.lang.String serde;
    private java.nio.ByteBuffer payload;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.datajob.datahub.IngestionCheckpointState.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.datajob.datahub.IngestionCheckpointState.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.formatVersion)) {
        this.formatVersion = data().deepCopy(fields()[0].schema(), other.formatVersion);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.serde)) {
        this.serde = data().deepCopy(fields()[1].schema(), other.serde);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.payload)) {
        this.payload = data().deepCopy(fields()[2].schema(), other.payload);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing IngestionCheckpointState instance */
    private Builder(com.linkedin.pegasus2avro.datajob.datahub.IngestionCheckpointState other) {
            super(com.linkedin.pegasus2avro.datajob.datahub.IngestionCheckpointState.SCHEMA$);
      if (isValidValue(fields()[0], other.formatVersion)) {
        this.formatVersion = data().deepCopy(fields()[0].schema(), other.formatVersion);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.serde)) {
        this.serde = data().deepCopy(fields()[1].schema(), other.serde);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.payload)) {
        this.payload = data().deepCopy(fields()[2].schema(), other.payload);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'formatVersion' field */
    public java.lang.String getFormatVersion() {
      return formatVersion;
    }
    
    /** Sets the value of the 'formatVersion' field */
    public com.linkedin.pegasus2avro.datajob.datahub.IngestionCheckpointState.Builder setFormatVersion(java.lang.String value) {
      validate(fields()[0], value);
      this.formatVersion = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'formatVersion' field has been set */
    public boolean hasFormatVersion() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'formatVersion' field */
    public com.linkedin.pegasus2avro.datajob.datahub.IngestionCheckpointState.Builder clearFormatVersion() {
      formatVersion = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'serde' field */
    public java.lang.String getSerde() {
      return serde;
    }
    
    /** Sets the value of the 'serde' field */
    public com.linkedin.pegasus2avro.datajob.datahub.IngestionCheckpointState.Builder setSerde(java.lang.String value) {
      validate(fields()[1], value);
      this.serde = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'serde' field has been set */
    public boolean hasSerde() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'serde' field */
    public com.linkedin.pegasus2avro.datajob.datahub.IngestionCheckpointState.Builder clearSerde() {
      serde = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'payload' field */
    public java.nio.ByteBuffer getPayload() {
      return payload;
    }
    
    /** Sets the value of the 'payload' field */
    public com.linkedin.pegasus2avro.datajob.datahub.IngestionCheckpointState.Builder setPayload(java.nio.ByteBuffer value) {
      validate(fields()[2], value);
      this.payload = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'payload' field has been set */
    public boolean hasPayload() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'payload' field */
    public com.linkedin.pegasus2avro.datajob.datahub.IngestionCheckpointState.Builder clearPayload() {
      payload = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public IngestionCheckpointState build() {
      try {
        IngestionCheckpointState record = new IngestionCheckpointState();
        record.formatVersion = fieldSetFlags()[0] ? this.formatVersion : (java.lang.String) defaultValue(fields()[0]);
        record.serde = fieldSetFlags()[1] ? this.serde : (java.lang.String) defaultValue(fields()[1]);
        record.payload = fieldSetFlags()[2] ? this.payload : (java.nio.ByteBuffer) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
