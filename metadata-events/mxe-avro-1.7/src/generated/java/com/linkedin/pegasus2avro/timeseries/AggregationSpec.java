/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.timeseries;  
@SuppressWarnings("all")
/** Provides the aggregation specification on a member/field. */
@org.apache.avro.specific.AvroGenerated
public class AggregationSpec extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AggregationSpec\",\"namespace\":\"com.linkedin.pegasus2avro.timeseries\",\"doc\":\"Provides the aggregation specification on a member/field.\",\"fields\":[{\"name\":\"fieldPath\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Name of the member/field.\"},{\"name\":\"aggregationType\",\"type\":{\"type\":\"enum\",\"name\":\"AggregationType\",\"symbols\":[\"LATEST\",\"SUM\",\"CARDINALITY\"]},\"doc\":\"Aggregation type for the metric.\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Name of the member/field. */
  @Deprecated public java.lang.String fieldPath;
  /** Aggregation type for the metric. */
  @Deprecated public com.linkedin.pegasus2avro.timeseries.AggregationType aggregationType;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public AggregationSpec() {}

  /**
   * All-args constructor.
   */
  public AggregationSpec(java.lang.String fieldPath, com.linkedin.pegasus2avro.timeseries.AggregationType aggregationType) {
    this.fieldPath = fieldPath;
    this.aggregationType = aggregationType;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return fieldPath;
    case 1: return aggregationType;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: fieldPath = (java.lang.String)value$; break;
    case 1: aggregationType = (com.linkedin.pegasus2avro.timeseries.AggregationType)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'fieldPath' field.
   * Name of the member/field.   */
  public java.lang.String getFieldPath() {
    return fieldPath;
  }

  /**
   * Sets the value of the 'fieldPath' field.
   * Name of the member/field.   * @param value the value to set.
   */
  public void setFieldPath(java.lang.String value) {
    this.fieldPath = value;
  }

  /**
   * Gets the value of the 'aggregationType' field.
   * Aggregation type for the metric.   */
  public com.linkedin.pegasus2avro.timeseries.AggregationType getAggregationType() {
    return aggregationType;
  }

  /**
   * Sets the value of the 'aggregationType' field.
   * Aggregation type for the metric.   * @param value the value to set.
   */
  public void setAggregationType(com.linkedin.pegasus2avro.timeseries.AggregationType value) {
    this.aggregationType = value;
  }

  /** Creates a new AggregationSpec RecordBuilder */
  public static com.linkedin.pegasus2avro.timeseries.AggregationSpec.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.timeseries.AggregationSpec.Builder();
  }
  
  /** Creates a new AggregationSpec RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.timeseries.AggregationSpec.Builder newBuilder(com.linkedin.pegasus2avro.timeseries.AggregationSpec.Builder other) {
    return new com.linkedin.pegasus2avro.timeseries.AggregationSpec.Builder(other);
  }
  
  /** Creates a new AggregationSpec RecordBuilder by copying an existing AggregationSpec instance */
  public static com.linkedin.pegasus2avro.timeseries.AggregationSpec.Builder newBuilder(com.linkedin.pegasus2avro.timeseries.AggregationSpec other) {
    return new com.linkedin.pegasus2avro.timeseries.AggregationSpec.Builder(other);
  }
  
  /**
   * RecordBuilder for AggregationSpec instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AggregationSpec>
    implements org.apache.avro.data.RecordBuilder<AggregationSpec> {

    private java.lang.String fieldPath;
    private com.linkedin.pegasus2avro.timeseries.AggregationType aggregationType;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.timeseries.AggregationSpec.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.timeseries.AggregationSpec.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.fieldPath)) {
        this.fieldPath = data().deepCopy(fields()[0].schema(), other.fieldPath);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.aggregationType)) {
        this.aggregationType = data().deepCopy(fields()[1].schema(), other.aggregationType);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing AggregationSpec instance */
    private Builder(com.linkedin.pegasus2avro.timeseries.AggregationSpec other) {
            super(com.linkedin.pegasus2avro.timeseries.AggregationSpec.SCHEMA$);
      if (isValidValue(fields()[0], other.fieldPath)) {
        this.fieldPath = data().deepCopy(fields()[0].schema(), other.fieldPath);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.aggregationType)) {
        this.aggregationType = data().deepCopy(fields()[1].schema(), other.aggregationType);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'fieldPath' field */
    public java.lang.String getFieldPath() {
      return fieldPath;
    }
    
    /** Sets the value of the 'fieldPath' field */
    public com.linkedin.pegasus2avro.timeseries.AggregationSpec.Builder setFieldPath(java.lang.String value) {
      validate(fields()[0], value);
      this.fieldPath = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'fieldPath' field has been set */
    public boolean hasFieldPath() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'fieldPath' field */
    public com.linkedin.pegasus2avro.timeseries.AggregationSpec.Builder clearFieldPath() {
      fieldPath = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'aggregationType' field */
    public com.linkedin.pegasus2avro.timeseries.AggregationType getAggregationType() {
      return aggregationType;
    }
    
    /** Sets the value of the 'aggregationType' field */
    public com.linkedin.pegasus2avro.timeseries.AggregationSpec.Builder setAggregationType(com.linkedin.pegasus2avro.timeseries.AggregationType value) {
      validate(fields()[1], value);
      this.aggregationType = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'aggregationType' field has been set */
    public boolean hasAggregationType() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'aggregationType' field */
    public com.linkedin.pegasus2avro.timeseries.AggregationSpec.Builder clearAggregationType() {
      aggregationType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public AggregationSpec build() {
      try {
        AggregationSpec record = new AggregationSpec();
        record.fieldPath = fieldSetFlags()[0] ? this.fieldPath : (java.lang.String) defaultValue(fields()[0]);
        record.aggregationType = fieldSetFlags()[1] ? this.aggregationType : (com.linkedin.pegasus2avro.timeseries.AggregationType) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
