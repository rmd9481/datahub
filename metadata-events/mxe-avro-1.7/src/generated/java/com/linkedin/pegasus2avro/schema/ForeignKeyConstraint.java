/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.schema;  
@SuppressWarnings("all")
/** Description of a foreign key constraint in a schema. */
@org.apache.avro.specific.AvroGenerated
public class ForeignKeyConstraint extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ForeignKeyConstraint\",\"namespace\":\"com.linkedin.pegasus2avro.schema\",\"doc\":\"Description of a foreign key constraint in a schema.\",\"fields\":[{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Name of the constraint, likely provided from the source\"},{\"name\":\"foreignFields\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"doc\":\"Fields the constraint maps to on the foreign dataset\",\"Relationship\":{\"/*\":{\"entityTypes\":[\"schemaField\"],\"name\":\"ForeignKeyTo\"}}},{\"name\":\"sourceFields\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"doc\":\"Fields the constraint maps to on the source dataset\"},{\"name\":\"foreignDataset\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Reference to the foreign dataset for ease of lookup\",\"Relationship\":{\"entityTypes\":[\"dataset\"],\"name\":\"ForeignKeyToDataset\"},\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Name of the constraint, likely provided from the source */
  @Deprecated public java.lang.String name;
  /** Fields the constraint maps to on the foreign dataset */
  @Deprecated public java.util.List<java.lang.String> foreignFields;
  /** Fields the constraint maps to on the source dataset */
  @Deprecated public java.util.List<java.lang.String> sourceFields;
  /** Reference to the foreign dataset for ease of lookup */
  @Deprecated public java.lang.String foreignDataset;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ForeignKeyConstraint() {}

  /**
   * All-args constructor.
   */
  public ForeignKeyConstraint(java.lang.String name, java.util.List<java.lang.String> foreignFields, java.util.List<java.lang.String> sourceFields, java.lang.String foreignDataset) {
    this.name = name;
    this.foreignFields = foreignFields;
    this.sourceFields = sourceFields;
    this.foreignDataset = foreignDataset;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return foreignFields;
    case 2: return sourceFields;
    case 3: return foreignDataset;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.String)value$; break;
    case 1: foreignFields = (java.util.List<java.lang.String>)value$; break;
    case 2: sourceFields = (java.util.List<java.lang.String>)value$; break;
    case 3: foreignDataset = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   * Name of the constraint, likely provided from the source   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * Name of the constraint, likely provided from the source   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'foreignFields' field.
   * Fields the constraint maps to on the foreign dataset   */
  public java.util.List<java.lang.String> getForeignFields() {
    return foreignFields;
  }

  /**
   * Sets the value of the 'foreignFields' field.
   * Fields the constraint maps to on the foreign dataset   * @param value the value to set.
   */
  public void setForeignFields(java.util.List<java.lang.String> value) {
    this.foreignFields = value;
  }

  /**
   * Gets the value of the 'sourceFields' field.
   * Fields the constraint maps to on the source dataset   */
  public java.util.List<java.lang.String> getSourceFields() {
    return sourceFields;
  }

  /**
   * Sets the value of the 'sourceFields' field.
   * Fields the constraint maps to on the source dataset   * @param value the value to set.
   */
  public void setSourceFields(java.util.List<java.lang.String> value) {
    this.sourceFields = value;
  }

  /**
   * Gets the value of the 'foreignDataset' field.
   * Reference to the foreign dataset for ease of lookup   */
  public java.lang.String getForeignDataset() {
    return foreignDataset;
  }

  /**
   * Sets the value of the 'foreignDataset' field.
   * Reference to the foreign dataset for ease of lookup   * @param value the value to set.
   */
  public void setForeignDataset(java.lang.String value) {
    this.foreignDataset = value;
  }

  /** Creates a new ForeignKeyConstraint RecordBuilder */
  public static com.linkedin.pegasus2avro.schema.ForeignKeyConstraint.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.schema.ForeignKeyConstraint.Builder();
  }
  
  /** Creates a new ForeignKeyConstraint RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.schema.ForeignKeyConstraint.Builder newBuilder(com.linkedin.pegasus2avro.schema.ForeignKeyConstraint.Builder other) {
    return new com.linkedin.pegasus2avro.schema.ForeignKeyConstraint.Builder(other);
  }
  
  /** Creates a new ForeignKeyConstraint RecordBuilder by copying an existing ForeignKeyConstraint instance */
  public static com.linkedin.pegasus2avro.schema.ForeignKeyConstraint.Builder newBuilder(com.linkedin.pegasus2avro.schema.ForeignKeyConstraint other) {
    return new com.linkedin.pegasus2avro.schema.ForeignKeyConstraint.Builder(other);
  }
  
  /**
   * RecordBuilder for ForeignKeyConstraint instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ForeignKeyConstraint>
    implements org.apache.avro.data.RecordBuilder<ForeignKeyConstraint> {

    private java.lang.String name;
    private java.util.List<java.lang.String> foreignFields;
    private java.util.List<java.lang.String> sourceFields;
    private java.lang.String foreignDataset;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.schema.ForeignKeyConstraint.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.schema.ForeignKeyConstraint.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.foreignFields)) {
        this.foreignFields = data().deepCopy(fields()[1].schema(), other.foreignFields);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.sourceFields)) {
        this.sourceFields = data().deepCopy(fields()[2].schema(), other.sourceFields);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.foreignDataset)) {
        this.foreignDataset = data().deepCopy(fields()[3].schema(), other.foreignDataset);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ForeignKeyConstraint instance */
    private Builder(com.linkedin.pegasus2avro.schema.ForeignKeyConstraint other) {
            super(com.linkedin.pegasus2avro.schema.ForeignKeyConstraint.SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.foreignFields)) {
        this.foreignFields = data().deepCopy(fields()[1].schema(), other.foreignFields);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.sourceFields)) {
        this.sourceFields = data().deepCopy(fields()[2].schema(), other.sourceFields);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.foreignDataset)) {
        this.foreignDataset = data().deepCopy(fields()[3].schema(), other.foreignDataset);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'name' field */
    public java.lang.String getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public com.linkedin.pegasus2avro.schema.ForeignKeyConstraint.Builder setName(java.lang.String value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'name' field */
    public com.linkedin.pegasus2avro.schema.ForeignKeyConstraint.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'foreignFields' field */
    public java.util.List<java.lang.String> getForeignFields() {
      return foreignFields;
    }
    
    /** Sets the value of the 'foreignFields' field */
    public com.linkedin.pegasus2avro.schema.ForeignKeyConstraint.Builder setForeignFields(java.util.List<java.lang.String> value) {
      validate(fields()[1], value);
      this.foreignFields = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'foreignFields' field has been set */
    public boolean hasForeignFields() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'foreignFields' field */
    public com.linkedin.pegasus2avro.schema.ForeignKeyConstraint.Builder clearForeignFields() {
      foreignFields = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'sourceFields' field */
    public java.util.List<java.lang.String> getSourceFields() {
      return sourceFields;
    }
    
    /** Sets the value of the 'sourceFields' field */
    public com.linkedin.pegasus2avro.schema.ForeignKeyConstraint.Builder setSourceFields(java.util.List<java.lang.String> value) {
      validate(fields()[2], value);
      this.sourceFields = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'sourceFields' field has been set */
    public boolean hasSourceFields() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'sourceFields' field */
    public com.linkedin.pegasus2avro.schema.ForeignKeyConstraint.Builder clearSourceFields() {
      sourceFields = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'foreignDataset' field */
    public java.lang.String getForeignDataset() {
      return foreignDataset;
    }
    
    /** Sets the value of the 'foreignDataset' field */
    public com.linkedin.pegasus2avro.schema.ForeignKeyConstraint.Builder setForeignDataset(java.lang.String value) {
      validate(fields()[3], value);
      this.foreignDataset = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'foreignDataset' field has been set */
    public boolean hasForeignDataset() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'foreignDataset' field */
    public com.linkedin.pegasus2avro.schema.ForeignKeyConstraint.Builder clearForeignDataset() {
      foreignDataset = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public ForeignKeyConstraint build() {
      try {
        ForeignKeyConstraint record = new ForeignKeyConstraint();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.String) defaultValue(fields()[0]);
        record.foreignFields = fieldSetFlags()[1] ? this.foreignFields : (java.util.List<java.lang.String>) defaultValue(fields()[1]);
        record.sourceFields = fieldSetFlags()[2] ? this.sourceFields : (java.util.List<java.lang.String>) defaultValue(fields()[2]);
        record.foreignDataset = fieldSetFlags()[3] ? this.foreignDataset : (java.lang.String) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
