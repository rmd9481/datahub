/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.schema;  
@SuppressWarnings("all")
/** Map field type. */
@org.apache.avro.specific.AvroGenerated
public class MapType extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MapType\",\"namespace\":\"com.linkedin.pegasus2avro.schema\",\"doc\":\"Map field type.\",\"fields\":[{\"name\":\"keyType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Key type in a map\",\"default\":null},{\"name\":\"valueType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Type of the value in a map\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Key type in a map */
  @Deprecated public java.lang.String keyType;
  /** Type of the value in a map */
  @Deprecated public java.lang.String valueType;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public MapType() {}

  /**
   * All-args constructor.
   */
  public MapType(java.lang.String keyType, java.lang.String valueType) {
    this.keyType = keyType;
    this.valueType = valueType;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return keyType;
    case 1: return valueType;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: keyType = (java.lang.String)value$; break;
    case 1: valueType = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'keyType' field.
   * Key type in a map   */
  public java.lang.String getKeyType() {
    return keyType;
  }

  /**
   * Sets the value of the 'keyType' field.
   * Key type in a map   * @param value the value to set.
   */
  public void setKeyType(java.lang.String value) {
    this.keyType = value;
  }

  /**
   * Gets the value of the 'valueType' field.
   * Type of the value in a map   */
  public java.lang.String getValueType() {
    return valueType;
  }

  /**
   * Sets the value of the 'valueType' field.
   * Type of the value in a map   * @param value the value to set.
   */
  public void setValueType(java.lang.String value) {
    this.valueType = value;
  }

  /** Creates a new MapType RecordBuilder */
  public static com.linkedin.pegasus2avro.schema.MapType.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.schema.MapType.Builder();
  }
  
  /** Creates a new MapType RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.schema.MapType.Builder newBuilder(com.linkedin.pegasus2avro.schema.MapType.Builder other) {
    return new com.linkedin.pegasus2avro.schema.MapType.Builder(other);
  }
  
  /** Creates a new MapType RecordBuilder by copying an existing MapType instance */
  public static com.linkedin.pegasus2avro.schema.MapType.Builder newBuilder(com.linkedin.pegasus2avro.schema.MapType other) {
    return new com.linkedin.pegasus2avro.schema.MapType.Builder(other);
  }
  
  /**
   * RecordBuilder for MapType instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MapType>
    implements org.apache.avro.data.RecordBuilder<MapType> {

    private java.lang.String keyType;
    private java.lang.String valueType;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.schema.MapType.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.schema.MapType.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.keyType)) {
        this.keyType = data().deepCopy(fields()[0].schema(), other.keyType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.valueType)) {
        this.valueType = data().deepCopy(fields()[1].schema(), other.valueType);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing MapType instance */
    private Builder(com.linkedin.pegasus2avro.schema.MapType other) {
            super(com.linkedin.pegasus2avro.schema.MapType.SCHEMA$);
      if (isValidValue(fields()[0], other.keyType)) {
        this.keyType = data().deepCopy(fields()[0].schema(), other.keyType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.valueType)) {
        this.valueType = data().deepCopy(fields()[1].schema(), other.valueType);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'keyType' field */
    public java.lang.String getKeyType() {
      return keyType;
    }
    
    /** Sets the value of the 'keyType' field */
    public com.linkedin.pegasus2avro.schema.MapType.Builder setKeyType(java.lang.String value) {
      validate(fields()[0], value);
      this.keyType = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'keyType' field has been set */
    public boolean hasKeyType() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'keyType' field */
    public com.linkedin.pegasus2avro.schema.MapType.Builder clearKeyType() {
      keyType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'valueType' field */
    public java.lang.String getValueType() {
      return valueType;
    }
    
    /** Sets the value of the 'valueType' field */
    public com.linkedin.pegasus2avro.schema.MapType.Builder setValueType(java.lang.String value) {
      validate(fields()[1], value);
      this.valueType = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'valueType' field has been set */
    public boolean hasValueType() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'valueType' field */
    public com.linkedin.pegasus2avro.schema.MapType.Builder clearValueType() {
      valueType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public MapType build() {
      try {
        MapType record = new MapType();
        record.keyType = fieldSetFlags()[0] ? this.keyType : (java.lang.String) defaultValue(fields()[0]);
        record.valueType = fieldSetFlags()[1] ? this.valueType : (java.lang.String) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
