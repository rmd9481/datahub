/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.ml.metadata;  
@SuppressWarnings("all")
/** Quantitative analyses should be disaggregated, that is, broken down by the chosen factors. Quantitative analyses should provide the results of evaluating the MLModel according to the chosen metrics, providing confidence interval values when possible. */
@org.apache.avro.specific.AvroGenerated
public class QuantitativeAnalyses extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"QuantitativeAnalyses\",\"namespace\":\"com.linkedin.pegasus2avro.ml.metadata\",\"doc\":\"Quantitative analyses should be disaggregated, that is, broken down by the chosen factors. Quantitative analyses should provide the results of evaluating the MLModel according to the chosen metrics, providing confidence interval values when possible.\",\"fields\":[{\"name\":\"unitaryResults\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Link to a dashboard with results showing how the MLModel performed with respect to each factor\",\"default\":null},{\"name\":\"intersectionalResults\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Link to a dashboard with results showing how the MLModel performed with respect to the intersection of evaluated factors?\",\"default\":null}],\"Aspect\":{\"name\":\"mlModelQuantitativeAnalyses\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Link to a dashboard with results showing how the MLModel performed with respect to each factor */
  @Deprecated public java.lang.String unitaryResults;
  /** Link to a dashboard with results showing how the MLModel performed with respect to the intersection of evaluated factors? */
  @Deprecated public java.lang.String intersectionalResults;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public QuantitativeAnalyses() {}

  /**
   * All-args constructor.
   */
  public QuantitativeAnalyses(java.lang.String unitaryResults, java.lang.String intersectionalResults) {
    this.unitaryResults = unitaryResults;
    this.intersectionalResults = intersectionalResults;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return unitaryResults;
    case 1: return intersectionalResults;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: unitaryResults = (java.lang.String)value$; break;
    case 1: intersectionalResults = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'unitaryResults' field.
   * Link to a dashboard with results showing how the MLModel performed with respect to each factor   */
  public java.lang.String getUnitaryResults() {
    return unitaryResults;
  }

  /**
   * Sets the value of the 'unitaryResults' field.
   * Link to a dashboard with results showing how the MLModel performed with respect to each factor   * @param value the value to set.
   */
  public void setUnitaryResults(java.lang.String value) {
    this.unitaryResults = value;
  }

  /**
   * Gets the value of the 'intersectionalResults' field.
   * Link to a dashboard with results showing how the MLModel performed with respect to the intersection of evaluated factors?   */
  public java.lang.String getIntersectionalResults() {
    return intersectionalResults;
  }

  /**
   * Sets the value of the 'intersectionalResults' field.
   * Link to a dashboard with results showing how the MLModel performed with respect to the intersection of evaluated factors?   * @param value the value to set.
   */
  public void setIntersectionalResults(java.lang.String value) {
    this.intersectionalResults = value;
  }

  /** Creates a new QuantitativeAnalyses RecordBuilder */
  public static com.linkedin.pegasus2avro.ml.metadata.QuantitativeAnalyses.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.ml.metadata.QuantitativeAnalyses.Builder();
  }
  
  /** Creates a new QuantitativeAnalyses RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.ml.metadata.QuantitativeAnalyses.Builder newBuilder(com.linkedin.pegasus2avro.ml.metadata.QuantitativeAnalyses.Builder other) {
    return new com.linkedin.pegasus2avro.ml.metadata.QuantitativeAnalyses.Builder(other);
  }
  
  /** Creates a new QuantitativeAnalyses RecordBuilder by copying an existing QuantitativeAnalyses instance */
  public static com.linkedin.pegasus2avro.ml.metadata.QuantitativeAnalyses.Builder newBuilder(com.linkedin.pegasus2avro.ml.metadata.QuantitativeAnalyses other) {
    return new com.linkedin.pegasus2avro.ml.metadata.QuantitativeAnalyses.Builder(other);
  }
  
  /**
   * RecordBuilder for QuantitativeAnalyses instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<QuantitativeAnalyses>
    implements org.apache.avro.data.RecordBuilder<QuantitativeAnalyses> {

    private java.lang.String unitaryResults;
    private java.lang.String intersectionalResults;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.ml.metadata.QuantitativeAnalyses.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.ml.metadata.QuantitativeAnalyses.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.unitaryResults)) {
        this.unitaryResults = data().deepCopy(fields()[0].schema(), other.unitaryResults);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.intersectionalResults)) {
        this.intersectionalResults = data().deepCopy(fields()[1].schema(), other.intersectionalResults);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing QuantitativeAnalyses instance */
    private Builder(com.linkedin.pegasus2avro.ml.metadata.QuantitativeAnalyses other) {
            super(com.linkedin.pegasus2avro.ml.metadata.QuantitativeAnalyses.SCHEMA$);
      if (isValidValue(fields()[0], other.unitaryResults)) {
        this.unitaryResults = data().deepCopy(fields()[0].schema(), other.unitaryResults);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.intersectionalResults)) {
        this.intersectionalResults = data().deepCopy(fields()[1].schema(), other.intersectionalResults);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'unitaryResults' field */
    public java.lang.String getUnitaryResults() {
      return unitaryResults;
    }
    
    /** Sets the value of the 'unitaryResults' field */
    public com.linkedin.pegasus2avro.ml.metadata.QuantitativeAnalyses.Builder setUnitaryResults(java.lang.String value) {
      validate(fields()[0], value);
      this.unitaryResults = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'unitaryResults' field has been set */
    public boolean hasUnitaryResults() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'unitaryResults' field */
    public com.linkedin.pegasus2avro.ml.metadata.QuantitativeAnalyses.Builder clearUnitaryResults() {
      unitaryResults = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'intersectionalResults' field */
    public java.lang.String getIntersectionalResults() {
      return intersectionalResults;
    }
    
    /** Sets the value of the 'intersectionalResults' field */
    public com.linkedin.pegasus2avro.ml.metadata.QuantitativeAnalyses.Builder setIntersectionalResults(java.lang.String value) {
      validate(fields()[1], value);
      this.intersectionalResults = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'intersectionalResults' field has been set */
    public boolean hasIntersectionalResults() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'intersectionalResults' field */
    public com.linkedin.pegasus2avro.ml.metadata.QuantitativeAnalyses.Builder clearIntersectionalResults() {
      intersectionalResults = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public QuantitativeAnalyses build() {
      try {
        QuantitativeAnalyses record = new QuantitativeAnalyses();
        record.unitaryResults = fieldSetFlags()[0] ? this.unitaryResults : (java.lang.String) defaultValue(fields()[0]);
        record.intersectionalResults = fieldSetFlags()[1] ? this.intersectionalResults : (java.lang.String) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
