/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.chart;  
@SuppressWarnings("all")
/** Experimental (Subject to breaking change) -- Stats corresponding to chart's usage.

If this aspect represents the latest snapshot of the statistics about a Chart, the eventGranularity field should be null.
If this aspect represents a bucketed window of usage statistics (e.g. over a day), then the eventGranularity field should be set accordingly. */
@org.apache.avro.specific.AvroGenerated
public class ChartUsageStatistics extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ChartUsageStatistics\",\"namespace\":\"com.linkedin.pegasus2avro.chart\",\"doc\":\"Experimental (Subject to breaking change) -- Stats corresponding to chart's usage.\\n\\nIf this aspect represents the latest snapshot of the statistics about a Chart, the eventGranularity field should be null.\\nIf this aspect represents a bucketed window of usage statistics (e.g. over a day), then the eventGranularity field should be set accordingly.\",\"fields\":[{\"name\":\"timestampMillis\",\"type\":\"long\",\"doc\":\"The event timestamp field as epoch at UTC in milli seconds.\"},{\"name\":\"eventGranularity\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"TimeWindowSize\",\"namespace\":\"com.linkedin.pegasus2avro.timeseries\",\"doc\":\"Defines the size of a time window.\",\"fields\":[{\"name\":\"unit\",\"type\":{\"type\":\"enum\",\"name\":\"CalendarInterval\",\"symbols\":[\"SECOND\",\"MINUTE\",\"HOUR\",\"DAY\",\"WEEK\",\"MONTH\",\"QUARTER\",\"YEAR\"]},\"doc\":\"Interval unit such as minute/hour/day etc.\"},{\"name\":\"multiple\",\"type\":\"int\",\"doc\":\"How many units. Defaults to 1.\",\"default\":1}]}],\"doc\":\"Granularity of the event if applicable\",\"default\":null},{\"name\":\"partitionSpec\",\"type\":[{\"type\":\"record\",\"name\":\"PartitionSpec\",\"namespace\":\"com.linkedin.pegasus2avro.timeseries\",\"doc\":\"Defines how the data is partitioned\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"PartitionType\",\"symbols\":[\"FULL_TABLE\",\"QUERY\",\"PARTITION\"]},\"default\":\"PARTITION\"},{\"name\":\"partition\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"String representation of the partition\",\"TimeseriesField\":{}},{\"name\":\"timePartition\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"TimeWindow\",\"fields\":[{\"name\":\"startTimeMillis\",\"type\":\"long\",\"doc\":\"Start time as epoch at UTC.\"},{\"name\":\"length\",\"type\":\"TimeWindowSize\",\"doc\":\"The length of the window.\"}]}],\"doc\":\"Time window of the partition if applicable\",\"default\":null}]},\"null\"],\"doc\":\"The optional partition specification.\",\"default\":{\"partition\":\"FULL_TABLE_SNAPSHOT\",\"type\":\"FULL_TABLE\",\"timePartition\":null}},{\"name\":\"messageId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The optional messageId, if provided serves as a custom user-defined unique identifier for an aspect value.\",\"default\":null},{\"name\":\"viewsCount\",\"type\":[\"null\",\"int\"],\"doc\":\"The total number of times chart has been viewed\",\"default\":null,\"TimeseriesField\":{}},{\"name\":\"uniqueUserCount\",\"type\":[\"null\",\"int\"],\"doc\":\"Unique user count\",\"default\":null,\"TimeseriesField\":{}},{\"name\":\"userCounts\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ChartUserUsageCounts\",\"doc\":\"Records a single user's usage counts for a given resource\",\"fields\":[{\"name\":\"user\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The unique id of the user.\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"viewsCount\",\"type\":[\"null\",\"int\"],\"doc\":\"The number of times the user has viewed the chart\",\"default\":null,\"TimeseriesField\":{}}]}}],\"doc\":\"Users within this bucket, with frequency counts\",\"default\":null,\"TimeseriesFieldCollection\":{\"key\":\"user\"}}],\"Aspect\":{\"name\":\"chartUsageStatistics\",\"type\":\"timeseries\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The event timestamp field as epoch at UTC in milli seconds. */
  @Deprecated public long timestampMillis;
  /** Granularity of the event if applicable */
  @Deprecated public com.linkedin.pegasus2avro.timeseries.TimeWindowSize eventGranularity;
  /** The optional partition specification. */
  @Deprecated public com.linkedin.pegasus2avro.timeseries.PartitionSpec partitionSpec;
  /** The optional messageId, if provided serves as a custom user-defined unique identifier for an aspect value. */
  @Deprecated public java.lang.String messageId;
  /** The total number of times chart has been viewed */
  @Deprecated public java.lang.Integer viewsCount;
  /** Unique user count */
  @Deprecated public java.lang.Integer uniqueUserCount;
  /** Users within this bucket, with frequency counts */
  @Deprecated public java.util.List<com.linkedin.pegasus2avro.chart.ChartUserUsageCounts> userCounts;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ChartUsageStatistics() {}

  /**
   * All-args constructor.
   */
  public ChartUsageStatistics(java.lang.Long timestampMillis, com.linkedin.pegasus2avro.timeseries.TimeWindowSize eventGranularity, com.linkedin.pegasus2avro.timeseries.PartitionSpec partitionSpec, java.lang.String messageId, java.lang.Integer viewsCount, java.lang.Integer uniqueUserCount, java.util.List<com.linkedin.pegasus2avro.chart.ChartUserUsageCounts> userCounts) {
    this.timestampMillis = timestampMillis;
    this.eventGranularity = eventGranularity;
    this.partitionSpec = partitionSpec;
    this.messageId = messageId;
    this.viewsCount = viewsCount;
    this.uniqueUserCount = uniqueUserCount;
    this.userCounts = userCounts;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return timestampMillis;
    case 1: return eventGranularity;
    case 2: return partitionSpec;
    case 3: return messageId;
    case 4: return viewsCount;
    case 5: return uniqueUserCount;
    case 6: return userCounts;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: timestampMillis = (java.lang.Long)value$; break;
    case 1: eventGranularity = (com.linkedin.pegasus2avro.timeseries.TimeWindowSize)value$; break;
    case 2: partitionSpec = (com.linkedin.pegasus2avro.timeseries.PartitionSpec)value$; break;
    case 3: messageId = (java.lang.String)value$; break;
    case 4: viewsCount = (java.lang.Integer)value$; break;
    case 5: uniqueUserCount = (java.lang.Integer)value$; break;
    case 6: userCounts = (java.util.List<com.linkedin.pegasus2avro.chart.ChartUserUsageCounts>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'timestampMillis' field.
   * The event timestamp field as epoch at UTC in milli seconds.   */
  public java.lang.Long getTimestampMillis() {
    return timestampMillis;
  }

  /**
   * Sets the value of the 'timestampMillis' field.
   * The event timestamp field as epoch at UTC in milli seconds.   * @param value the value to set.
   */
  public void setTimestampMillis(java.lang.Long value) {
    this.timestampMillis = value;
  }

  /**
   * Gets the value of the 'eventGranularity' field.
   * Granularity of the event if applicable   */
  public com.linkedin.pegasus2avro.timeseries.TimeWindowSize getEventGranularity() {
    return eventGranularity;
  }

  /**
   * Sets the value of the 'eventGranularity' field.
   * Granularity of the event if applicable   * @param value the value to set.
   */
  public void setEventGranularity(com.linkedin.pegasus2avro.timeseries.TimeWindowSize value) {
    this.eventGranularity = value;
  }

  /**
   * Gets the value of the 'partitionSpec' field.
   * The optional partition specification.   */
  public com.linkedin.pegasus2avro.timeseries.PartitionSpec getPartitionSpec() {
    return partitionSpec;
  }

  /**
   * Sets the value of the 'partitionSpec' field.
   * The optional partition specification.   * @param value the value to set.
   */
  public void setPartitionSpec(com.linkedin.pegasus2avro.timeseries.PartitionSpec value) {
    this.partitionSpec = value;
  }

  /**
   * Gets the value of the 'messageId' field.
   * The optional messageId, if provided serves as a custom user-defined unique identifier for an aspect value.   */
  public java.lang.String getMessageId() {
    return messageId;
  }

  /**
   * Sets the value of the 'messageId' field.
   * The optional messageId, if provided serves as a custom user-defined unique identifier for an aspect value.   * @param value the value to set.
   */
  public void setMessageId(java.lang.String value) {
    this.messageId = value;
  }

  /**
   * Gets the value of the 'viewsCount' field.
   * The total number of times chart has been viewed   */
  public java.lang.Integer getViewsCount() {
    return viewsCount;
  }

  /**
   * Sets the value of the 'viewsCount' field.
   * The total number of times chart has been viewed   * @param value the value to set.
   */
  public void setViewsCount(java.lang.Integer value) {
    this.viewsCount = value;
  }

  /**
   * Gets the value of the 'uniqueUserCount' field.
   * Unique user count   */
  public java.lang.Integer getUniqueUserCount() {
    return uniqueUserCount;
  }

  /**
   * Sets the value of the 'uniqueUserCount' field.
   * Unique user count   * @param value the value to set.
   */
  public void setUniqueUserCount(java.lang.Integer value) {
    this.uniqueUserCount = value;
  }

  /**
   * Gets the value of the 'userCounts' field.
   * Users within this bucket, with frequency counts   */
  public java.util.List<com.linkedin.pegasus2avro.chart.ChartUserUsageCounts> getUserCounts() {
    return userCounts;
  }

  /**
   * Sets the value of the 'userCounts' field.
   * Users within this bucket, with frequency counts   * @param value the value to set.
   */
  public void setUserCounts(java.util.List<com.linkedin.pegasus2avro.chart.ChartUserUsageCounts> value) {
    this.userCounts = value;
  }

  /** Creates a new ChartUsageStatistics RecordBuilder */
  public static com.linkedin.pegasus2avro.chart.ChartUsageStatistics.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.chart.ChartUsageStatistics.Builder();
  }
  
  /** Creates a new ChartUsageStatistics RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.chart.ChartUsageStatistics.Builder newBuilder(com.linkedin.pegasus2avro.chart.ChartUsageStatistics.Builder other) {
    return new com.linkedin.pegasus2avro.chart.ChartUsageStatistics.Builder(other);
  }
  
  /** Creates a new ChartUsageStatistics RecordBuilder by copying an existing ChartUsageStatistics instance */
  public static com.linkedin.pegasus2avro.chart.ChartUsageStatistics.Builder newBuilder(com.linkedin.pegasus2avro.chart.ChartUsageStatistics other) {
    return new com.linkedin.pegasus2avro.chart.ChartUsageStatistics.Builder(other);
  }
  
  /**
   * RecordBuilder for ChartUsageStatistics instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ChartUsageStatistics>
    implements org.apache.avro.data.RecordBuilder<ChartUsageStatistics> {

    private long timestampMillis;
    private com.linkedin.pegasus2avro.timeseries.TimeWindowSize eventGranularity;
    private com.linkedin.pegasus2avro.timeseries.PartitionSpec partitionSpec;
    private java.lang.String messageId;
    private java.lang.Integer viewsCount;
    private java.lang.Integer uniqueUserCount;
    private java.util.List<com.linkedin.pegasus2avro.chart.ChartUserUsageCounts> userCounts;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.chart.ChartUsageStatistics.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.chart.ChartUsageStatistics.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.timestampMillis)) {
        this.timestampMillis = data().deepCopy(fields()[0].schema(), other.timestampMillis);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.eventGranularity)) {
        this.eventGranularity = data().deepCopy(fields()[1].schema(), other.eventGranularity);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.partitionSpec)) {
        this.partitionSpec = data().deepCopy(fields()[2].schema(), other.partitionSpec);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.messageId)) {
        this.messageId = data().deepCopy(fields()[3].schema(), other.messageId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.viewsCount)) {
        this.viewsCount = data().deepCopy(fields()[4].schema(), other.viewsCount);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.uniqueUserCount)) {
        this.uniqueUserCount = data().deepCopy(fields()[5].schema(), other.uniqueUserCount);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.userCounts)) {
        this.userCounts = data().deepCopy(fields()[6].schema(), other.userCounts);
        fieldSetFlags()[6] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ChartUsageStatistics instance */
    private Builder(com.linkedin.pegasus2avro.chart.ChartUsageStatistics other) {
            super(com.linkedin.pegasus2avro.chart.ChartUsageStatistics.SCHEMA$);
      if (isValidValue(fields()[0], other.timestampMillis)) {
        this.timestampMillis = data().deepCopy(fields()[0].schema(), other.timestampMillis);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.eventGranularity)) {
        this.eventGranularity = data().deepCopy(fields()[1].schema(), other.eventGranularity);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.partitionSpec)) {
        this.partitionSpec = data().deepCopy(fields()[2].schema(), other.partitionSpec);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.messageId)) {
        this.messageId = data().deepCopy(fields()[3].schema(), other.messageId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.viewsCount)) {
        this.viewsCount = data().deepCopy(fields()[4].schema(), other.viewsCount);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.uniqueUserCount)) {
        this.uniqueUserCount = data().deepCopy(fields()[5].schema(), other.uniqueUserCount);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.userCounts)) {
        this.userCounts = data().deepCopy(fields()[6].schema(), other.userCounts);
        fieldSetFlags()[6] = true;
      }
    }

    /** Gets the value of the 'timestampMillis' field */
    public java.lang.Long getTimestampMillis() {
      return timestampMillis;
    }
    
    /** Sets the value of the 'timestampMillis' field */
    public com.linkedin.pegasus2avro.chart.ChartUsageStatistics.Builder setTimestampMillis(long value) {
      validate(fields()[0], value);
      this.timestampMillis = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'timestampMillis' field has been set */
    public boolean hasTimestampMillis() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'timestampMillis' field */
    public com.linkedin.pegasus2avro.chart.ChartUsageStatistics.Builder clearTimestampMillis() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'eventGranularity' field */
    public com.linkedin.pegasus2avro.timeseries.TimeWindowSize getEventGranularity() {
      return eventGranularity;
    }
    
    /** Sets the value of the 'eventGranularity' field */
    public com.linkedin.pegasus2avro.chart.ChartUsageStatistics.Builder setEventGranularity(com.linkedin.pegasus2avro.timeseries.TimeWindowSize value) {
      validate(fields()[1], value);
      this.eventGranularity = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'eventGranularity' field has been set */
    public boolean hasEventGranularity() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'eventGranularity' field */
    public com.linkedin.pegasus2avro.chart.ChartUsageStatistics.Builder clearEventGranularity() {
      eventGranularity = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'partitionSpec' field */
    public com.linkedin.pegasus2avro.timeseries.PartitionSpec getPartitionSpec() {
      return partitionSpec;
    }
    
    /** Sets the value of the 'partitionSpec' field */
    public com.linkedin.pegasus2avro.chart.ChartUsageStatistics.Builder setPartitionSpec(com.linkedin.pegasus2avro.timeseries.PartitionSpec value) {
      validate(fields()[2], value);
      this.partitionSpec = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'partitionSpec' field has been set */
    public boolean hasPartitionSpec() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'partitionSpec' field */
    public com.linkedin.pegasus2avro.chart.ChartUsageStatistics.Builder clearPartitionSpec() {
      partitionSpec = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'messageId' field */
    public java.lang.String getMessageId() {
      return messageId;
    }
    
    /** Sets the value of the 'messageId' field */
    public com.linkedin.pegasus2avro.chart.ChartUsageStatistics.Builder setMessageId(java.lang.String value) {
      validate(fields()[3], value);
      this.messageId = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'messageId' field has been set */
    public boolean hasMessageId() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'messageId' field */
    public com.linkedin.pegasus2avro.chart.ChartUsageStatistics.Builder clearMessageId() {
      messageId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'viewsCount' field */
    public java.lang.Integer getViewsCount() {
      return viewsCount;
    }
    
    /** Sets the value of the 'viewsCount' field */
    public com.linkedin.pegasus2avro.chart.ChartUsageStatistics.Builder setViewsCount(java.lang.Integer value) {
      validate(fields()[4], value);
      this.viewsCount = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'viewsCount' field has been set */
    public boolean hasViewsCount() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'viewsCount' field */
    public com.linkedin.pegasus2avro.chart.ChartUsageStatistics.Builder clearViewsCount() {
      viewsCount = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'uniqueUserCount' field */
    public java.lang.Integer getUniqueUserCount() {
      return uniqueUserCount;
    }
    
    /** Sets the value of the 'uniqueUserCount' field */
    public com.linkedin.pegasus2avro.chart.ChartUsageStatistics.Builder setUniqueUserCount(java.lang.Integer value) {
      validate(fields()[5], value);
      this.uniqueUserCount = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'uniqueUserCount' field has been set */
    public boolean hasUniqueUserCount() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'uniqueUserCount' field */
    public com.linkedin.pegasus2avro.chart.ChartUsageStatistics.Builder clearUniqueUserCount() {
      uniqueUserCount = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'userCounts' field */
    public java.util.List<com.linkedin.pegasus2avro.chart.ChartUserUsageCounts> getUserCounts() {
      return userCounts;
    }
    
    /** Sets the value of the 'userCounts' field */
    public com.linkedin.pegasus2avro.chart.ChartUsageStatistics.Builder setUserCounts(java.util.List<com.linkedin.pegasus2avro.chart.ChartUserUsageCounts> value) {
      validate(fields()[6], value);
      this.userCounts = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'userCounts' field has been set */
    public boolean hasUserCounts() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'userCounts' field */
    public com.linkedin.pegasus2avro.chart.ChartUsageStatistics.Builder clearUserCounts() {
      userCounts = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public ChartUsageStatistics build() {
      try {
        ChartUsageStatistics record = new ChartUsageStatistics();
        record.timestampMillis = fieldSetFlags()[0] ? this.timestampMillis : (java.lang.Long) defaultValue(fields()[0]);
        record.eventGranularity = fieldSetFlags()[1] ? this.eventGranularity : (com.linkedin.pegasus2avro.timeseries.TimeWindowSize) defaultValue(fields()[1]);
        record.partitionSpec = fieldSetFlags()[2] ? this.partitionSpec : (com.linkedin.pegasus2avro.timeseries.PartitionSpec) defaultValue(fields()[2]);
        record.messageId = fieldSetFlags()[3] ? this.messageId : (java.lang.String) defaultValue(fields()[3]);
        record.viewsCount = fieldSetFlags()[4] ? this.viewsCount : (java.lang.Integer) defaultValue(fields()[4]);
        record.uniqueUserCount = fieldSetFlags()[5] ? this.uniqueUserCount : (java.lang.Integer) defaultValue(fields()[5]);
        record.userCounts = fieldSetFlags()[6] ? this.userCounts : (java.util.List<com.linkedin.pegasus2avro.chart.ChartUserUsageCounts>) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
