/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.metadata.run;  
@SuppressWarnings("all")
/** The model for the result of a relationship query.
Used to get the relationships of a given entity run. */
@org.apache.avro.specific.AvroGenerated
public class DeleteReferencesResponse extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DeleteReferencesResponse\",\"namespace\":\"com.linkedin.pegasus2avro.metadata.run\",\"doc\":\"The model for the result of a relationship query.\\nUsed to get the relationships of a given entity run.\",\"fields\":[{\"name\":\"relatedAspects\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"RelatedAspect\",\"doc\":\"Metadata about how an aspect is related to some urn\",\"fields\":[{\"name\":\"entity\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\" Urn of the entity that is referenced by the aspect.\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"aspect\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"relationship\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}},{\"name\":\"total\",\"type\":\"int\",\"doc\":\"Total number of relationships that an entity urn has.\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.util.List<com.linkedin.pegasus2avro.metadata.run.RelatedAspect> relatedAspects;
  /** Total number of relationships that an entity urn has. */
  @Deprecated public int total;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public DeleteReferencesResponse() {}

  /**
   * All-args constructor.
   */
  public DeleteReferencesResponse(java.util.List<com.linkedin.pegasus2avro.metadata.run.RelatedAspect> relatedAspects, java.lang.Integer total) {
    this.relatedAspects = relatedAspects;
    this.total = total;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return relatedAspects;
    case 1: return total;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: relatedAspects = (java.util.List<com.linkedin.pegasus2avro.metadata.run.RelatedAspect>)value$; break;
    case 1: total = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'relatedAspects' field.
   */
  public java.util.List<com.linkedin.pegasus2avro.metadata.run.RelatedAspect> getRelatedAspects() {
    return relatedAspects;
  }

  /**
   * Sets the value of the 'relatedAspects' field.
   * @param value the value to set.
   */
  public void setRelatedAspects(java.util.List<com.linkedin.pegasus2avro.metadata.run.RelatedAspect> value) {
    this.relatedAspects = value;
  }

  /**
   * Gets the value of the 'total' field.
   * Total number of relationships that an entity urn has.   */
  public java.lang.Integer getTotal() {
    return total;
  }

  /**
   * Sets the value of the 'total' field.
   * Total number of relationships that an entity urn has.   * @param value the value to set.
   */
  public void setTotal(java.lang.Integer value) {
    this.total = value;
  }

  /** Creates a new DeleteReferencesResponse RecordBuilder */
  public static com.linkedin.pegasus2avro.metadata.run.DeleteReferencesResponse.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.metadata.run.DeleteReferencesResponse.Builder();
  }
  
  /** Creates a new DeleteReferencesResponse RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.metadata.run.DeleteReferencesResponse.Builder newBuilder(com.linkedin.pegasus2avro.metadata.run.DeleteReferencesResponse.Builder other) {
    return new com.linkedin.pegasus2avro.metadata.run.DeleteReferencesResponse.Builder(other);
  }
  
  /** Creates a new DeleteReferencesResponse RecordBuilder by copying an existing DeleteReferencesResponse instance */
  public static com.linkedin.pegasus2avro.metadata.run.DeleteReferencesResponse.Builder newBuilder(com.linkedin.pegasus2avro.metadata.run.DeleteReferencesResponse other) {
    return new com.linkedin.pegasus2avro.metadata.run.DeleteReferencesResponse.Builder(other);
  }
  
  /**
   * RecordBuilder for DeleteReferencesResponse instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DeleteReferencesResponse>
    implements org.apache.avro.data.RecordBuilder<DeleteReferencesResponse> {

    private java.util.List<com.linkedin.pegasus2avro.metadata.run.RelatedAspect> relatedAspects;
    private int total;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.metadata.run.DeleteReferencesResponse.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.metadata.run.DeleteReferencesResponse.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.relatedAspects)) {
        this.relatedAspects = data().deepCopy(fields()[0].schema(), other.relatedAspects);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.total)) {
        this.total = data().deepCopy(fields()[1].schema(), other.total);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing DeleteReferencesResponse instance */
    private Builder(com.linkedin.pegasus2avro.metadata.run.DeleteReferencesResponse other) {
            super(com.linkedin.pegasus2avro.metadata.run.DeleteReferencesResponse.SCHEMA$);
      if (isValidValue(fields()[0], other.relatedAspects)) {
        this.relatedAspects = data().deepCopy(fields()[0].schema(), other.relatedAspects);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.total)) {
        this.total = data().deepCopy(fields()[1].schema(), other.total);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'relatedAspects' field */
    public java.util.List<com.linkedin.pegasus2avro.metadata.run.RelatedAspect> getRelatedAspects() {
      return relatedAspects;
    }
    
    /** Sets the value of the 'relatedAspects' field */
    public com.linkedin.pegasus2avro.metadata.run.DeleteReferencesResponse.Builder setRelatedAspects(java.util.List<com.linkedin.pegasus2avro.metadata.run.RelatedAspect> value) {
      validate(fields()[0], value);
      this.relatedAspects = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'relatedAspects' field has been set */
    public boolean hasRelatedAspects() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'relatedAspects' field */
    public com.linkedin.pegasus2avro.metadata.run.DeleteReferencesResponse.Builder clearRelatedAspects() {
      relatedAspects = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'total' field */
    public java.lang.Integer getTotal() {
      return total;
    }
    
    /** Sets the value of the 'total' field */
    public com.linkedin.pegasus2avro.metadata.run.DeleteReferencesResponse.Builder setTotal(int value) {
      validate(fields()[1], value);
      this.total = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'total' field has been set */
    public boolean hasTotal() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'total' field */
    public com.linkedin.pegasus2avro.metadata.run.DeleteReferencesResponse.Builder clearTotal() {
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public DeleteReferencesResponse build() {
      try {
        DeleteReferencesResponse record = new DeleteReferencesResponse();
        record.relatedAspects = fieldSetFlags()[0] ? this.relatedAspects : (java.util.List<com.linkedin.pegasus2avro.metadata.run.RelatedAspect>) defaultValue(fields()[0]);
        record.total = fieldSetFlags()[1] ? this.total : (java.lang.Integer) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
