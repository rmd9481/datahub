/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.assertion;  
@SuppressWarnings("all")
/** Parameters for AssertionStdOperators. */
@org.apache.avro.specific.AvroGenerated
public class AssertionStdParameters extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AssertionStdParameters\",\"namespace\":\"com.linkedin.pegasus2avro.assertion\",\"doc\":\"Parameters for AssertionStdOperators.\",\"fields\":[{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"AssertionStdParameter\",\"doc\":\"Single parameter for AssertionStdOperators.\",\"fields\":[{\"name\":\"value\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The parameter value\"},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"AssertionStdParameterType\",\"symbols\":[\"STRING\",\"NUMBER\",\"LIST\",\"SET\",\"UNKNOWN\"]},\"doc\":\"The type of the parameter\"}]}],\"doc\":\"The value parameter of an assertion\",\"default\":null},{\"name\":\"maxValue\",\"type\":[\"null\",\"AssertionStdParameter\"],\"doc\":\"The maxValue parameter of an assertion\",\"default\":null},{\"name\":\"minValue\",\"type\":[\"null\",\"AssertionStdParameter\"],\"doc\":\"The minValue parameter of an assertion\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The value parameter of an assertion */
  @Deprecated public com.linkedin.pegasus2avro.assertion.AssertionStdParameter value;
  /** The maxValue parameter of an assertion */
  @Deprecated public com.linkedin.pegasus2avro.assertion.AssertionStdParameter maxValue;
  /** The minValue parameter of an assertion */
  @Deprecated public com.linkedin.pegasus2avro.assertion.AssertionStdParameter minValue;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public AssertionStdParameters() {}

  /**
   * All-args constructor.
   */
  public AssertionStdParameters(com.linkedin.pegasus2avro.assertion.AssertionStdParameter value, com.linkedin.pegasus2avro.assertion.AssertionStdParameter maxValue, com.linkedin.pegasus2avro.assertion.AssertionStdParameter minValue) {
    this.value = value;
    this.maxValue = maxValue;
    this.minValue = minValue;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return value;
    case 1: return maxValue;
    case 2: return minValue;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: value = (com.linkedin.pegasus2avro.assertion.AssertionStdParameter)value$; break;
    case 1: maxValue = (com.linkedin.pegasus2avro.assertion.AssertionStdParameter)value$; break;
    case 2: minValue = (com.linkedin.pegasus2avro.assertion.AssertionStdParameter)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'value' field.
   * The value parameter of an assertion   */
  public com.linkedin.pegasus2avro.assertion.AssertionStdParameter getValue() {
    return value;
  }

  /**
   * Sets the value of the 'value' field.
   * The value parameter of an assertion   * @param value the value to set.
   */
  public void setValue(com.linkedin.pegasus2avro.assertion.AssertionStdParameter value) {
    this.value = value;
  }

  /**
   * Gets the value of the 'maxValue' field.
   * The maxValue parameter of an assertion   */
  public com.linkedin.pegasus2avro.assertion.AssertionStdParameter getMaxValue() {
    return maxValue;
  }

  /**
   * Sets the value of the 'maxValue' field.
   * The maxValue parameter of an assertion   * @param value the value to set.
   */
  public void setMaxValue(com.linkedin.pegasus2avro.assertion.AssertionStdParameter value) {
    this.maxValue = value;
  }

  /**
   * Gets the value of the 'minValue' field.
   * The minValue parameter of an assertion   */
  public com.linkedin.pegasus2avro.assertion.AssertionStdParameter getMinValue() {
    return minValue;
  }

  /**
   * Sets the value of the 'minValue' field.
   * The minValue parameter of an assertion   * @param value the value to set.
   */
  public void setMinValue(com.linkedin.pegasus2avro.assertion.AssertionStdParameter value) {
    this.minValue = value;
  }

  /** Creates a new AssertionStdParameters RecordBuilder */
  public static com.linkedin.pegasus2avro.assertion.AssertionStdParameters.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.assertion.AssertionStdParameters.Builder();
  }
  
  /** Creates a new AssertionStdParameters RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.assertion.AssertionStdParameters.Builder newBuilder(com.linkedin.pegasus2avro.assertion.AssertionStdParameters.Builder other) {
    return new com.linkedin.pegasus2avro.assertion.AssertionStdParameters.Builder(other);
  }
  
  /** Creates a new AssertionStdParameters RecordBuilder by copying an existing AssertionStdParameters instance */
  public static com.linkedin.pegasus2avro.assertion.AssertionStdParameters.Builder newBuilder(com.linkedin.pegasus2avro.assertion.AssertionStdParameters other) {
    return new com.linkedin.pegasus2avro.assertion.AssertionStdParameters.Builder(other);
  }
  
  /**
   * RecordBuilder for AssertionStdParameters instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AssertionStdParameters>
    implements org.apache.avro.data.RecordBuilder<AssertionStdParameters> {

    private com.linkedin.pegasus2avro.assertion.AssertionStdParameter value;
    private com.linkedin.pegasus2avro.assertion.AssertionStdParameter maxValue;
    private com.linkedin.pegasus2avro.assertion.AssertionStdParameter minValue;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.assertion.AssertionStdParameters.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.assertion.AssertionStdParameters.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.value)) {
        this.value = data().deepCopy(fields()[0].schema(), other.value);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.maxValue)) {
        this.maxValue = data().deepCopy(fields()[1].schema(), other.maxValue);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.minValue)) {
        this.minValue = data().deepCopy(fields()[2].schema(), other.minValue);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing AssertionStdParameters instance */
    private Builder(com.linkedin.pegasus2avro.assertion.AssertionStdParameters other) {
            super(com.linkedin.pegasus2avro.assertion.AssertionStdParameters.SCHEMA$);
      if (isValidValue(fields()[0], other.value)) {
        this.value = data().deepCopy(fields()[0].schema(), other.value);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.maxValue)) {
        this.maxValue = data().deepCopy(fields()[1].schema(), other.maxValue);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.minValue)) {
        this.minValue = data().deepCopy(fields()[2].schema(), other.minValue);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'value' field */
    public com.linkedin.pegasus2avro.assertion.AssertionStdParameter getValue() {
      return value;
    }
    
    /** Sets the value of the 'value' field */
    public com.linkedin.pegasus2avro.assertion.AssertionStdParameters.Builder setValue(com.linkedin.pegasus2avro.assertion.AssertionStdParameter value) {
      validate(fields()[0], value);
      this.value = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'value' field has been set */
    public boolean hasValue() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'value' field */
    public com.linkedin.pegasus2avro.assertion.AssertionStdParameters.Builder clearValue() {
      value = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'maxValue' field */
    public com.linkedin.pegasus2avro.assertion.AssertionStdParameter getMaxValue() {
      return maxValue;
    }
    
    /** Sets the value of the 'maxValue' field */
    public com.linkedin.pegasus2avro.assertion.AssertionStdParameters.Builder setMaxValue(com.linkedin.pegasus2avro.assertion.AssertionStdParameter value) {
      validate(fields()[1], value);
      this.maxValue = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'maxValue' field has been set */
    public boolean hasMaxValue() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'maxValue' field */
    public com.linkedin.pegasus2avro.assertion.AssertionStdParameters.Builder clearMaxValue() {
      maxValue = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'minValue' field */
    public com.linkedin.pegasus2avro.assertion.AssertionStdParameter getMinValue() {
      return minValue;
    }
    
    /** Sets the value of the 'minValue' field */
    public com.linkedin.pegasus2avro.assertion.AssertionStdParameters.Builder setMinValue(com.linkedin.pegasus2avro.assertion.AssertionStdParameter value) {
      validate(fields()[2], value);
      this.minValue = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'minValue' field has been set */
    public boolean hasMinValue() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'minValue' field */
    public com.linkedin.pegasus2avro.assertion.AssertionStdParameters.Builder clearMinValue() {
      minValue = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public AssertionStdParameters build() {
      try {
        AssertionStdParameters record = new AssertionStdParameters();
        record.value = fieldSetFlags()[0] ? this.value : (com.linkedin.pegasus2avro.assertion.AssertionStdParameter) defaultValue(fields()[0]);
        record.maxValue = fieldSetFlags()[1] ? this.maxValue : (com.linkedin.pegasus2avro.assertion.AssertionStdParameter) defaultValue(fields()[1]);
        record.minValue = fieldSetFlags()[2] ? this.minValue : (com.linkedin.pegasus2avro.assertion.AssertionStdParameter) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
