/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.metadata.snapshot;  
@SuppressWarnings("all")
/** A metadata snapshot for a specific CorpGroup entity. */
@org.apache.avro.specific.AvroGenerated
public class CorpGroupSnapshot extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CorpGroupSnapshot\",\"namespace\":\"com.linkedin.pegasus2avro.metadata.snapshot\",\"doc\":\"A metadata snapshot for a specific CorpGroup entity.\",\"fields\":[{\"name\":\"urn\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"URN for the entity the metadata snapshot is associated with.\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.CorpGroupUrn\"}},{\"name\":\"aspects\",\"type\":{\"type\":\"array\",\"items\":[{\"type\":\"record\",\"name\":\"CorpGroupKey\",\"namespace\":\"com.linkedin.pegasus2avro.metadata.key\",\"doc\":\"Key for a CorpGroup\",\"fields\":[{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The URL-encoded name of the AD/LDAP group. Serves as a globally unique identifier within DataHub.\",\"Searchable\":{\"boostScore\":10.0,\"enableAutocomplete\":true,\"fieldType\":\"WORD_GRAM\",\"queryByDefault\":true}}],\"Aspect\":{\"name\":\"corpGroupKey\"}},{\"type\":\"record\",\"name\":\"CorpGroupInfo\",\"namespace\":\"com.linkedin.pegasus2avro.identity\",\"doc\":\"Information about a Corp Group ingested from a third party source\",\"fields\":[{\"name\":\"displayName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The name of the group.\",\"default\":null,\"Searchable\":{\"boostScore\":10.0,\"enableAutocomplete\":true,\"fieldNameAliases\":[\"_entityName\"],\"fieldType\":\"TEXT_PARTIAL\",\"queryByDefault\":true}},{\"name\":\"email\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"email of this group\",\"default\":null},{\"name\":\"admins\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"doc\":\"owners of this group\\nDeprecated! Replaced by Ownership aspect.\",\"Relationship\":{\"/*\":{\"entityTypes\":[\"corpuser\"],\"name\":\"OwnedBy\"}},\"deprecated\":true},{\"name\":\"members\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"doc\":\"List of ldap urn in this group.\\nDeprecated! Replaced by GroupMembership aspect.\",\"Relationship\":{\"/*\":{\"entityTypes\":[\"corpuser\"],\"name\":\"IsPartOf\"}},\"deprecated\":true},{\"name\":\"groups\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"doc\":\"List of groups in this group.\\nDeprecated! This field is unused.\",\"Relationship\":{\"/*\":{\"entityTypes\":[\"corpGroup\"],\"name\":\"IsPartOf\"}},\"deprecated\":true},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"A description of the group.\",\"default\":null,\"Searchable\":{\"fieldType\":\"TEXT_PARTIAL\"}},{\"name\":\"slack\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Slack channel for the group\",\"default\":null},{\"name\":\"created\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"AuditStamp\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage.\",\"fields\":[{\"name\":\"time\",\"type\":\"long\",\"doc\":\"When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent.\"},{\"name\":\"actor\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change.\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"impersonator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor.\",\"default\":null,\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"message\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually.\",\"default\":null}]}],\"doc\":\"Created Audit stamp\",\"default\":null,\"Searchable\":{\"/time\":{\"fieldName\":\"createdTime\",\"fieldType\":\"DATETIME\"}}}],\"Aspect\":{\"EntityUrns\":[\"com.linkedin.pegasus2avro.common.CorpGroupUrn\"],\"name\":\"corpGroupInfo\"}},{\"type\":\"record\",\"name\":\"GlobalTags\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"Tag aspect used for applying tags to an entity\",\"fields\":[{\"name\":\"tags\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TagAssociation\",\"doc\":\"Properties of an applied tag. For now, just an Urn. In the future we can extend this with other properties, e.g.\\npropagation parameters.\",\"fields\":[{\"name\":\"tag\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Urn of the applied tag\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.TagUrn\"}},{\"name\":\"context\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Additional context about the association\",\"default\":null}]}},\"doc\":\"Tags associated with a given entity\",\"Relationship\":{\"/*/tag\":{\"entityTypes\":[\"tag\"],\"name\":\"TaggedWith\"}},\"Searchable\":{\"/*/tag\":{\"addToFilters\":true,\"boostScore\":0.5,\"fieldName\":\"tags\",\"fieldType\":\"URN\",\"filterNameOverride\":\"Tag\",\"hasValuesFieldName\":\"hasTags\",\"queryByDefault\":true}}}],\"Aspect\":{\"name\":\"globalTags\"}},{\"type\":\"record\",\"name\":\"Status\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"The lifecycle status metadata of an entity, e.g. dataset, metric, feature, etc.\\nThis aspect is used to represent soft deletes conventionally.\",\"fields\":[{\"name\":\"removed\",\"type\":\"boolean\",\"doc\":\"Whether the entity has been removed (soft-deleted).\",\"default\":false,\"Searchable\":{\"fieldType\":\"BOOLEAN\"}}],\"Aspect\":{\"name\":\"status\"}}]},\"doc\":\"The list of metadata aspects associated with the LdapUser. Depending on the use case, this can either be all, or a selection, of supported aspects.\"}],\"Entity\":{\"keyAspect\":\"corpGroupKey\",\"name\":\"corpGroup\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** URN for the entity the metadata snapshot is associated with. */
  @Deprecated public java.lang.String urn;
  /** The list of metadata aspects associated with the LdapUser. Depending on the use case, this can either be all, or a selection, of supported aspects. */
  @Deprecated public java.util.List<java.lang.Object> aspects;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public CorpGroupSnapshot() {}

  /**
   * All-args constructor.
   */
  public CorpGroupSnapshot(java.lang.String urn, java.util.List<java.lang.Object> aspects) {
    this.urn = urn;
    this.aspects = aspects;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return urn;
    case 1: return aspects;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: urn = (java.lang.String)value$; break;
    case 1: aspects = (java.util.List<java.lang.Object>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'urn' field.
   * URN for the entity the metadata snapshot is associated with.   */
  public java.lang.String getUrn() {
    return urn;
  }

  /**
   * Sets the value of the 'urn' field.
   * URN for the entity the metadata snapshot is associated with.   * @param value the value to set.
   */
  public void setUrn(java.lang.String value) {
    this.urn = value;
  }

  /**
   * Gets the value of the 'aspects' field.
   * The list of metadata aspects associated with the LdapUser. Depending on the use case, this can either be all, or a selection, of supported aspects.   */
  public java.util.List<java.lang.Object> getAspects() {
    return aspects;
  }

  /**
   * Sets the value of the 'aspects' field.
   * The list of metadata aspects associated with the LdapUser. Depending on the use case, this can either be all, or a selection, of supported aspects.   * @param value the value to set.
   */
  public void setAspects(java.util.List<java.lang.Object> value) {
    this.aspects = value;
  }

  /** Creates a new CorpGroupSnapshot RecordBuilder */
  public static com.linkedin.pegasus2avro.metadata.snapshot.CorpGroupSnapshot.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.metadata.snapshot.CorpGroupSnapshot.Builder();
  }
  
  /** Creates a new CorpGroupSnapshot RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.metadata.snapshot.CorpGroupSnapshot.Builder newBuilder(com.linkedin.pegasus2avro.metadata.snapshot.CorpGroupSnapshot.Builder other) {
    return new com.linkedin.pegasus2avro.metadata.snapshot.CorpGroupSnapshot.Builder(other);
  }
  
  /** Creates a new CorpGroupSnapshot RecordBuilder by copying an existing CorpGroupSnapshot instance */
  public static com.linkedin.pegasus2avro.metadata.snapshot.CorpGroupSnapshot.Builder newBuilder(com.linkedin.pegasus2avro.metadata.snapshot.CorpGroupSnapshot other) {
    return new com.linkedin.pegasus2avro.metadata.snapshot.CorpGroupSnapshot.Builder(other);
  }
  
  /**
   * RecordBuilder for CorpGroupSnapshot instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CorpGroupSnapshot>
    implements org.apache.avro.data.RecordBuilder<CorpGroupSnapshot> {

    private java.lang.String urn;
    private java.util.List<java.lang.Object> aspects;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.metadata.snapshot.CorpGroupSnapshot.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.metadata.snapshot.CorpGroupSnapshot.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.urn)) {
        this.urn = data().deepCopy(fields()[0].schema(), other.urn);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.aspects)) {
        this.aspects = data().deepCopy(fields()[1].schema(), other.aspects);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing CorpGroupSnapshot instance */
    private Builder(com.linkedin.pegasus2avro.metadata.snapshot.CorpGroupSnapshot other) {
            super(com.linkedin.pegasus2avro.metadata.snapshot.CorpGroupSnapshot.SCHEMA$);
      if (isValidValue(fields()[0], other.urn)) {
        this.urn = data().deepCopy(fields()[0].schema(), other.urn);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.aspects)) {
        this.aspects = data().deepCopy(fields()[1].schema(), other.aspects);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'urn' field */
    public java.lang.String getUrn() {
      return urn;
    }
    
    /** Sets the value of the 'urn' field */
    public com.linkedin.pegasus2avro.metadata.snapshot.CorpGroupSnapshot.Builder setUrn(java.lang.String value) {
      validate(fields()[0], value);
      this.urn = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'urn' field has been set */
    public boolean hasUrn() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'urn' field */
    public com.linkedin.pegasus2avro.metadata.snapshot.CorpGroupSnapshot.Builder clearUrn() {
      urn = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'aspects' field */
    public java.util.List<java.lang.Object> getAspects() {
      return aspects;
    }
    
    /** Sets the value of the 'aspects' field */
    public com.linkedin.pegasus2avro.metadata.snapshot.CorpGroupSnapshot.Builder setAspects(java.util.List<java.lang.Object> value) {
      validate(fields()[1], value);
      this.aspects = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'aspects' field has been set */
    public boolean hasAspects() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'aspects' field */
    public com.linkedin.pegasus2avro.metadata.snapshot.CorpGroupSnapshot.Builder clearAspects() {
      aspects = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public CorpGroupSnapshot build() {
      try {
        CorpGroupSnapshot record = new CorpGroupSnapshot();
        record.urn = fieldSetFlags()[0] ? this.urn : (java.lang.String) defaultValue(fields()[0]);
        record.aspects = fieldSetFlags()[1] ? this.aspects : (java.util.List<java.lang.Object>) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
