/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.metadata.query;  
@SuppressWarnings("all")
/** Set of flags to control search behavior */
@org.apache.avro.specific.AvroGenerated
public class SearchFlags extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SearchFlags\",\"namespace\":\"com.linkedin.pegasus2avro.metadata.query\",\"doc\":\"Set of flags to control search behavior\",\"fields\":[{\"name\":\"skipCache\",\"type\":\"boolean\",\"doc\":\"Whether to skip cache\",\"default\":false},{\"name\":\"maxAggValues\",\"type\":\"int\",\"doc\":\"The maximum number of values in a facet aggregation\",\"default\":20},{\"name\":\"fulltext\",\"type\":[\"null\",\"boolean\"],\"doc\":\"Structured or unstructured fulltext query\",\"default\":null},{\"name\":\"skipHighlighting\",\"type\":[\"boolean\",\"null\"],\"doc\":\"Whether to skip highlighting\",\"default\":false},{\"name\":\"skipAggregates\",\"type\":[\"boolean\",\"null\"],\"doc\":\"Whether to skip aggregates/facets\",\"default\":false},{\"name\":\"getSuggestions\",\"type\":[\"boolean\",\"null\"],\"doc\":\"Whether to request for search suggestions on the _entityName virtualized field\",\"default\":false}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Whether to skip cache */
  @Deprecated public boolean skipCache;
  /** The maximum number of values in a facet aggregation */
  @Deprecated public int maxAggValues;
  /** Structured or unstructured fulltext query */
  @Deprecated public java.lang.Boolean fulltext;
  /** Whether to skip highlighting */
  @Deprecated public java.lang.Boolean skipHighlighting;
  /** Whether to skip aggregates/facets */
  @Deprecated public java.lang.Boolean skipAggregates;
  /** Whether to request for search suggestions on the _entityName virtualized field */
  @Deprecated public java.lang.Boolean getSuggestions;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public SearchFlags() {}

  /**
   * All-args constructor.
   */
  public SearchFlags(java.lang.Boolean skipCache, java.lang.Integer maxAggValues, java.lang.Boolean fulltext, java.lang.Boolean skipHighlighting, java.lang.Boolean skipAggregates, java.lang.Boolean getSuggestions) {
    this.skipCache = skipCache;
    this.maxAggValues = maxAggValues;
    this.fulltext = fulltext;
    this.skipHighlighting = skipHighlighting;
    this.skipAggregates = skipAggregates;
    this.getSuggestions = getSuggestions;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return skipCache;
    case 1: return maxAggValues;
    case 2: return fulltext;
    case 3: return skipHighlighting;
    case 4: return skipAggregates;
    case 5: return getSuggestions;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: skipCache = (java.lang.Boolean)value$; break;
    case 1: maxAggValues = (java.lang.Integer)value$; break;
    case 2: fulltext = (java.lang.Boolean)value$; break;
    case 3: skipHighlighting = (java.lang.Boolean)value$; break;
    case 4: skipAggregates = (java.lang.Boolean)value$; break;
    case 5: getSuggestions = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'skipCache' field.
   * Whether to skip cache   */
  public java.lang.Boolean getSkipCache() {
    return skipCache;
  }

  /**
   * Sets the value of the 'skipCache' field.
   * Whether to skip cache   * @param value the value to set.
   */
  public void setSkipCache(java.lang.Boolean value) {
    this.skipCache = value;
  }

  /**
   * Gets the value of the 'maxAggValues' field.
   * The maximum number of values in a facet aggregation   */
  public java.lang.Integer getMaxAggValues() {
    return maxAggValues;
  }

  /**
   * Sets the value of the 'maxAggValues' field.
   * The maximum number of values in a facet aggregation   * @param value the value to set.
   */
  public void setMaxAggValues(java.lang.Integer value) {
    this.maxAggValues = value;
  }

  /**
   * Gets the value of the 'fulltext' field.
   * Structured or unstructured fulltext query   */
  public java.lang.Boolean getFulltext() {
    return fulltext;
  }

  /**
   * Sets the value of the 'fulltext' field.
   * Structured or unstructured fulltext query   * @param value the value to set.
   */
  public void setFulltext(java.lang.Boolean value) {
    this.fulltext = value;
  }

  /**
   * Gets the value of the 'skipHighlighting' field.
   * Whether to skip highlighting   */
  public java.lang.Boolean getSkipHighlighting() {
    return skipHighlighting;
  }

  /**
   * Sets the value of the 'skipHighlighting' field.
   * Whether to skip highlighting   * @param value the value to set.
   */
  public void setSkipHighlighting(java.lang.Boolean value) {
    this.skipHighlighting = value;
  }

  /**
   * Gets the value of the 'skipAggregates' field.
   * Whether to skip aggregates/facets   */
  public java.lang.Boolean getSkipAggregates() {
    return skipAggregates;
  }

  /**
   * Sets the value of the 'skipAggregates' field.
   * Whether to skip aggregates/facets   * @param value the value to set.
   */
  public void setSkipAggregates(java.lang.Boolean value) {
    this.skipAggregates = value;
  }

  /**
   * Gets the value of the 'getSuggestions' field.
   * Whether to request for search suggestions on the _entityName virtualized field   */
  public java.lang.Boolean getGetSuggestions() {
    return getSuggestions;
  }

  /**
   * Sets the value of the 'getSuggestions' field.
   * Whether to request for search suggestions on the _entityName virtualized field   * @param value the value to set.
   */
  public void setGetSuggestions(java.lang.Boolean value) {
    this.getSuggestions = value;
  }

  /** Creates a new SearchFlags RecordBuilder */
  public static com.linkedin.pegasus2avro.metadata.query.SearchFlags.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.metadata.query.SearchFlags.Builder();
  }
  
  /** Creates a new SearchFlags RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.metadata.query.SearchFlags.Builder newBuilder(com.linkedin.pegasus2avro.metadata.query.SearchFlags.Builder other) {
    return new com.linkedin.pegasus2avro.metadata.query.SearchFlags.Builder(other);
  }
  
  /** Creates a new SearchFlags RecordBuilder by copying an existing SearchFlags instance */
  public static com.linkedin.pegasus2avro.metadata.query.SearchFlags.Builder newBuilder(com.linkedin.pegasus2avro.metadata.query.SearchFlags other) {
    return new com.linkedin.pegasus2avro.metadata.query.SearchFlags.Builder(other);
  }
  
  /**
   * RecordBuilder for SearchFlags instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SearchFlags>
    implements org.apache.avro.data.RecordBuilder<SearchFlags> {

    private boolean skipCache;
    private int maxAggValues;
    private java.lang.Boolean fulltext;
    private java.lang.Boolean skipHighlighting;
    private java.lang.Boolean skipAggregates;
    private java.lang.Boolean getSuggestions;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.metadata.query.SearchFlags.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.metadata.query.SearchFlags.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.skipCache)) {
        this.skipCache = data().deepCopy(fields()[0].schema(), other.skipCache);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.maxAggValues)) {
        this.maxAggValues = data().deepCopy(fields()[1].schema(), other.maxAggValues);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.fulltext)) {
        this.fulltext = data().deepCopy(fields()[2].schema(), other.fulltext);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.skipHighlighting)) {
        this.skipHighlighting = data().deepCopy(fields()[3].schema(), other.skipHighlighting);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.skipAggregates)) {
        this.skipAggregates = data().deepCopy(fields()[4].schema(), other.skipAggregates);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.getSuggestions)) {
        this.getSuggestions = data().deepCopy(fields()[5].schema(), other.getSuggestions);
        fieldSetFlags()[5] = true;
      }
    }
    
    /** Creates a Builder by copying an existing SearchFlags instance */
    private Builder(com.linkedin.pegasus2avro.metadata.query.SearchFlags other) {
            super(com.linkedin.pegasus2avro.metadata.query.SearchFlags.SCHEMA$);
      if (isValidValue(fields()[0], other.skipCache)) {
        this.skipCache = data().deepCopy(fields()[0].schema(), other.skipCache);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.maxAggValues)) {
        this.maxAggValues = data().deepCopy(fields()[1].schema(), other.maxAggValues);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.fulltext)) {
        this.fulltext = data().deepCopy(fields()[2].schema(), other.fulltext);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.skipHighlighting)) {
        this.skipHighlighting = data().deepCopy(fields()[3].schema(), other.skipHighlighting);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.skipAggregates)) {
        this.skipAggregates = data().deepCopy(fields()[4].schema(), other.skipAggregates);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.getSuggestions)) {
        this.getSuggestions = data().deepCopy(fields()[5].schema(), other.getSuggestions);
        fieldSetFlags()[5] = true;
      }
    }

    /** Gets the value of the 'skipCache' field */
    public java.lang.Boolean getSkipCache() {
      return skipCache;
    }
    
    /** Sets the value of the 'skipCache' field */
    public com.linkedin.pegasus2avro.metadata.query.SearchFlags.Builder setSkipCache(boolean value) {
      validate(fields()[0], value);
      this.skipCache = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'skipCache' field has been set */
    public boolean hasSkipCache() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'skipCache' field */
    public com.linkedin.pegasus2avro.metadata.query.SearchFlags.Builder clearSkipCache() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'maxAggValues' field */
    public java.lang.Integer getMaxAggValues() {
      return maxAggValues;
    }
    
    /** Sets the value of the 'maxAggValues' field */
    public com.linkedin.pegasus2avro.metadata.query.SearchFlags.Builder setMaxAggValues(int value) {
      validate(fields()[1], value);
      this.maxAggValues = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'maxAggValues' field has been set */
    public boolean hasMaxAggValues() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'maxAggValues' field */
    public com.linkedin.pegasus2avro.metadata.query.SearchFlags.Builder clearMaxAggValues() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'fulltext' field */
    public java.lang.Boolean getFulltext() {
      return fulltext;
    }
    
    /** Sets the value of the 'fulltext' field */
    public com.linkedin.pegasus2avro.metadata.query.SearchFlags.Builder setFulltext(java.lang.Boolean value) {
      validate(fields()[2], value);
      this.fulltext = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'fulltext' field has been set */
    public boolean hasFulltext() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'fulltext' field */
    public com.linkedin.pegasus2avro.metadata.query.SearchFlags.Builder clearFulltext() {
      fulltext = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'skipHighlighting' field */
    public java.lang.Boolean getSkipHighlighting() {
      return skipHighlighting;
    }
    
    /** Sets the value of the 'skipHighlighting' field */
    public com.linkedin.pegasus2avro.metadata.query.SearchFlags.Builder setSkipHighlighting(java.lang.Boolean value) {
      validate(fields()[3], value);
      this.skipHighlighting = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'skipHighlighting' field has been set */
    public boolean hasSkipHighlighting() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'skipHighlighting' field */
    public com.linkedin.pegasus2avro.metadata.query.SearchFlags.Builder clearSkipHighlighting() {
      skipHighlighting = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'skipAggregates' field */
    public java.lang.Boolean getSkipAggregates() {
      return skipAggregates;
    }
    
    /** Sets the value of the 'skipAggregates' field */
    public com.linkedin.pegasus2avro.metadata.query.SearchFlags.Builder setSkipAggregates(java.lang.Boolean value) {
      validate(fields()[4], value);
      this.skipAggregates = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'skipAggregates' field has been set */
    public boolean hasSkipAggregates() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'skipAggregates' field */
    public com.linkedin.pegasus2avro.metadata.query.SearchFlags.Builder clearSkipAggregates() {
      skipAggregates = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'getSuggestions' field */
    public java.lang.Boolean getGetSuggestions() {
      return getSuggestions;
    }
    
    /** Sets the value of the 'getSuggestions' field */
    public com.linkedin.pegasus2avro.metadata.query.SearchFlags.Builder setGetSuggestions(java.lang.Boolean value) {
      validate(fields()[5], value);
      this.getSuggestions = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'getSuggestions' field has been set */
    public boolean hasGetSuggestions() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'getSuggestions' field */
    public com.linkedin.pegasus2avro.metadata.query.SearchFlags.Builder clearGetSuggestions() {
      getSuggestions = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public SearchFlags build() {
      try {
        SearchFlags record = new SearchFlags();
        record.skipCache = fieldSetFlags()[0] ? this.skipCache : (java.lang.Boolean) defaultValue(fields()[0]);
        record.maxAggValues = fieldSetFlags()[1] ? this.maxAggValues : (java.lang.Integer) defaultValue(fields()[1]);
        record.fulltext = fieldSetFlags()[2] ? this.fulltext : (java.lang.Boolean) defaultValue(fields()[2]);
        record.skipHighlighting = fieldSetFlags()[3] ? this.skipHighlighting : (java.lang.Boolean) defaultValue(fields()[3]);
        record.skipAggregates = fieldSetFlags()[4] ? this.skipAggregates : (java.lang.Boolean) defaultValue(fields()[4]);
        record.getSuggestions = fieldSetFlags()[5] ? this.getSuggestions : (java.lang.Boolean) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
