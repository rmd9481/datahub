/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.common;  
@SuppressWarnings("all")
/** The lifecycle status metadata of an entity, e.g. dataset, metric, feature, etc.
This aspect is used to represent soft deletes conventionally. */
@org.apache.avro.specific.AvroGenerated
public class Status extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Status\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"The lifecycle status metadata of an entity, e.g. dataset, metric, feature, etc.\\nThis aspect is used to represent soft deletes conventionally.\",\"fields\":[{\"name\":\"removed\",\"type\":\"boolean\",\"doc\":\"Whether the entity has been removed (soft-deleted).\",\"default\":false,\"Searchable\":{\"fieldType\":\"BOOLEAN\"}}],\"Aspect\":{\"name\":\"status\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Whether the entity has been removed (soft-deleted). */
  @Deprecated public boolean removed;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Status() {}

  /**
   * All-args constructor.
   */
  public Status(java.lang.Boolean removed) {
    this.removed = removed;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return removed;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: removed = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'removed' field.
   * Whether the entity has been removed (soft-deleted).   */
  public java.lang.Boolean getRemoved() {
    return removed;
  }

  /**
   * Sets the value of the 'removed' field.
   * Whether the entity has been removed (soft-deleted).   * @param value the value to set.
   */
  public void setRemoved(java.lang.Boolean value) {
    this.removed = value;
  }

  /** Creates a new Status RecordBuilder */
  public static com.linkedin.pegasus2avro.common.Status.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.common.Status.Builder();
  }
  
  /** Creates a new Status RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.common.Status.Builder newBuilder(com.linkedin.pegasus2avro.common.Status.Builder other) {
    return new com.linkedin.pegasus2avro.common.Status.Builder(other);
  }
  
  /** Creates a new Status RecordBuilder by copying an existing Status instance */
  public static com.linkedin.pegasus2avro.common.Status.Builder newBuilder(com.linkedin.pegasus2avro.common.Status other) {
    return new com.linkedin.pegasus2avro.common.Status.Builder(other);
  }
  
  /**
   * RecordBuilder for Status instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Status>
    implements org.apache.avro.data.RecordBuilder<Status> {

    private boolean removed;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.common.Status.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.common.Status.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.removed)) {
        this.removed = data().deepCopy(fields()[0].schema(), other.removed);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Status instance */
    private Builder(com.linkedin.pegasus2avro.common.Status other) {
            super(com.linkedin.pegasus2avro.common.Status.SCHEMA$);
      if (isValidValue(fields()[0], other.removed)) {
        this.removed = data().deepCopy(fields()[0].schema(), other.removed);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'removed' field */
    public java.lang.Boolean getRemoved() {
      return removed;
    }
    
    /** Sets the value of the 'removed' field */
    public com.linkedin.pegasus2avro.common.Status.Builder setRemoved(boolean value) {
      validate(fields()[0], value);
      this.removed = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'removed' field has been set */
    public boolean hasRemoved() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'removed' field */
    public com.linkedin.pegasus2avro.common.Status.Builder clearRemoved() {
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public Status build() {
      try {
        Status record = new Status();
        record.removed = fieldSetFlags()[0] ? this.removed : (java.lang.Boolean) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
