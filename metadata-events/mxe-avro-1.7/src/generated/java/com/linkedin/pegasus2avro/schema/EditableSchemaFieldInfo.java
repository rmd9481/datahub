/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.schema;  
@SuppressWarnings("all")
/** SchemaField to describe metadata related to dataset schema. */
@org.apache.avro.specific.AvroGenerated
public class EditableSchemaFieldInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EditableSchemaFieldInfo\",\"namespace\":\"com.linkedin.pegasus2avro.schema\",\"doc\":\"SchemaField to describe metadata related to dataset schema.\",\"fields\":[{\"name\":\"fieldPath\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"FieldPath uniquely identifying the SchemaField this metadata is associated with\"},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Description\",\"default\":null,\"Searchable\":{\"boostScore\":0.1,\"fieldName\":\"editedFieldDescriptions\",\"fieldType\":\"TEXT\"}},{\"name\":\"globalTags\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GlobalTags\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"Tag aspect used for applying tags to an entity\",\"fields\":[{\"name\":\"tags\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TagAssociation\",\"doc\":\"Properties of an applied tag. For now, just an Urn. In the future we can extend this with other properties, e.g.\\npropagation parameters.\",\"fields\":[{\"name\":\"tag\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Urn of the applied tag\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.TagUrn\"}},{\"name\":\"context\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Additional context about the association\",\"default\":null}]}},\"doc\":\"Tags associated with a given entity\",\"Relationship\":{\"/*/tag\":{\"entityTypes\":[\"tag\"],\"name\":\"TaggedWith\"}},\"Searchable\":{\"/*/tag\":{\"addToFilters\":true,\"boostScore\":0.5,\"fieldName\":\"tags\",\"fieldType\":\"URN\",\"filterNameOverride\":\"Tag\",\"hasValuesFieldName\":\"hasTags\",\"queryByDefault\":true}}}],\"Aspect\":{\"name\":\"globalTags\"}}],\"doc\":\"Tags associated with the field\",\"default\":null,\"Relationship\":{\"/tags/*/tag\":{\"entityTypes\":[\"tag\"],\"name\":\"EditableSchemaFieldTaggedWith\"}},\"Searchable\":{\"/tags/*/tag\":{\"boostScore\":0.5,\"fieldName\":\"editedFieldTags\",\"fieldType\":\"URN\"}}},{\"name\":\"glossaryTerms\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GlossaryTerms\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"Related business terms information\",\"fields\":[{\"name\":\"terms\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GlossaryTermAssociation\",\"doc\":\"Properties of an applied glossary term.\",\"fields\":[{\"name\":\"urn\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Urn of the applied glossary term\",\"Relationship\":{\"entityTypes\":[\"glossaryTerm\"],\"name\":\"TermedWith\"},\"Searchable\":{\"addToFilters\":true,\"fieldName\":\"glossaryTerms\",\"fieldType\":\"URN\",\"filterNameOverride\":\"Glossary Term\",\"hasValuesFieldName\":\"hasGlossaryTerms\"},\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.GlossaryTermUrn\"}},{\"name\":\"context\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Additional context about the association\",\"default\":null}]}},\"doc\":\"The related business terms\"},{\"name\":\"auditStamp\",\"type\":{\"type\":\"record\",\"name\":\"AuditStamp\",\"doc\":\"Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage.\",\"fields\":[{\"name\":\"time\",\"type\":\"long\",\"doc\":\"When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent.\"},{\"name\":\"actor\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change.\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"impersonator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor.\",\"default\":null,\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"message\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually.\",\"default\":null}]},\"doc\":\"Audit stamp containing who reported the related business term\"}],\"Aspect\":{\"name\":\"glossaryTerms\"}}],\"doc\":\"Glossary terms associated with the field\",\"default\":null,\"Relationship\":{\"/terms/*/urn\":{\"entityTypes\":[\"glossaryTerm\"],\"name\":\"EditableSchemaFieldWithGlossaryTerm\"}},\"Searchable\":{\"/terms/*/urn\":{\"boostScore\":0.5,\"fieldName\":\"editedFieldGlossaryTerms\",\"fieldType\":\"URN\"}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** FieldPath uniquely identifying the SchemaField this metadata is associated with */
  @Deprecated public java.lang.String fieldPath;
  /** Description */
  @Deprecated public java.lang.String description;
  /** Tags associated with the field */
  @Deprecated public com.linkedin.pegasus2avro.common.GlobalTags globalTags;
  /** Glossary terms associated with the field */
  @Deprecated public com.linkedin.pegasus2avro.common.GlossaryTerms glossaryTerms;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public EditableSchemaFieldInfo() {}

  /**
   * All-args constructor.
   */
  public EditableSchemaFieldInfo(java.lang.String fieldPath, java.lang.String description, com.linkedin.pegasus2avro.common.GlobalTags globalTags, com.linkedin.pegasus2avro.common.GlossaryTerms glossaryTerms) {
    this.fieldPath = fieldPath;
    this.description = description;
    this.globalTags = globalTags;
    this.glossaryTerms = glossaryTerms;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return fieldPath;
    case 1: return description;
    case 2: return globalTags;
    case 3: return glossaryTerms;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: fieldPath = (java.lang.String)value$; break;
    case 1: description = (java.lang.String)value$; break;
    case 2: globalTags = (com.linkedin.pegasus2avro.common.GlobalTags)value$; break;
    case 3: glossaryTerms = (com.linkedin.pegasus2avro.common.GlossaryTerms)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'fieldPath' field.
   * FieldPath uniquely identifying the SchemaField this metadata is associated with   */
  public java.lang.String getFieldPath() {
    return fieldPath;
  }

  /**
   * Sets the value of the 'fieldPath' field.
   * FieldPath uniquely identifying the SchemaField this metadata is associated with   * @param value the value to set.
   */
  public void setFieldPath(java.lang.String value) {
    this.fieldPath = value;
  }

  /**
   * Gets the value of the 'description' field.
   * Description   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * Description   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'globalTags' field.
   * Tags associated with the field   */
  public com.linkedin.pegasus2avro.common.GlobalTags getGlobalTags() {
    return globalTags;
  }

  /**
   * Sets the value of the 'globalTags' field.
   * Tags associated with the field   * @param value the value to set.
   */
  public void setGlobalTags(com.linkedin.pegasus2avro.common.GlobalTags value) {
    this.globalTags = value;
  }

  /**
   * Gets the value of the 'glossaryTerms' field.
   * Glossary terms associated with the field   */
  public com.linkedin.pegasus2avro.common.GlossaryTerms getGlossaryTerms() {
    return glossaryTerms;
  }

  /**
   * Sets the value of the 'glossaryTerms' field.
   * Glossary terms associated with the field   * @param value the value to set.
   */
  public void setGlossaryTerms(com.linkedin.pegasus2avro.common.GlossaryTerms value) {
    this.glossaryTerms = value;
  }

  /** Creates a new EditableSchemaFieldInfo RecordBuilder */
  public static com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo.Builder();
  }
  
  /** Creates a new EditableSchemaFieldInfo RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo.Builder newBuilder(com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo.Builder other) {
    return new com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo.Builder(other);
  }
  
  /** Creates a new EditableSchemaFieldInfo RecordBuilder by copying an existing EditableSchemaFieldInfo instance */
  public static com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo.Builder newBuilder(com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo other) {
    return new com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo.Builder(other);
  }
  
  /**
   * RecordBuilder for EditableSchemaFieldInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EditableSchemaFieldInfo>
    implements org.apache.avro.data.RecordBuilder<EditableSchemaFieldInfo> {

    private java.lang.String fieldPath;
    private java.lang.String description;
    private com.linkedin.pegasus2avro.common.GlobalTags globalTags;
    private com.linkedin.pegasus2avro.common.GlossaryTerms glossaryTerms;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.fieldPath)) {
        this.fieldPath = data().deepCopy(fields()[0].schema(), other.fieldPath);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.description)) {
        this.description = data().deepCopy(fields()[1].schema(), other.description);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.globalTags)) {
        this.globalTags = data().deepCopy(fields()[2].schema(), other.globalTags);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.glossaryTerms)) {
        this.glossaryTerms = data().deepCopy(fields()[3].schema(), other.glossaryTerms);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing EditableSchemaFieldInfo instance */
    private Builder(com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo other) {
            super(com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo.SCHEMA$);
      if (isValidValue(fields()[0], other.fieldPath)) {
        this.fieldPath = data().deepCopy(fields()[0].schema(), other.fieldPath);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.description)) {
        this.description = data().deepCopy(fields()[1].schema(), other.description);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.globalTags)) {
        this.globalTags = data().deepCopy(fields()[2].schema(), other.globalTags);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.glossaryTerms)) {
        this.glossaryTerms = data().deepCopy(fields()[3].schema(), other.glossaryTerms);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'fieldPath' field */
    public java.lang.String getFieldPath() {
      return fieldPath;
    }
    
    /** Sets the value of the 'fieldPath' field */
    public com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo.Builder setFieldPath(java.lang.String value) {
      validate(fields()[0], value);
      this.fieldPath = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'fieldPath' field has been set */
    public boolean hasFieldPath() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'fieldPath' field */
    public com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo.Builder clearFieldPath() {
      fieldPath = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'description' field */
    public java.lang.String getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo.Builder setDescription(java.lang.String value) {
      validate(fields()[1], value);
      this.description = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'description' field */
    public com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo.Builder clearDescription() {
      description = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'globalTags' field */
    public com.linkedin.pegasus2avro.common.GlobalTags getGlobalTags() {
      return globalTags;
    }
    
    /** Sets the value of the 'globalTags' field */
    public com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo.Builder setGlobalTags(com.linkedin.pegasus2avro.common.GlobalTags value) {
      validate(fields()[2], value);
      this.globalTags = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'globalTags' field has been set */
    public boolean hasGlobalTags() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'globalTags' field */
    public com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo.Builder clearGlobalTags() {
      globalTags = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'glossaryTerms' field */
    public com.linkedin.pegasus2avro.common.GlossaryTerms getGlossaryTerms() {
      return glossaryTerms;
    }
    
    /** Sets the value of the 'glossaryTerms' field */
    public com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo.Builder setGlossaryTerms(com.linkedin.pegasus2avro.common.GlossaryTerms value) {
      validate(fields()[3], value);
      this.glossaryTerms = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'glossaryTerms' field has been set */
    public boolean hasGlossaryTerms() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'glossaryTerms' field */
    public com.linkedin.pegasus2avro.schema.EditableSchemaFieldInfo.Builder clearGlossaryTerms() {
      glossaryTerms = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public EditableSchemaFieldInfo build() {
      try {
        EditableSchemaFieldInfo record = new EditableSchemaFieldInfo();
        record.fieldPath = fieldSetFlags()[0] ? this.fieldPath : (java.lang.String) defaultValue(fields()[0]);
        record.description = fieldSetFlags()[1] ? this.description : (java.lang.String) defaultValue(fields()[1]);
        record.globalTags = fieldSetFlags()[2] ? this.globalTags : (com.linkedin.pegasus2avro.common.GlobalTags) defaultValue(fields()[2]);
        record.glossaryTerms = fieldSetFlags()[3] ? this.glossaryTerms : (com.linkedin.pegasus2avro.common.GlossaryTerms) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
