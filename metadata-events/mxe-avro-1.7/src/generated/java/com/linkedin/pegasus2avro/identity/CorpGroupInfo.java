/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.identity;  
@SuppressWarnings("all")
/** Information about a Corp Group ingested from a third party source */
@org.apache.avro.specific.AvroGenerated
public class CorpGroupInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CorpGroupInfo\",\"namespace\":\"com.linkedin.pegasus2avro.identity\",\"doc\":\"Information about a Corp Group ingested from a third party source\",\"fields\":[{\"name\":\"displayName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The name of the group.\",\"default\":null,\"Searchable\":{\"boostScore\":10.0,\"enableAutocomplete\":true,\"fieldNameAliases\":[\"_entityName\"],\"fieldType\":\"TEXT_PARTIAL\",\"queryByDefault\":true}},{\"name\":\"email\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"email of this group\",\"default\":null},{\"name\":\"admins\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"doc\":\"owners of this group\\nDeprecated! Replaced by Ownership aspect.\",\"Relationship\":{\"/*\":{\"entityTypes\":[\"corpuser\"],\"name\":\"OwnedBy\"}},\"deprecated\":true},{\"name\":\"members\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"doc\":\"List of ldap urn in this group.\\nDeprecated! Replaced by GroupMembership aspect.\",\"Relationship\":{\"/*\":{\"entityTypes\":[\"corpuser\"],\"name\":\"IsPartOf\"}},\"deprecated\":true},{\"name\":\"groups\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"doc\":\"List of groups in this group.\\nDeprecated! This field is unused.\",\"Relationship\":{\"/*\":{\"entityTypes\":[\"corpGroup\"],\"name\":\"IsPartOf\"}},\"deprecated\":true},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"A description of the group.\",\"default\":null,\"Searchable\":{\"fieldType\":\"TEXT_PARTIAL\"}},{\"name\":\"slack\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Slack channel for the group\",\"default\":null},{\"name\":\"created\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"AuditStamp\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage.\",\"fields\":[{\"name\":\"time\",\"type\":\"long\",\"doc\":\"When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent.\"},{\"name\":\"actor\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change.\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"impersonator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor.\",\"default\":null,\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"message\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually.\",\"default\":null}]}],\"doc\":\"Created Audit stamp\",\"default\":null,\"Searchable\":{\"/time\":{\"fieldName\":\"createdTime\",\"fieldType\":\"DATETIME\"}}}],\"Aspect\":{\"EntityUrns\":[\"com.linkedin.pegasus2avro.common.CorpGroupUrn\"],\"name\":\"corpGroupInfo\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The name of the group. */
  @Deprecated public java.lang.String displayName;
  /** email of this group */
  @Deprecated public java.lang.String email;
  /** owners of this group
Deprecated! Replaced by Ownership aspect. */
  @Deprecated public java.util.List<java.lang.String> admins;
  /** List of ldap urn in this group.
Deprecated! Replaced by GroupMembership aspect. */
  @Deprecated public java.util.List<java.lang.String> members;
  /** List of groups in this group.
Deprecated! This field is unused. */
  @Deprecated public java.util.List<java.lang.String> groups;
  /** A description of the group. */
  @Deprecated public java.lang.String description;
  /** Slack channel for the group */
  @Deprecated public java.lang.String slack;
  /** Created Audit stamp */
  @Deprecated public com.linkedin.pegasus2avro.common.AuditStamp created;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public CorpGroupInfo() {}

  /**
   * All-args constructor.
   */
  public CorpGroupInfo(java.lang.String displayName, java.lang.String email, java.util.List<java.lang.String> admins, java.util.List<java.lang.String> members, java.util.List<java.lang.String> groups, java.lang.String description, java.lang.String slack, com.linkedin.pegasus2avro.common.AuditStamp created) {
    this.displayName = displayName;
    this.email = email;
    this.admins = admins;
    this.members = members;
    this.groups = groups;
    this.description = description;
    this.slack = slack;
    this.created = created;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return displayName;
    case 1: return email;
    case 2: return admins;
    case 3: return members;
    case 4: return groups;
    case 5: return description;
    case 6: return slack;
    case 7: return created;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: displayName = (java.lang.String)value$; break;
    case 1: email = (java.lang.String)value$; break;
    case 2: admins = (java.util.List<java.lang.String>)value$; break;
    case 3: members = (java.util.List<java.lang.String>)value$; break;
    case 4: groups = (java.util.List<java.lang.String>)value$; break;
    case 5: description = (java.lang.String)value$; break;
    case 6: slack = (java.lang.String)value$; break;
    case 7: created = (com.linkedin.pegasus2avro.common.AuditStamp)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'displayName' field.
   * The name of the group.   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Sets the value of the 'displayName' field.
   * The name of the group.   * @param value the value to set.
   */
  public void setDisplayName(java.lang.String value) {
    this.displayName = value;
  }

  /**
   * Gets the value of the 'email' field.
   * email of this group   */
  public java.lang.String getEmail() {
    return email;
  }

  /**
   * Sets the value of the 'email' field.
   * email of this group   * @param value the value to set.
   */
  public void setEmail(java.lang.String value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'admins' field.
   * owners of this group
Deprecated! Replaced by Ownership aspect.   */
  public java.util.List<java.lang.String> getAdmins() {
    return admins;
  }

  /**
   * Sets the value of the 'admins' field.
   * owners of this group
Deprecated! Replaced by Ownership aspect.   * @param value the value to set.
   */
  public void setAdmins(java.util.List<java.lang.String> value) {
    this.admins = value;
  }

  /**
   * Gets the value of the 'members' field.
   * List of ldap urn in this group.
Deprecated! Replaced by GroupMembership aspect.   */
  public java.util.List<java.lang.String> getMembers() {
    return members;
  }

  /**
   * Sets the value of the 'members' field.
   * List of ldap urn in this group.
Deprecated! Replaced by GroupMembership aspect.   * @param value the value to set.
   */
  public void setMembers(java.util.List<java.lang.String> value) {
    this.members = value;
  }

  /**
   * Gets the value of the 'groups' field.
   * List of groups in this group.
Deprecated! This field is unused.   */
  public java.util.List<java.lang.String> getGroups() {
    return groups;
  }

  /**
   * Sets the value of the 'groups' field.
   * List of groups in this group.
Deprecated! This field is unused.   * @param value the value to set.
   */
  public void setGroups(java.util.List<java.lang.String> value) {
    this.groups = value;
  }

  /**
   * Gets the value of the 'description' field.
   * A description of the group.   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * A description of the group.   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'slack' field.
   * Slack channel for the group   */
  public java.lang.String getSlack() {
    return slack;
  }

  /**
   * Sets the value of the 'slack' field.
   * Slack channel for the group   * @param value the value to set.
   */
  public void setSlack(java.lang.String value) {
    this.slack = value;
  }

  /**
   * Gets the value of the 'created' field.
   * Created Audit stamp   */
  public com.linkedin.pegasus2avro.common.AuditStamp getCreated() {
    return created;
  }

  /**
   * Sets the value of the 'created' field.
   * Created Audit stamp   * @param value the value to set.
   */
  public void setCreated(com.linkedin.pegasus2avro.common.AuditStamp value) {
    this.created = value;
  }

  /** Creates a new CorpGroupInfo RecordBuilder */
  public static com.linkedin.pegasus2avro.identity.CorpGroupInfo.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.identity.CorpGroupInfo.Builder();
  }
  
  /** Creates a new CorpGroupInfo RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.identity.CorpGroupInfo.Builder newBuilder(com.linkedin.pegasus2avro.identity.CorpGroupInfo.Builder other) {
    return new com.linkedin.pegasus2avro.identity.CorpGroupInfo.Builder(other);
  }
  
  /** Creates a new CorpGroupInfo RecordBuilder by copying an existing CorpGroupInfo instance */
  public static com.linkedin.pegasus2avro.identity.CorpGroupInfo.Builder newBuilder(com.linkedin.pegasus2avro.identity.CorpGroupInfo other) {
    return new com.linkedin.pegasus2avro.identity.CorpGroupInfo.Builder(other);
  }
  
  /**
   * RecordBuilder for CorpGroupInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CorpGroupInfo>
    implements org.apache.avro.data.RecordBuilder<CorpGroupInfo> {

    private java.lang.String displayName;
    private java.lang.String email;
    private java.util.List<java.lang.String> admins;
    private java.util.List<java.lang.String> members;
    private java.util.List<java.lang.String> groups;
    private java.lang.String description;
    private java.lang.String slack;
    private com.linkedin.pegasus2avro.common.AuditStamp created;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.identity.CorpGroupInfo.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.identity.CorpGroupInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.displayName)) {
        this.displayName = data().deepCopy(fields()[0].schema(), other.displayName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.email)) {
        this.email = data().deepCopy(fields()[1].schema(), other.email);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.admins)) {
        this.admins = data().deepCopy(fields()[2].schema(), other.admins);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.members)) {
        this.members = data().deepCopy(fields()[3].schema(), other.members);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.groups)) {
        this.groups = data().deepCopy(fields()[4].schema(), other.groups);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.description)) {
        this.description = data().deepCopy(fields()[5].schema(), other.description);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.slack)) {
        this.slack = data().deepCopy(fields()[6].schema(), other.slack);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.created)) {
        this.created = data().deepCopy(fields()[7].schema(), other.created);
        fieldSetFlags()[7] = true;
      }
    }
    
    /** Creates a Builder by copying an existing CorpGroupInfo instance */
    private Builder(com.linkedin.pegasus2avro.identity.CorpGroupInfo other) {
            super(com.linkedin.pegasus2avro.identity.CorpGroupInfo.SCHEMA$);
      if (isValidValue(fields()[0], other.displayName)) {
        this.displayName = data().deepCopy(fields()[0].schema(), other.displayName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.email)) {
        this.email = data().deepCopy(fields()[1].schema(), other.email);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.admins)) {
        this.admins = data().deepCopy(fields()[2].schema(), other.admins);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.members)) {
        this.members = data().deepCopy(fields()[3].schema(), other.members);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.groups)) {
        this.groups = data().deepCopy(fields()[4].schema(), other.groups);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.description)) {
        this.description = data().deepCopy(fields()[5].schema(), other.description);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.slack)) {
        this.slack = data().deepCopy(fields()[6].schema(), other.slack);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.created)) {
        this.created = data().deepCopy(fields()[7].schema(), other.created);
        fieldSetFlags()[7] = true;
      }
    }

    /** Gets the value of the 'displayName' field */
    public java.lang.String getDisplayName() {
      return displayName;
    }
    
    /** Sets the value of the 'displayName' field */
    public com.linkedin.pegasus2avro.identity.CorpGroupInfo.Builder setDisplayName(java.lang.String value) {
      validate(fields()[0], value);
      this.displayName = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'displayName' field has been set */
    public boolean hasDisplayName() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'displayName' field */
    public com.linkedin.pegasus2avro.identity.CorpGroupInfo.Builder clearDisplayName() {
      displayName = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'email' field */
    public java.lang.String getEmail() {
      return email;
    }
    
    /** Sets the value of the 'email' field */
    public com.linkedin.pegasus2avro.identity.CorpGroupInfo.Builder setEmail(java.lang.String value) {
      validate(fields()[1], value);
      this.email = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'email' field has been set */
    public boolean hasEmail() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'email' field */
    public com.linkedin.pegasus2avro.identity.CorpGroupInfo.Builder clearEmail() {
      email = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'admins' field */
    public java.util.List<java.lang.String> getAdmins() {
      return admins;
    }
    
    /** Sets the value of the 'admins' field */
    public com.linkedin.pegasus2avro.identity.CorpGroupInfo.Builder setAdmins(java.util.List<java.lang.String> value) {
      validate(fields()[2], value);
      this.admins = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'admins' field has been set */
    public boolean hasAdmins() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'admins' field */
    public com.linkedin.pegasus2avro.identity.CorpGroupInfo.Builder clearAdmins() {
      admins = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'members' field */
    public java.util.List<java.lang.String> getMembers() {
      return members;
    }
    
    /** Sets the value of the 'members' field */
    public com.linkedin.pegasus2avro.identity.CorpGroupInfo.Builder setMembers(java.util.List<java.lang.String> value) {
      validate(fields()[3], value);
      this.members = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'members' field has been set */
    public boolean hasMembers() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'members' field */
    public com.linkedin.pegasus2avro.identity.CorpGroupInfo.Builder clearMembers() {
      members = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'groups' field */
    public java.util.List<java.lang.String> getGroups() {
      return groups;
    }
    
    /** Sets the value of the 'groups' field */
    public com.linkedin.pegasus2avro.identity.CorpGroupInfo.Builder setGroups(java.util.List<java.lang.String> value) {
      validate(fields()[4], value);
      this.groups = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'groups' field has been set */
    public boolean hasGroups() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'groups' field */
    public com.linkedin.pegasus2avro.identity.CorpGroupInfo.Builder clearGroups() {
      groups = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'description' field */
    public java.lang.String getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public com.linkedin.pegasus2avro.identity.CorpGroupInfo.Builder setDescription(java.lang.String value) {
      validate(fields()[5], value);
      this.description = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'description' field */
    public com.linkedin.pegasus2avro.identity.CorpGroupInfo.Builder clearDescription() {
      description = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'slack' field */
    public java.lang.String getSlack() {
      return slack;
    }
    
    /** Sets the value of the 'slack' field */
    public com.linkedin.pegasus2avro.identity.CorpGroupInfo.Builder setSlack(java.lang.String value) {
      validate(fields()[6], value);
      this.slack = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'slack' field has been set */
    public boolean hasSlack() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'slack' field */
    public com.linkedin.pegasus2avro.identity.CorpGroupInfo.Builder clearSlack() {
      slack = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'created' field */
    public com.linkedin.pegasus2avro.common.AuditStamp getCreated() {
      return created;
    }
    
    /** Sets the value of the 'created' field */
    public com.linkedin.pegasus2avro.identity.CorpGroupInfo.Builder setCreated(com.linkedin.pegasus2avro.common.AuditStamp value) {
      validate(fields()[7], value);
      this.created = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'created' field has been set */
    public boolean hasCreated() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'created' field */
    public com.linkedin.pegasus2avro.identity.CorpGroupInfo.Builder clearCreated() {
      created = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    public CorpGroupInfo build() {
      try {
        CorpGroupInfo record = new CorpGroupInfo();
        record.displayName = fieldSetFlags()[0] ? this.displayName : (java.lang.String) defaultValue(fields()[0]);
        record.email = fieldSetFlags()[1] ? this.email : (java.lang.String) defaultValue(fields()[1]);
        record.admins = fieldSetFlags()[2] ? this.admins : (java.util.List<java.lang.String>) defaultValue(fields()[2]);
        record.members = fieldSetFlags()[3] ? this.members : (java.util.List<java.lang.String>) defaultValue(fields()[3]);
        record.groups = fieldSetFlags()[4] ? this.groups : (java.util.List<java.lang.String>) defaultValue(fields()[4]);
        record.description = fieldSetFlags()[5] ? this.description : (java.lang.String) defaultValue(fields()[5]);
        record.slack = fieldSetFlags()[6] ? this.slack : (java.lang.String) defaultValue(fields()[6]);
        record.created = fieldSetFlags()[7] ? this.created : (com.linkedin.pegasus2avro.common.AuditStamp) defaultValue(fields()[7]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
