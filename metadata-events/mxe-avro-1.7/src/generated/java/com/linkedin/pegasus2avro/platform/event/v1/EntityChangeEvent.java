/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.platform.event.v1;  
@SuppressWarnings("all")
/** Shared fields for all entity change events. */
@org.apache.avro.specific.AvroGenerated
public class EntityChangeEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EntityChangeEvent\",\"namespace\":\"com.linkedin.pegasus2avro.platform.event.v1\",\"doc\":\"Shared fields for all entity change events.\",\"fields\":[{\"name\":\"entityType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The type of the entity affected. Corresponds to the entity registry, e.g. 'dataset', 'chart', 'dashboard', etc.\"},{\"name\":\"entityUrn\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The urn of the entity which was affected.\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"category\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The category type (TAG, GLOSSARY_TERM, OWNERSHIP, TECHNICAL_SCHEMA, etc). This is used to determine what the rest of the schema will look like.\"},{\"name\":\"operation\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The operation type. This is used to determine what the rest of the schema will look like.\"},{\"name\":\"modifier\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The urn of the entity which was affected.\",\"default\":null},{\"name\":\"parameters\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Parameters\",\"doc\":\"Arbitrary key-value parameters for an Entity Change Event. (any record).\",\"fields\":[]}],\"doc\":\"Arbitrary key-value parameters corresponding to the event.\",\"default\":null},{\"name\":\"auditStamp\",\"type\":{\"type\":\"record\",\"name\":\"AuditStamp\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage.\",\"fields\":[{\"name\":\"time\",\"type\":\"long\",\"doc\":\"When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent.\"},{\"name\":\"actor\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change.\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"impersonator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor.\",\"default\":null,\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"message\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually.\",\"default\":null}]},\"doc\":\"Audit stamp of the operation\"},{\"name\":\"version\",\"type\":\"int\",\"doc\":\"The version of the event type, incremented in integers.\"}],\"Event\":{\"name\":\"entityChangeEvent\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The type of the entity affected. Corresponds to the entity registry, e.g. 'dataset', 'chart', 'dashboard', etc. */
  @Deprecated public java.lang.String entityType;
  /** The urn of the entity which was affected. */
  @Deprecated public java.lang.String entityUrn;
  /** The category type (TAG, GLOSSARY_TERM, OWNERSHIP, TECHNICAL_SCHEMA, etc). This is used to determine what the rest of the schema will look like. */
  @Deprecated public java.lang.String category;
  /** The operation type. This is used to determine what the rest of the schema will look like. */
  @Deprecated public java.lang.String operation;
  /** The urn of the entity which was affected. */
  @Deprecated public java.lang.String modifier;
  /** Arbitrary key-value parameters corresponding to the event. */
  @Deprecated public com.linkedin.pegasus2avro.platform.event.v1.Parameters parameters;
  /** Audit stamp of the operation */
  @Deprecated public com.linkedin.pegasus2avro.common.AuditStamp auditStamp;
  /** The version of the event type, incremented in integers. */
  @Deprecated public int version;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public EntityChangeEvent() {}

  /**
   * All-args constructor.
   */
  public EntityChangeEvent(java.lang.String entityType, java.lang.String entityUrn, java.lang.String category, java.lang.String operation, java.lang.String modifier, com.linkedin.pegasus2avro.platform.event.v1.Parameters parameters, com.linkedin.pegasus2avro.common.AuditStamp auditStamp, java.lang.Integer version) {
    this.entityType = entityType;
    this.entityUrn = entityUrn;
    this.category = category;
    this.operation = operation;
    this.modifier = modifier;
    this.parameters = parameters;
    this.auditStamp = auditStamp;
    this.version = version;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return entityType;
    case 1: return entityUrn;
    case 2: return category;
    case 3: return operation;
    case 4: return modifier;
    case 5: return parameters;
    case 6: return auditStamp;
    case 7: return version;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: entityType = (java.lang.String)value$; break;
    case 1: entityUrn = (java.lang.String)value$; break;
    case 2: category = (java.lang.String)value$; break;
    case 3: operation = (java.lang.String)value$; break;
    case 4: modifier = (java.lang.String)value$; break;
    case 5: parameters = (com.linkedin.pegasus2avro.platform.event.v1.Parameters)value$; break;
    case 6: auditStamp = (com.linkedin.pegasus2avro.common.AuditStamp)value$; break;
    case 7: version = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'entityType' field.
   * The type of the entity affected. Corresponds to the entity registry, e.g. 'dataset', 'chart', 'dashboard', etc.   */
  public java.lang.String getEntityType() {
    return entityType;
  }

  /**
   * Sets the value of the 'entityType' field.
   * The type of the entity affected. Corresponds to the entity registry, e.g. 'dataset', 'chart', 'dashboard', etc.   * @param value the value to set.
   */
  public void setEntityType(java.lang.String value) {
    this.entityType = value;
  }

  /**
   * Gets the value of the 'entityUrn' field.
   * The urn of the entity which was affected.   */
  public java.lang.String getEntityUrn() {
    return entityUrn;
  }

  /**
   * Sets the value of the 'entityUrn' field.
   * The urn of the entity which was affected.   * @param value the value to set.
   */
  public void setEntityUrn(java.lang.String value) {
    this.entityUrn = value;
  }

  /**
   * Gets the value of the 'category' field.
   * The category type (TAG, GLOSSARY_TERM, OWNERSHIP, TECHNICAL_SCHEMA, etc). This is used to determine what the rest of the schema will look like.   */
  public java.lang.String getCategory() {
    return category;
  }

  /**
   * Sets the value of the 'category' field.
   * The category type (TAG, GLOSSARY_TERM, OWNERSHIP, TECHNICAL_SCHEMA, etc). This is used to determine what the rest of the schema will look like.   * @param value the value to set.
   */
  public void setCategory(java.lang.String value) {
    this.category = value;
  }

  /**
   * Gets the value of the 'operation' field.
   * The operation type. This is used to determine what the rest of the schema will look like.   */
  public java.lang.String getOperation() {
    return operation;
  }

  /**
   * Sets the value of the 'operation' field.
   * The operation type. This is used to determine what the rest of the schema will look like.   * @param value the value to set.
   */
  public void setOperation(java.lang.String value) {
    this.operation = value;
  }

  /**
   * Gets the value of the 'modifier' field.
   * The urn of the entity which was affected.   */
  public java.lang.String getModifier() {
    return modifier;
  }

  /**
   * Sets the value of the 'modifier' field.
   * The urn of the entity which was affected.   * @param value the value to set.
   */
  public void setModifier(java.lang.String value) {
    this.modifier = value;
  }

  /**
   * Gets the value of the 'parameters' field.
   * Arbitrary key-value parameters corresponding to the event.   */
  public com.linkedin.pegasus2avro.platform.event.v1.Parameters getParameters() {
    return parameters;
  }

  /**
   * Sets the value of the 'parameters' field.
   * Arbitrary key-value parameters corresponding to the event.   * @param value the value to set.
   */
  public void setParameters(com.linkedin.pegasus2avro.platform.event.v1.Parameters value) {
    this.parameters = value;
  }

  /**
   * Gets the value of the 'auditStamp' field.
   * Audit stamp of the operation   */
  public com.linkedin.pegasus2avro.common.AuditStamp getAuditStamp() {
    return auditStamp;
  }

  /**
   * Sets the value of the 'auditStamp' field.
   * Audit stamp of the operation   * @param value the value to set.
   */
  public void setAuditStamp(com.linkedin.pegasus2avro.common.AuditStamp value) {
    this.auditStamp = value;
  }

  /**
   * Gets the value of the 'version' field.
   * The version of the event type, incremented in integers.   */
  public java.lang.Integer getVersion() {
    return version;
  }

  /**
   * Sets the value of the 'version' field.
   * The version of the event type, incremented in integers.   * @param value the value to set.
   */
  public void setVersion(java.lang.Integer value) {
    this.version = value;
  }

  /** Creates a new EntityChangeEvent RecordBuilder */
  public static com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent.Builder();
  }
  
  /** Creates a new EntityChangeEvent RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent.Builder newBuilder(com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent.Builder other) {
    return new com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent.Builder(other);
  }
  
  /** Creates a new EntityChangeEvent RecordBuilder by copying an existing EntityChangeEvent instance */
  public static com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent.Builder newBuilder(com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent other) {
    return new com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent.Builder(other);
  }
  
  /**
   * RecordBuilder for EntityChangeEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EntityChangeEvent>
    implements org.apache.avro.data.RecordBuilder<EntityChangeEvent> {

    private java.lang.String entityType;
    private java.lang.String entityUrn;
    private java.lang.String category;
    private java.lang.String operation;
    private java.lang.String modifier;
    private com.linkedin.pegasus2avro.platform.event.v1.Parameters parameters;
    private com.linkedin.pegasus2avro.common.AuditStamp auditStamp;
    private int version;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.entityType)) {
        this.entityType = data().deepCopy(fields()[0].schema(), other.entityType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.entityUrn)) {
        this.entityUrn = data().deepCopy(fields()[1].schema(), other.entityUrn);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.category)) {
        this.category = data().deepCopy(fields()[2].schema(), other.category);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.operation)) {
        this.operation = data().deepCopy(fields()[3].schema(), other.operation);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.modifier)) {
        this.modifier = data().deepCopy(fields()[4].schema(), other.modifier);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.parameters)) {
        this.parameters = data().deepCopy(fields()[5].schema(), other.parameters);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.auditStamp)) {
        this.auditStamp = data().deepCopy(fields()[6].schema(), other.auditStamp);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.version)) {
        this.version = data().deepCopy(fields()[7].schema(), other.version);
        fieldSetFlags()[7] = true;
      }
    }
    
    /** Creates a Builder by copying an existing EntityChangeEvent instance */
    private Builder(com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent other) {
            super(com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent.SCHEMA$);
      if (isValidValue(fields()[0], other.entityType)) {
        this.entityType = data().deepCopy(fields()[0].schema(), other.entityType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.entityUrn)) {
        this.entityUrn = data().deepCopy(fields()[1].schema(), other.entityUrn);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.category)) {
        this.category = data().deepCopy(fields()[2].schema(), other.category);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.operation)) {
        this.operation = data().deepCopy(fields()[3].schema(), other.operation);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.modifier)) {
        this.modifier = data().deepCopy(fields()[4].schema(), other.modifier);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.parameters)) {
        this.parameters = data().deepCopy(fields()[5].schema(), other.parameters);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.auditStamp)) {
        this.auditStamp = data().deepCopy(fields()[6].schema(), other.auditStamp);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.version)) {
        this.version = data().deepCopy(fields()[7].schema(), other.version);
        fieldSetFlags()[7] = true;
      }
    }

    /** Gets the value of the 'entityType' field */
    public java.lang.String getEntityType() {
      return entityType;
    }
    
    /** Sets the value of the 'entityType' field */
    public com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent.Builder setEntityType(java.lang.String value) {
      validate(fields()[0], value);
      this.entityType = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'entityType' field has been set */
    public boolean hasEntityType() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'entityType' field */
    public com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent.Builder clearEntityType() {
      entityType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'entityUrn' field */
    public java.lang.String getEntityUrn() {
      return entityUrn;
    }
    
    /** Sets the value of the 'entityUrn' field */
    public com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent.Builder setEntityUrn(java.lang.String value) {
      validate(fields()[1], value);
      this.entityUrn = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'entityUrn' field has been set */
    public boolean hasEntityUrn() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'entityUrn' field */
    public com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent.Builder clearEntityUrn() {
      entityUrn = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'category' field */
    public java.lang.String getCategory() {
      return category;
    }
    
    /** Sets the value of the 'category' field */
    public com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent.Builder setCategory(java.lang.String value) {
      validate(fields()[2], value);
      this.category = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'category' field has been set */
    public boolean hasCategory() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'category' field */
    public com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent.Builder clearCategory() {
      category = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'operation' field */
    public java.lang.String getOperation() {
      return operation;
    }
    
    /** Sets the value of the 'operation' field */
    public com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent.Builder setOperation(java.lang.String value) {
      validate(fields()[3], value);
      this.operation = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'operation' field has been set */
    public boolean hasOperation() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'operation' field */
    public com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent.Builder clearOperation() {
      operation = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'modifier' field */
    public java.lang.String getModifier() {
      return modifier;
    }
    
    /** Sets the value of the 'modifier' field */
    public com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent.Builder setModifier(java.lang.String value) {
      validate(fields()[4], value);
      this.modifier = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'modifier' field has been set */
    public boolean hasModifier() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'modifier' field */
    public com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent.Builder clearModifier() {
      modifier = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'parameters' field */
    public com.linkedin.pegasus2avro.platform.event.v1.Parameters getParameters() {
      return parameters;
    }
    
    /** Sets the value of the 'parameters' field */
    public com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent.Builder setParameters(com.linkedin.pegasus2avro.platform.event.v1.Parameters value) {
      validate(fields()[5], value);
      this.parameters = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'parameters' field has been set */
    public boolean hasParameters() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'parameters' field */
    public com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent.Builder clearParameters() {
      parameters = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'auditStamp' field */
    public com.linkedin.pegasus2avro.common.AuditStamp getAuditStamp() {
      return auditStamp;
    }
    
    /** Sets the value of the 'auditStamp' field */
    public com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent.Builder setAuditStamp(com.linkedin.pegasus2avro.common.AuditStamp value) {
      validate(fields()[6], value);
      this.auditStamp = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'auditStamp' field has been set */
    public boolean hasAuditStamp() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'auditStamp' field */
    public com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent.Builder clearAuditStamp() {
      auditStamp = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'version' field */
    public java.lang.Integer getVersion() {
      return version;
    }
    
    /** Sets the value of the 'version' field */
    public com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent.Builder setVersion(int value) {
      validate(fields()[7], value);
      this.version = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'version' field has been set */
    public boolean hasVersion() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'version' field */
    public com.linkedin.pegasus2avro.platform.event.v1.EntityChangeEvent.Builder clearVersion() {
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    public EntityChangeEvent build() {
      try {
        EntityChangeEvent record = new EntityChangeEvent();
        record.entityType = fieldSetFlags()[0] ? this.entityType : (java.lang.String) defaultValue(fields()[0]);
        record.entityUrn = fieldSetFlags()[1] ? this.entityUrn : (java.lang.String) defaultValue(fields()[1]);
        record.category = fieldSetFlags()[2] ? this.category : (java.lang.String) defaultValue(fields()[2]);
        record.operation = fieldSetFlags()[3] ? this.operation : (java.lang.String) defaultValue(fields()[3]);
        record.modifier = fieldSetFlags()[4] ? this.modifier : (java.lang.String) defaultValue(fields()[4]);
        record.parameters = fieldSetFlags()[5] ? this.parameters : (com.linkedin.pegasus2avro.platform.event.v1.Parameters) defaultValue(fields()[5]);
        record.auditStamp = fieldSetFlags()[6] ? this.auditStamp : (com.linkedin.pegasus2avro.common.AuditStamp) defaultValue(fields()[6]);
        record.version = fieldSetFlags()[7] ? this.version : (java.lang.Integer) defaultValue(fields()[7]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
