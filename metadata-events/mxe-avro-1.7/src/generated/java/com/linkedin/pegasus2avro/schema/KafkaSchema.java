/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.schema;  
@SuppressWarnings("all")
/** Schema holder for kafka schema. */
@org.apache.avro.specific.AvroGenerated
public class KafkaSchema extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"KafkaSchema\",\"namespace\":\"com.linkedin.pegasus2avro.schema\",\"doc\":\"Schema holder for kafka schema.\",\"fields\":[{\"name\":\"documentSchema\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The native kafka document schema. This is a human readable avro document schema.\"},{\"name\":\"documentSchemaType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The native kafka document schema type. This can be AVRO/PROTOBUF/JSON.\",\"default\":null},{\"name\":\"keySchema\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The native kafka key schema as retrieved from Schema Registry\",\"default\":null},{\"name\":\"keySchemaType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The native kafka key schema type. This can be AVRO/PROTOBUF/JSON.\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The native kafka document schema. This is a human readable avro document schema. */
  @Deprecated public java.lang.String documentSchema;
  /** The native kafka document schema type. This can be AVRO/PROTOBUF/JSON. */
  @Deprecated public java.lang.String documentSchemaType;
  /** The native kafka key schema as retrieved from Schema Registry */
  @Deprecated public java.lang.String keySchema;
  /** The native kafka key schema type. This can be AVRO/PROTOBUF/JSON. */
  @Deprecated public java.lang.String keySchemaType;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public KafkaSchema() {}

  /**
   * All-args constructor.
   */
  public KafkaSchema(java.lang.String documentSchema, java.lang.String documentSchemaType, java.lang.String keySchema, java.lang.String keySchemaType) {
    this.documentSchema = documentSchema;
    this.documentSchemaType = documentSchemaType;
    this.keySchema = keySchema;
    this.keySchemaType = keySchemaType;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return documentSchema;
    case 1: return documentSchemaType;
    case 2: return keySchema;
    case 3: return keySchemaType;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: documentSchema = (java.lang.String)value$; break;
    case 1: documentSchemaType = (java.lang.String)value$; break;
    case 2: keySchema = (java.lang.String)value$; break;
    case 3: keySchemaType = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'documentSchema' field.
   * The native kafka document schema. This is a human readable avro document schema.   */
  public java.lang.String getDocumentSchema() {
    return documentSchema;
  }

  /**
   * Sets the value of the 'documentSchema' field.
   * The native kafka document schema. This is a human readable avro document schema.   * @param value the value to set.
   */
  public void setDocumentSchema(java.lang.String value) {
    this.documentSchema = value;
  }

  /**
   * Gets the value of the 'documentSchemaType' field.
   * The native kafka document schema type. This can be AVRO/PROTOBUF/JSON.   */
  public java.lang.String getDocumentSchemaType() {
    return documentSchemaType;
  }

  /**
   * Sets the value of the 'documentSchemaType' field.
   * The native kafka document schema type. This can be AVRO/PROTOBUF/JSON.   * @param value the value to set.
   */
  public void setDocumentSchemaType(java.lang.String value) {
    this.documentSchemaType = value;
  }

  /**
   * Gets the value of the 'keySchema' field.
   * The native kafka key schema as retrieved from Schema Registry   */
  public java.lang.String getKeySchema() {
    return keySchema;
  }

  /**
   * Sets the value of the 'keySchema' field.
   * The native kafka key schema as retrieved from Schema Registry   * @param value the value to set.
   */
  public void setKeySchema(java.lang.String value) {
    this.keySchema = value;
  }

  /**
   * Gets the value of the 'keySchemaType' field.
   * The native kafka key schema type. This can be AVRO/PROTOBUF/JSON.   */
  public java.lang.String getKeySchemaType() {
    return keySchemaType;
  }

  /**
   * Sets the value of the 'keySchemaType' field.
   * The native kafka key schema type. This can be AVRO/PROTOBUF/JSON.   * @param value the value to set.
   */
  public void setKeySchemaType(java.lang.String value) {
    this.keySchemaType = value;
  }

  /** Creates a new KafkaSchema RecordBuilder */
  public static com.linkedin.pegasus2avro.schema.KafkaSchema.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.schema.KafkaSchema.Builder();
  }
  
  /** Creates a new KafkaSchema RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.schema.KafkaSchema.Builder newBuilder(com.linkedin.pegasus2avro.schema.KafkaSchema.Builder other) {
    return new com.linkedin.pegasus2avro.schema.KafkaSchema.Builder(other);
  }
  
  /** Creates a new KafkaSchema RecordBuilder by copying an existing KafkaSchema instance */
  public static com.linkedin.pegasus2avro.schema.KafkaSchema.Builder newBuilder(com.linkedin.pegasus2avro.schema.KafkaSchema other) {
    return new com.linkedin.pegasus2avro.schema.KafkaSchema.Builder(other);
  }
  
  /**
   * RecordBuilder for KafkaSchema instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<KafkaSchema>
    implements org.apache.avro.data.RecordBuilder<KafkaSchema> {

    private java.lang.String documentSchema;
    private java.lang.String documentSchemaType;
    private java.lang.String keySchema;
    private java.lang.String keySchemaType;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.schema.KafkaSchema.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.schema.KafkaSchema.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.documentSchema)) {
        this.documentSchema = data().deepCopy(fields()[0].schema(), other.documentSchema);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.documentSchemaType)) {
        this.documentSchemaType = data().deepCopy(fields()[1].schema(), other.documentSchemaType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.keySchema)) {
        this.keySchema = data().deepCopy(fields()[2].schema(), other.keySchema);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.keySchemaType)) {
        this.keySchemaType = data().deepCopy(fields()[3].schema(), other.keySchemaType);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing KafkaSchema instance */
    private Builder(com.linkedin.pegasus2avro.schema.KafkaSchema other) {
            super(com.linkedin.pegasus2avro.schema.KafkaSchema.SCHEMA$);
      if (isValidValue(fields()[0], other.documentSchema)) {
        this.documentSchema = data().deepCopy(fields()[0].schema(), other.documentSchema);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.documentSchemaType)) {
        this.documentSchemaType = data().deepCopy(fields()[1].schema(), other.documentSchemaType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.keySchema)) {
        this.keySchema = data().deepCopy(fields()[2].schema(), other.keySchema);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.keySchemaType)) {
        this.keySchemaType = data().deepCopy(fields()[3].schema(), other.keySchemaType);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'documentSchema' field */
    public java.lang.String getDocumentSchema() {
      return documentSchema;
    }
    
    /** Sets the value of the 'documentSchema' field */
    public com.linkedin.pegasus2avro.schema.KafkaSchema.Builder setDocumentSchema(java.lang.String value) {
      validate(fields()[0], value);
      this.documentSchema = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'documentSchema' field has been set */
    public boolean hasDocumentSchema() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'documentSchema' field */
    public com.linkedin.pegasus2avro.schema.KafkaSchema.Builder clearDocumentSchema() {
      documentSchema = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'documentSchemaType' field */
    public java.lang.String getDocumentSchemaType() {
      return documentSchemaType;
    }
    
    /** Sets the value of the 'documentSchemaType' field */
    public com.linkedin.pegasus2avro.schema.KafkaSchema.Builder setDocumentSchemaType(java.lang.String value) {
      validate(fields()[1], value);
      this.documentSchemaType = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'documentSchemaType' field has been set */
    public boolean hasDocumentSchemaType() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'documentSchemaType' field */
    public com.linkedin.pegasus2avro.schema.KafkaSchema.Builder clearDocumentSchemaType() {
      documentSchemaType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'keySchema' field */
    public java.lang.String getKeySchema() {
      return keySchema;
    }
    
    /** Sets the value of the 'keySchema' field */
    public com.linkedin.pegasus2avro.schema.KafkaSchema.Builder setKeySchema(java.lang.String value) {
      validate(fields()[2], value);
      this.keySchema = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'keySchema' field has been set */
    public boolean hasKeySchema() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'keySchema' field */
    public com.linkedin.pegasus2avro.schema.KafkaSchema.Builder clearKeySchema() {
      keySchema = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'keySchemaType' field */
    public java.lang.String getKeySchemaType() {
      return keySchemaType;
    }
    
    /** Sets the value of the 'keySchemaType' field */
    public com.linkedin.pegasus2avro.schema.KafkaSchema.Builder setKeySchemaType(java.lang.String value) {
      validate(fields()[3], value);
      this.keySchemaType = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'keySchemaType' field has been set */
    public boolean hasKeySchemaType() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'keySchemaType' field */
    public com.linkedin.pegasus2avro.schema.KafkaSchema.Builder clearKeySchemaType() {
      keySchemaType = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public KafkaSchema build() {
      try {
        KafkaSchema record = new KafkaSchema();
        record.documentSchema = fieldSetFlags()[0] ? this.documentSchema : (java.lang.String) defaultValue(fields()[0]);
        record.documentSchemaType = fieldSetFlags()[1] ? this.documentSchemaType : (java.lang.String) defaultValue(fields()[1]);
        record.keySchema = fieldSetFlags()[2] ? this.keySchema : (java.lang.String) defaultValue(fields()[2]);
        record.keySchemaType = fieldSetFlags()[3] ? this.keySchemaType : (java.lang.String) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
