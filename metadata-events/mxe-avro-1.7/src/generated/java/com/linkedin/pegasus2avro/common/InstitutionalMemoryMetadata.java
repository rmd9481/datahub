/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.common;  
@SuppressWarnings("all")
/** Metadata corresponding to a record of institutional memory. */
@org.apache.avro.specific.AvroGenerated
public class InstitutionalMemoryMetadata extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"InstitutionalMemoryMetadata\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"Metadata corresponding to a record of institutional memory.\",\"fields\":[{\"name\":\"url\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Link to an engineering design document or a wiki page.\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.url.Url\",\"coercerClass\":\"com.linkedin.pegasus2avro.common.url.UrlCoercer\"}},{\"name\":\"description\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Description of the link.\"},{\"name\":\"createStamp\",\"type\":{\"type\":\"record\",\"name\":\"AuditStamp\",\"doc\":\"Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage.\",\"fields\":[{\"name\":\"time\",\"type\":\"long\",\"doc\":\"When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent.\"},{\"name\":\"actor\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change.\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"impersonator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor.\",\"default\":null,\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"message\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually.\",\"default\":null}]},\"doc\":\"Audit stamp associated with creation of this record\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Link to an engineering design document or a wiki page. */
  @Deprecated public java.lang.String url;
  /** Description of the link. */
  @Deprecated public java.lang.String description;
  /** Audit stamp associated with creation of this record */
  @Deprecated public com.linkedin.pegasus2avro.common.AuditStamp createStamp;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public InstitutionalMemoryMetadata() {}

  /**
   * All-args constructor.
   */
  public InstitutionalMemoryMetadata(java.lang.String url, java.lang.String description, com.linkedin.pegasus2avro.common.AuditStamp createStamp) {
    this.url = url;
    this.description = description;
    this.createStamp = createStamp;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return url;
    case 1: return description;
    case 2: return createStamp;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: url = (java.lang.String)value$; break;
    case 1: description = (java.lang.String)value$; break;
    case 2: createStamp = (com.linkedin.pegasus2avro.common.AuditStamp)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'url' field.
   * Link to an engineering design document or a wiki page.   */
  public java.lang.String getUrl() {
    return url;
  }

  /**
   * Sets the value of the 'url' field.
   * Link to an engineering design document or a wiki page.   * @param value the value to set.
   */
  public void setUrl(java.lang.String value) {
    this.url = value;
  }

  /**
   * Gets the value of the 'description' field.
   * Description of the link.   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * Description of the link.   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'createStamp' field.
   * Audit stamp associated with creation of this record   */
  public com.linkedin.pegasus2avro.common.AuditStamp getCreateStamp() {
    return createStamp;
  }

  /**
   * Sets the value of the 'createStamp' field.
   * Audit stamp associated with creation of this record   * @param value the value to set.
   */
  public void setCreateStamp(com.linkedin.pegasus2avro.common.AuditStamp value) {
    this.createStamp = value;
  }

  /** Creates a new InstitutionalMemoryMetadata RecordBuilder */
  public static com.linkedin.pegasus2avro.common.InstitutionalMemoryMetadata.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.common.InstitutionalMemoryMetadata.Builder();
  }
  
  /** Creates a new InstitutionalMemoryMetadata RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.common.InstitutionalMemoryMetadata.Builder newBuilder(com.linkedin.pegasus2avro.common.InstitutionalMemoryMetadata.Builder other) {
    return new com.linkedin.pegasus2avro.common.InstitutionalMemoryMetadata.Builder(other);
  }
  
  /** Creates a new InstitutionalMemoryMetadata RecordBuilder by copying an existing InstitutionalMemoryMetadata instance */
  public static com.linkedin.pegasus2avro.common.InstitutionalMemoryMetadata.Builder newBuilder(com.linkedin.pegasus2avro.common.InstitutionalMemoryMetadata other) {
    return new com.linkedin.pegasus2avro.common.InstitutionalMemoryMetadata.Builder(other);
  }
  
  /**
   * RecordBuilder for InstitutionalMemoryMetadata instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<InstitutionalMemoryMetadata>
    implements org.apache.avro.data.RecordBuilder<InstitutionalMemoryMetadata> {

    private java.lang.String url;
    private java.lang.String description;
    private com.linkedin.pegasus2avro.common.AuditStamp createStamp;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.common.InstitutionalMemoryMetadata.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.common.InstitutionalMemoryMetadata.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.url)) {
        this.url = data().deepCopy(fields()[0].schema(), other.url);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.description)) {
        this.description = data().deepCopy(fields()[1].schema(), other.description);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.createStamp)) {
        this.createStamp = data().deepCopy(fields()[2].schema(), other.createStamp);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing InstitutionalMemoryMetadata instance */
    private Builder(com.linkedin.pegasus2avro.common.InstitutionalMemoryMetadata other) {
            super(com.linkedin.pegasus2avro.common.InstitutionalMemoryMetadata.SCHEMA$);
      if (isValidValue(fields()[0], other.url)) {
        this.url = data().deepCopy(fields()[0].schema(), other.url);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.description)) {
        this.description = data().deepCopy(fields()[1].schema(), other.description);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.createStamp)) {
        this.createStamp = data().deepCopy(fields()[2].schema(), other.createStamp);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'url' field */
    public java.lang.String getUrl() {
      return url;
    }
    
    /** Sets the value of the 'url' field */
    public com.linkedin.pegasus2avro.common.InstitutionalMemoryMetadata.Builder setUrl(java.lang.String value) {
      validate(fields()[0], value);
      this.url = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'url' field has been set */
    public boolean hasUrl() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'url' field */
    public com.linkedin.pegasus2avro.common.InstitutionalMemoryMetadata.Builder clearUrl() {
      url = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'description' field */
    public java.lang.String getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public com.linkedin.pegasus2avro.common.InstitutionalMemoryMetadata.Builder setDescription(java.lang.String value) {
      validate(fields()[1], value);
      this.description = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'description' field */
    public com.linkedin.pegasus2avro.common.InstitutionalMemoryMetadata.Builder clearDescription() {
      description = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'createStamp' field */
    public com.linkedin.pegasus2avro.common.AuditStamp getCreateStamp() {
      return createStamp;
    }
    
    /** Sets the value of the 'createStamp' field */
    public com.linkedin.pegasus2avro.common.InstitutionalMemoryMetadata.Builder setCreateStamp(com.linkedin.pegasus2avro.common.AuditStamp value) {
      validate(fields()[2], value);
      this.createStamp = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'createStamp' field has been set */
    public boolean hasCreateStamp() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'createStamp' field */
    public com.linkedin.pegasus2avro.common.InstitutionalMemoryMetadata.Builder clearCreateStamp() {
      createStamp = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public InstitutionalMemoryMetadata build() {
      try {
        InstitutionalMemoryMetadata record = new InstitutionalMemoryMetadata();
        record.url = fieldSetFlags()[0] ? this.url : (java.lang.String) defaultValue(fields()[0]);
        record.description = fieldSetFlags()[1] ? this.description : (java.lang.String) defaultValue(fields()[1]);
        record.createStamp = fieldSetFlags()[2] ? this.createStamp : (com.linkedin.pegasus2avro.common.AuditStamp) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
