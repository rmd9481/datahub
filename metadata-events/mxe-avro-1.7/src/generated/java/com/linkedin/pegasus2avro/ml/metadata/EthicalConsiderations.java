/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.ml.metadata;  
@SuppressWarnings("all")
/** This section is intended to demonstrate the ethical considerations that went into MLModel development, surfacing ethical challenges and solutions to stakeholders. */
@org.apache.avro.specific.AvroGenerated
public class EthicalConsiderations extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EthicalConsiderations\",\"namespace\":\"com.linkedin.pegasus2avro.ml.metadata\",\"doc\":\"This section is intended to demonstrate the ethical considerations that went into MLModel development, surfacing ethical challenges and solutions to stakeholders.\",\"fields\":[{\"name\":\"data\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"Does the MLModel use any sensitive data (e.g., protected classes)?\",\"default\":null},{\"name\":\"humanLife\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\" Is the MLModel intended to inform decisions about matters central to human life or flourishing - e.g., health or safety? Or could it be used in such a way?\",\"default\":null},{\"name\":\"mitigations\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"What risk mitigation strategies were used during MLModel development?\",\"default\":null},{\"name\":\"risksAndHarms\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"What risks may be present in MLModel usage? Try to identify the potential recipients, likelihood, and magnitude of harms. If these cannot be determined, note that they were considered but remain unknown.\",\"default\":null},{\"name\":\"useCases\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"Are there any known MLModel use cases that are especially fraught? This may connect directly to the intended use section\",\"default\":null}],\"Aspect\":{\"name\":\"mlModelEthicalConsiderations\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Does the MLModel use any sensitive data (e.g., protected classes)? */
  @Deprecated public java.util.List<java.lang.String> data;
  /**  Is the MLModel intended to inform decisions about matters central to human life or flourishing - e.g., health or safety? Or could it be used in such a way? */
  @Deprecated public java.util.List<java.lang.String> humanLife;
  /** What risk mitigation strategies were used during MLModel development? */
  @Deprecated public java.util.List<java.lang.String> mitigations;
  /** What risks may be present in MLModel usage? Try to identify the potential recipients, likelihood, and magnitude of harms. If these cannot be determined, note that they were considered but remain unknown. */
  @Deprecated public java.util.List<java.lang.String> risksAndHarms;
  /** Are there any known MLModel use cases that are especially fraught? This may connect directly to the intended use section */
  @Deprecated public java.util.List<java.lang.String> useCases;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public EthicalConsiderations() {}

  /**
   * All-args constructor.
   */
  public EthicalConsiderations(java.util.List<java.lang.String> data, java.util.List<java.lang.String> humanLife, java.util.List<java.lang.String> mitigations, java.util.List<java.lang.String> risksAndHarms, java.util.List<java.lang.String> useCases) {
    this.data = data;
    this.humanLife = humanLife;
    this.mitigations = mitigations;
    this.risksAndHarms = risksAndHarms;
    this.useCases = useCases;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return data;
    case 1: return humanLife;
    case 2: return mitigations;
    case 3: return risksAndHarms;
    case 4: return useCases;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: data = (java.util.List<java.lang.String>)value$; break;
    case 1: humanLife = (java.util.List<java.lang.String>)value$; break;
    case 2: mitigations = (java.util.List<java.lang.String>)value$; break;
    case 3: risksAndHarms = (java.util.List<java.lang.String>)value$; break;
    case 4: useCases = (java.util.List<java.lang.String>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'data' field.
   * Does the MLModel use any sensitive data (e.g., protected classes)?   */
  public java.util.List<java.lang.String> getData() {
    return data;
  }

  /**
   * Sets the value of the 'data' field.
   * Does the MLModel use any sensitive data (e.g., protected classes)?   * @param value the value to set.
   */
  public void setData(java.util.List<java.lang.String> value) {
    this.data = value;
  }

  /**
   * Gets the value of the 'humanLife' field.
   *  Is the MLModel intended to inform decisions about matters central to human life or flourishing - e.g., health or safety? Or could it be used in such a way?   */
  public java.util.List<java.lang.String> getHumanLife() {
    return humanLife;
  }

  /**
   * Sets the value of the 'humanLife' field.
   *  Is the MLModel intended to inform decisions about matters central to human life or flourishing - e.g., health or safety? Or could it be used in such a way?   * @param value the value to set.
   */
  public void setHumanLife(java.util.List<java.lang.String> value) {
    this.humanLife = value;
  }

  /**
   * Gets the value of the 'mitigations' field.
   * What risk mitigation strategies were used during MLModel development?   */
  public java.util.List<java.lang.String> getMitigations() {
    return mitigations;
  }

  /**
   * Sets the value of the 'mitigations' field.
   * What risk mitigation strategies were used during MLModel development?   * @param value the value to set.
   */
  public void setMitigations(java.util.List<java.lang.String> value) {
    this.mitigations = value;
  }

  /**
   * Gets the value of the 'risksAndHarms' field.
   * What risks may be present in MLModel usage? Try to identify the potential recipients, likelihood, and magnitude of harms. If these cannot be determined, note that they were considered but remain unknown.   */
  public java.util.List<java.lang.String> getRisksAndHarms() {
    return risksAndHarms;
  }

  /**
   * Sets the value of the 'risksAndHarms' field.
   * What risks may be present in MLModel usage? Try to identify the potential recipients, likelihood, and magnitude of harms. If these cannot be determined, note that they were considered but remain unknown.   * @param value the value to set.
   */
  public void setRisksAndHarms(java.util.List<java.lang.String> value) {
    this.risksAndHarms = value;
  }

  /**
   * Gets the value of the 'useCases' field.
   * Are there any known MLModel use cases that are especially fraught? This may connect directly to the intended use section   */
  public java.util.List<java.lang.String> getUseCases() {
    return useCases;
  }

  /**
   * Sets the value of the 'useCases' field.
   * Are there any known MLModel use cases that are especially fraught? This may connect directly to the intended use section   * @param value the value to set.
   */
  public void setUseCases(java.util.List<java.lang.String> value) {
    this.useCases = value;
  }

  /** Creates a new EthicalConsiderations RecordBuilder */
  public static com.linkedin.pegasus2avro.ml.metadata.EthicalConsiderations.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.ml.metadata.EthicalConsiderations.Builder();
  }
  
  /** Creates a new EthicalConsiderations RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.ml.metadata.EthicalConsiderations.Builder newBuilder(com.linkedin.pegasus2avro.ml.metadata.EthicalConsiderations.Builder other) {
    return new com.linkedin.pegasus2avro.ml.metadata.EthicalConsiderations.Builder(other);
  }
  
  /** Creates a new EthicalConsiderations RecordBuilder by copying an existing EthicalConsiderations instance */
  public static com.linkedin.pegasus2avro.ml.metadata.EthicalConsiderations.Builder newBuilder(com.linkedin.pegasus2avro.ml.metadata.EthicalConsiderations other) {
    return new com.linkedin.pegasus2avro.ml.metadata.EthicalConsiderations.Builder(other);
  }
  
  /**
   * RecordBuilder for EthicalConsiderations instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EthicalConsiderations>
    implements org.apache.avro.data.RecordBuilder<EthicalConsiderations> {

    private java.util.List<java.lang.String> data;
    private java.util.List<java.lang.String> humanLife;
    private java.util.List<java.lang.String> mitigations;
    private java.util.List<java.lang.String> risksAndHarms;
    private java.util.List<java.lang.String> useCases;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.ml.metadata.EthicalConsiderations.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.ml.metadata.EthicalConsiderations.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.data)) {
        this.data = data().deepCopy(fields()[0].schema(), other.data);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.humanLife)) {
        this.humanLife = data().deepCopy(fields()[1].schema(), other.humanLife);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.mitigations)) {
        this.mitigations = data().deepCopy(fields()[2].schema(), other.mitigations);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.risksAndHarms)) {
        this.risksAndHarms = data().deepCopy(fields()[3].schema(), other.risksAndHarms);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.useCases)) {
        this.useCases = data().deepCopy(fields()[4].schema(), other.useCases);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing EthicalConsiderations instance */
    private Builder(com.linkedin.pegasus2avro.ml.metadata.EthicalConsiderations other) {
            super(com.linkedin.pegasus2avro.ml.metadata.EthicalConsiderations.SCHEMA$);
      if (isValidValue(fields()[0], other.data)) {
        this.data = data().deepCopy(fields()[0].schema(), other.data);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.humanLife)) {
        this.humanLife = data().deepCopy(fields()[1].schema(), other.humanLife);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.mitigations)) {
        this.mitigations = data().deepCopy(fields()[2].schema(), other.mitigations);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.risksAndHarms)) {
        this.risksAndHarms = data().deepCopy(fields()[3].schema(), other.risksAndHarms);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.useCases)) {
        this.useCases = data().deepCopy(fields()[4].schema(), other.useCases);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'data' field */
    public java.util.List<java.lang.String> getData() {
      return data;
    }
    
    /** Sets the value of the 'data' field */
    public com.linkedin.pegasus2avro.ml.metadata.EthicalConsiderations.Builder setData(java.util.List<java.lang.String> value) {
      validate(fields()[0], value);
      this.data = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'data' field has been set */
    public boolean hasData() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'data' field */
    public com.linkedin.pegasus2avro.ml.metadata.EthicalConsiderations.Builder clearData() {
      data = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'humanLife' field */
    public java.util.List<java.lang.String> getHumanLife() {
      return humanLife;
    }
    
    /** Sets the value of the 'humanLife' field */
    public com.linkedin.pegasus2avro.ml.metadata.EthicalConsiderations.Builder setHumanLife(java.util.List<java.lang.String> value) {
      validate(fields()[1], value);
      this.humanLife = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'humanLife' field has been set */
    public boolean hasHumanLife() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'humanLife' field */
    public com.linkedin.pegasus2avro.ml.metadata.EthicalConsiderations.Builder clearHumanLife() {
      humanLife = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'mitigations' field */
    public java.util.List<java.lang.String> getMitigations() {
      return mitigations;
    }
    
    /** Sets the value of the 'mitigations' field */
    public com.linkedin.pegasus2avro.ml.metadata.EthicalConsiderations.Builder setMitigations(java.util.List<java.lang.String> value) {
      validate(fields()[2], value);
      this.mitigations = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'mitigations' field has been set */
    public boolean hasMitigations() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'mitigations' field */
    public com.linkedin.pegasus2avro.ml.metadata.EthicalConsiderations.Builder clearMitigations() {
      mitigations = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'risksAndHarms' field */
    public java.util.List<java.lang.String> getRisksAndHarms() {
      return risksAndHarms;
    }
    
    /** Sets the value of the 'risksAndHarms' field */
    public com.linkedin.pegasus2avro.ml.metadata.EthicalConsiderations.Builder setRisksAndHarms(java.util.List<java.lang.String> value) {
      validate(fields()[3], value);
      this.risksAndHarms = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'risksAndHarms' field has been set */
    public boolean hasRisksAndHarms() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'risksAndHarms' field */
    public com.linkedin.pegasus2avro.ml.metadata.EthicalConsiderations.Builder clearRisksAndHarms() {
      risksAndHarms = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'useCases' field */
    public java.util.List<java.lang.String> getUseCases() {
      return useCases;
    }
    
    /** Sets the value of the 'useCases' field */
    public com.linkedin.pegasus2avro.ml.metadata.EthicalConsiderations.Builder setUseCases(java.util.List<java.lang.String> value) {
      validate(fields()[4], value);
      this.useCases = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'useCases' field has been set */
    public boolean hasUseCases() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'useCases' field */
    public com.linkedin.pegasus2avro.ml.metadata.EthicalConsiderations.Builder clearUseCases() {
      useCases = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public EthicalConsiderations build() {
      try {
        EthicalConsiderations record = new EthicalConsiderations();
        record.data = fieldSetFlags()[0] ? this.data : (java.util.List<java.lang.String>) defaultValue(fields()[0]);
        record.humanLife = fieldSetFlags()[1] ? this.humanLife : (java.util.List<java.lang.String>) defaultValue(fields()[1]);
        record.mitigations = fieldSetFlags()[2] ? this.mitigations : (java.util.List<java.lang.String>) defaultValue(fields()[2]);
        record.risksAndHarms = fieldSetFlags()[3] ? this.risksAndHarms : (java.util.List<java.lang.String>) defaultValue(fields()[3]);
        record.useCases = fieldSetFlags()[4] ? this.useCases : (java.util.List<java.lang.String>) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
