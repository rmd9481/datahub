/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.metadata.query;  
@SuppressWarnings("all")
/** The model for listing a set of entity urns. */
@org.apache.avro.specific.AvroGenerated
public class ListUrnsResult extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ListUrnsResult\",\"namespace\":\"com.linkedin.pegasus2avro.metadata.query\",\"doc\":\"The model for listing a set of entity urns.\",\"fields\":[{\"name\":\"entities\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"doc\":\"A list of entities returned from the list\"},{\"name\":\"start\",\"type\":\"int\",\"doc\":\"Offset of the first entity in the result\"},{\"name\":\"count\",\"type\":\"int\",\"doc\":\"Size of each page in the result\"},{\"name\":\"total\",\"type\":\"int\",\"doc\":\"The total number of entities directly under searched path\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** A list of entities returned from the list */
  @Deprecated public java.util.List<java.lang.String> entities;
  /** Offset of the first entity in the result */
  @Deprecated public int start;
  /** Size of each page in the result */
  @Deprecated public int count;
  /** The total number of entities directly under searched path */
  @Deprecated public int total;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ListUrnsResult() {}

  /**
   * All-args constructor.
   */
  public ListUrnsResult(java.util.List<java.lang.String> entities, java.lang.Integer start, java.lang.Integer count, java.lang.Integer total) {
    this.entities = entities;
    this.start = start;
    this.count = count;
    this.total = total;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return entities;
    case 1: return start;
    case 2: return count;
    case 3: return total;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: entities = (java.util.List<java.lang.String>)value$; break;
    case 1: start = (java.lang.Integer)value$; break;
    case 2: count = (java.lang.Integer)value$; break;
    case 3: total = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'entities' field.
   * A list of entities returned from the list   */
  public java.util.List<java.lang.String> getEntities() {
    return entities;
  }

  /**
   * Sets the value of the 'entities' field.
   * A list of entities returned from the list   * @param value the value to set.
   */
  public void setEntities(java.util.List<java.lang.String> value) {
    this.entities = value;
  }

  /**
   * Gets the value of the 'start' field.
   * Offset of the first entity in the result   */
  public java.lang.Integer getStart() {
    return start;
  }

  /**
   * Sets the value of the 'start' field.
   * Offset of the first entity in the result   * @param value the value to set.
   */
  public void setStart(java.lang.Integer value) {
    this.start = value;
  }

  /**
   * Gets the value of the 'count' field.
   * Size of each page in the result   */
  public java.lang.Integer getCount() {
    return count;
  }

  /**
   * Sets the value of the 'count' field.
   * Size of each page in the result   * @param value the value to set.
   */
  public void setCount(java.lang.Integer value) {
    this.count = value;
  }

  /**
   * Gets the value of the 'total' field.
   * The total number of entities directly under searched path   */
  public java.lang.Integer getTotal() {
    return total;
  }

  /**
   * Sets the value of the 'total' field.
   * The total number of entities directly under searched path   * @param value the value to set.
   */
  public void setTotal(java.lang.Integer value) {
    this.total = value;
  }

  /** Creates a new ListUrnsResult RecordBuilder */
  public static com.linkedin.pegasus2avro.metadata.query.ListUrnsResult.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.metadata.query.ListUrnsResult.Builder();
  }
  
  /** Creates a new ListUrnsResult RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.metadata.query.ListUrnsResult.Builder newBuilder(com.linkedin.pegasus2avro.metadata.query.ListUrnsResult.Builder other) {
    return new com.linkedin.pegasus2avro.metadata.query.ListUrnsResult.Builder(other);
  }
  
  /** Creates a new ListUrnsResult RecordBuilder by copying an existing ListUrnsResult instance */
  public static com.linkedin.pegasus2avro.metadata.query.ListUrnsResult.Builder newBuilder(com.linkedin.pegasus2avro.metadata.query.ListUrnsResult other) {
    return new com.linkedin.pegasus2avro.metadata.query.ListUrnsResult.Builder(other);
  }
  
  /**
   * RecordBuilder for ListUrnsResult instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ListUrnsResult>
    implements org.apache.avro.data.RecordBuilder<ListUrnsResult> {

    private java.util.List<java.lang.String> entities;
    private int start;
    private int count;
    private int total;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.metadata.query.ListUrnsResult.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.metadata.query.ListUrnsResult.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.entities)) {
        this.entities = data().deepCopy(fields()[0].schema(), other.entities);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.start)) {
        this.start = data().deepCopy(fields()[1].schema(), other.start);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.count)) {
        this.count = data().deepCopy(fields()[2].schema(), other.count);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.total)) {
        this.total = data().deepCopy(fields()[3].schema(), other.total);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ListUrnsResult instance */
    private Builder(com.linkedin.pegasus2avro.metadata.query.ListUrnsResult other) {
            super(com.linkedin.pegasus2avro.metadata.query.ListUrnsResult.SCHEMA$);
      if (isValidValue(fields()[0], other.entities)) {
        this.entities = data().deepCopy(fields()[0].schema(), other.entities);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.start)) {
        this.start = data().deepCopy(fields()[1].schema(), other.start);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.count)) {
        this.count = data().deepCopy(fields()[2].schema(), other.count);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.total)) {
        this.total = data().deepCopy(fields()[3].schema(), other.total);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'entities' field */
    public java.util.List<java.lang.String> getEntities() {
      return entities;
    }
    
    /** Sets the value of the 'entities' field */
    public com.linkedin.pegasus2avro.metadata.query.ListUrnsResult.Builder setEntities(java.util.List<java.lang.String> value) {
      validate(fields()[0], value);
      this.entities = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'entities' field has been set */
    public boolean hasEntities() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'entities' field */
    public com.linkedin.pegasus2avro.metadata.query.ListUrnsResult.Builder clearEntities() {
      entities = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'start' field */
    public java.lang.Integer getStart() {
      return start;
    }
    
    /** Sets the value of the 'start' field */
    public com.linkedin.pegasus2avro.metadata.query.ListUrnsResult.Builder setStart(int value) {
      validate(fields()[1], value);
      this.start = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'start' field has been set */
    public boolean hasStart() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'start' field */
    public com.linkedin.pegasus2avro.metadata.query.ListUrnsResult.Builder clearStart() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'count' field */
    public java.lang.Integer getCount() {
      return count;
    }
    
    /** Sets the value of the 'count' field */
    public com.linkedin.pegasus2avro.metadata.query.ListUrnsResult.Builder setCount(int value) {
      validate(fields()[2], value);
      this.count = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'count' field has been set */
    public boolean hasCount() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'count' field */
    public com.linkedin.pegasus2avro.metadata.query.ListUrnsResult.Builder clearCount() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'total' field */
    public java.lang.Integer getTotal() {
      return total;
    }
    
    /** Sets the value of the 'total' field */
    public com.linkedin.pegasus2avro.metadata.query.ListUrnsResult.Builder setTotal(int value) {
      validate(fields()[3], value);
      this.total = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'total' field has been set */
    public boolean hasTotal() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'total' field */
    public com.linkedin.pegasus2avro.metadata.query.ListUrnsResult.Builder clearTotal() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public ListUrnsResult build() {
      try {
        ListUrnsResult record = new ListUrnsResult();
        record.entities = fieldSetFlags()[0] ? this.entities : (java.util.List<java.lang.String>) defaultValue(fields()[0]);
        record.start = fieldSetFlags()[1] ? this.start : (java.lang.Integer) defaultValue(fields()[1]);
        record.count = fieldSetFlags()[2] ? this.count : (java.lang.Integer) defaultValue(fields()[2]);
        record.total = fieldSetFlags()[3] ? this.total : (java.lang.Integer) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
