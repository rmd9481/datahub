/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.mxe;  
@SuppressWarnings("all")
/** Kafka event for proposing a metadata change for an entity. A corresponding MetadataChangeLog is emitted when the change is accepted and committed, otherwise a FailedMetadataChangeProposal will be emitted instead. */
@org.apache.avro.specific.AvroGenerated
public class MetadataChangeProposal extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MetadataChangeProposal\",\"namespace\":\"com.linkedin.pegasus2avro.mxe\",\"doc\":\"Kafka event for proposing a metadata change for an entity. A corresponding MetadataChangeLog is emitted when the change is accepted and committed, otherwise a FailedMetadataChangeProposal will be emitted instead.\",\"fields\":[{\"name\":\"auditHeader\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"KafkaAuditHeader\",\"namespace\":\"com.linkedin.events\",\"doc\":\"This header records information about the context of an event as it is emitted into kafka and is intended to be used by the kafka audit application.  For more information see go/kafkaauditheader\",\"fields\":[{\"name\":\"time\",\"type\":\"long\",\"doc\":\"The time at which the event was emitted into kafka.\",\"compliance\":[{\"policy\":\"EVENT_TIME\"}]},{\"name\":\"server\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The fully qualified name of the host from which the event is being emitted.\",\"compliance\":\"NONE\"},{\"name\":\"instance\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The instance on the server from which the event is being emitted. e.g. i001\",\"default\":null,\"compliance\":\"NONE\"},{\"name\":\"appName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The name of the application from which the event is being emitted. see go/appname\",\"compliance\":\"NONE\"},{\"name\":\"messageId\",\"type\":{\"type\":\"fixed\",\"name\":\"UUID\",\"size\":16},\"doc\":\"A unique identifier for the message\",\"compliance\":\"NONE\"},{\"name\":\"auditVersion\",\"type\":[\"null\",\"int\"],\"doc\":\"The version that is being used for auditing. In version 0, the audit trail buckets events into 10 minute audit windows based on the EventHeader timestamp. In version 1, the audit trail buckets events as follows: if the schema has an outer KafkaAuditHeader, use the outer audit header timestamp for bucketing; else if the EventHeader has an inner KafkaAuditHeader use that inner audit header's timestamp for bucketing\",\"default\":null,\"compliance\":\"NONE\"},{\"name\":\"fabricUrn\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The fabricUrn of the host from which the event is being emitted. Fabric Urn in the format of urn:li:fabric:{fabric_name}. See go/fabric.\",\"default\":null,\"compliance\":\"NONE\"},{\"name\":\"clusterConnectionString\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"This is a String that the client uses to establish some kind of connection with the Kafka cluster. The exact format of it depends on specific versions of clients and brokers. This information could potentially identify the fabric and cluster with which the client is producing to or consuming from.\",\"default\":null,\"compliance\":\"NONE\"}]}],\"doc\":\"Kafka audit header. Currently remains unused in the open source.\",\"default\":null},{\"name\":\"entityType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Type of the entity being written to\"},{\"name\":\"entityUrn\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Urn of the entity being written\",\"default\":null,\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"entityKeyAspect\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GenericAspect\",\"doc\":\"Generic record structure for serializing an Aspect\",\"fields\":[{\"name\":\"value\",\"type\":\"bytes\",\"doc\":\"The value of the aspect, serialized as bytes.\"},{\"name\":\"contentType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The content type, which represents the fashion in which the aspect was serialized.\\nThe only type currently supported is application/json.\"}]}],\"doc\":\"Key aspect of the entity being written\",\"default\":null},{\"name\":\"changeType\",\"type\":{\"type\":\"enum\",\"name\":\"ChangeType\",\"namespace\":\"com.linkedin.pegasus2avro.events.metadata\",\"doc\":\"Descriptor for a change action\",\"symbols\":[\"UPSERT\",\"CREATE\",\"UPDATE\",\"DELETE\",\"PATCH\",\"RESTATE\"],\"symbolDocs\":{\"CREATE\":\"NOT SUPPORTED YET\\ninsert if not exists. otherwise fail\",\"DELETE\":\"NOT SUPPORTED YET\\ndelete action\",\"PATCH\":\"NOT SUPPORTED YET\\npatch the changes instead of full replace\",\"RESTATE\":\"Restate an aspect, eg. in a index refresh.\",\"UPDATE\":\"NOT SUPPORTED YET\\nupdate if exists. otherwise fail\",\"UPSERT\":\"insert if not exists. otherwise update\"}},\"doc\":\"Type of change being proposed\"},{\"name\":\"aspectName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Aspect of the entity being written to\\nNot filling this out implies that the writer wants to affect the entire entity\\nNote: This is only valid for CREATE, UPSERT, and DELETE operations.\",\"default\":null},{\"name\":\"aspect\",\"type\":[\"null\",\"GenericAspect\"],\"doc\":\"The value of the new aspect.\",\"default\":null},{\"name\":\"systemMetadata\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"SystemMetadata\",\"doc\":\"Metadata associated with each metadata change that is processed by the system\",\"fields\":[{\"name\":\"lastObserved\",\"type\":[\"long\",\"null\"],\"doc\":\"The timestamp the metadata was observed at\",\"default\":0},{\"name\":\"runId\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"doc\":\"The run id that produced the metadata. Populated in case of batch-ingestion.\",\"default\":\"no-run-id-provided\"},{\"name\":\"pipelineName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The ingestion pipeline id that produced the metadata. Populated in case of batch ingestion.\",\"default\":null},{\"name\":\"registryName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The model registry name that was used to process this event\",\"default\":null},{\"name\":\"registryVersion\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The model registry version that was used to process this event\",\"default\":null},{\"name\":\"properties\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}],\"doc\":\"Additional properties\",\"default\":null}]}],\"doc\":\"A string->string map of custom properties that one might want to attach to an event\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Kafka audit header. Currently remains unused in the open source. */
  @Deprecated public com.linkedin.events.KafkaAuditHeader auditHeader;
  /** Type of the entity being written to */
  @Deprecated public java.lang.String entityType;
  /** Urn of the entity being written */
  @Deprecated public java.lang.String entityUrn;
  /** Key aspect of the entity being written */
  @Deprecated public com.linkedin.pegasus2avro.mxe.GenericAspect entityKeyAspect;
  /** Type of change being proposed */
  @Deprecated public com.linkedin.pegasus2avro.events.metadata.ChangeType changeType;
  /** Aspect of the entity being written to
Not filling this out implies that the writer wants to affect the entire entity
Note: This is only valid for CREATE, UPSERT, and DELETE operations. */
  @Deprecated public java.lang.String aspectName;
  /** The value of the new aspect. */
  @Deprecated public com.linkedin.pegasus2avro.mxe.GenericAspect aspect;
  /** A string->string map of custom properties that one might want to attach to an event */
  @Deprecated public com.linkedin.pegasus2avro.mxe.SystemMetadata systemMetadata;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public MetadataChangeProposal() {}

  /**
   * All-args constructor.
   */
  public MetadataChangeProposal(com.linkedin.events.KafkaAuditHeader auditHeader, java.lang.String entityType, java.lang.String entityUrn, com.linkedin.pegasus2avro.mxe.GenericAspect entityKeyAspect, com.linkedin.pegasus2avro.events.metadata.ChangeType changeType, java.lang.String aspectName, com.linkedin.pegasus2avro.mxe.GenericAspect aspect, com.linkedin.pegasus2avro.mxe.SystemMetadata systemMetadata) {
    this.auditHeader = auditHeader;
    this.entityType = entityType;
    this.entityUrn = entityUrn;
    this.entityKeyAspect = entityKeyAspect;
    this.changeType = changeType;
    this.aspectName = aspectName;
    this.aspect = aspect;
    this.systemMetadata = systemMetadata;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return auditHeader;
    case 1: return entityType;
    case 2: return entityUrn;
    case 3: return entityKeyAspect;
    case 4: return changeType;
    case 5: return aspectName;
    case 6: return aspect;
    case 7: return systemMetadata;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: auditHeader = (com.linkedin.events.KafkaAuditHeader)value$; break;
    case 1: entityType = (java.lang.String)value$; break;
    case 2: entityUrn = (java.lang.String)value$; break;
    case 3: entityKeyAspect = (com.linkedin.pegasus2avro.mxe.GenericAspect)value$; break;
    case 4: changeType = (com.linkedin.pegasus2avro.events.metadata.ChangeType)value$; break;
    case 5: aspectName = (java.lang.String)value$; break;
    case 6: aspect = (com.linkedin.pegasus2avro.mxe.GenericAspect)value$; break;
    case 7: systemMetadata = (com.linkedin.pegasus2avro.mxe.SystemMetadata)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'auditHeader' field.
   * Kafka audit header. Currently remains unused in the open source.   */
  public com.linkedin.events.KafkaAuditHeader getAuditHeader() {
    return auditHeader;
  }

  /**
   * Sets the value of the 'auditHeader' field.
   * Kafka audit header. Currently remains unused in the open source.   * @param value the value to set.
   */
  public void setAuditHeader(com.linkedin.events.KafkaAuditHeader value) {
    this.auditHeader = value;
  }

  /**
   * Gets the value of the 'entityType' field.
   * Type of the entity being written to   */
  public java.lang.String getEntityType() {
    return entityType;
  }

  /**
   * Sets the value of the 'entityType' field.
   * Type of the entity being written to   * @param value the value to set.
   */
  public void setEntityType(java.lang.String value) {
    this.entityType = value;
  }

  /**
   * Gets the value of the 'entityUrn' field.
   * Urn of the entity being written   */
  public java.lang.String getEntityUrn() {
    return entityUrn;
  }

  /**
   * Sets the value of the 'entityUrn' field.
   * Urn of the entity being written   * @param value the value to set.
   */
  public void setEntityUrn(java.lang.String value) {
    this.entityUrn = value;
  }

  /**
   * Gets the value of the 'entityKeyAspect' field.
   * Key aspect of the entity being written   */
  public com.linkedin.pegasus2avro.mxe.GenericAspect getEntityKeyAspect() {
    return entityKeyAspect;
  }

  /**
   * Sets the value of the 'entityKeyAspect' field.
   * Key aspect of the entity being written   * @param value the value to set.
   */
  public void setEntityKeyAspect(com.linkedin.pegasus2avro.mxe.GenericAspect value) {
    this.entityKeyAspect = value;
  }

  /**
   * Gets the value of the 'changeType' field.
   * Type of change being proposed   */
  public com.linkedin.pegasus2avro.events.metadata.ChangeType getChangeType() {
    return changeType;
  }

  /**
   * Sets the value of the 'changeType' field.
   * Type of change being proposed   * @param value the value to set.
   */
  public void setChangeType(com.linkedin.pegasus2avro.events.metadata.ChangeType value) {
    this.changeType = value;
  }

  /**
   * Gets the value of the 'aspectName' field.
   * Aspect of the entity being written to
Not filling this out implies that the writer wants to affect the entire entity
Note: This is only valid for CREATE, UPSERT, and DELETE operations.   */
  public java.lang.String getAspectName() {
    return aspectName;
  }

  /**
   * Sets the value of the 'aspectName' field.
   * Aspect of the entity being written to
Not filling this out implies that the writer wants to affect the entire entity
Note: This is only valid for CREATE, UPSERT, and DELETE operations.   * @param value the value to set.
   */
  public void setAspectName(java.lang.String value) {
    this.aspectName = value;
  }

  /**
   * Gets the value of the 'aspect' field.
   * The value of the new aspect.   */
  public com.linkedin.pegasus2avro.mxe.GenericAspect getAspect() {
    return aspect;
  }

  /**
   * Sets the value of the 'aspect' field.
   * The value of the new aspect.   * @param value the value to set.
   */
  public void setAspect(com.linkedin.pegasus2avro.mxe.GenericAspect value) {
    this.aspect = value;
  }

  /**
   * Gets the value of the 'systemMetadata' field.
   * A string->string map of custom properties that one might want to attach to an event   */
  public com.linkedin.pegasus2avro.mxe.SystemMetadata getSystemMetadata() {
    return systemMetadata;
  }

  /**
   * Sets the value of the 'systemMetadata' field.
   * A string->string map of custom properties that one might want to attach to an event   * @param value the value to set.
   */
  public void setSystemMetadata(com.linkedin.pegasus2avro.mxe.SystemMetadata value) {
    this.systemMetadata = value;
  }

  /** Creates a new MetadataChangeProposal RecordBuilder */
  public static com.linkedin.pegasus2avro.mxe.MetadataChangeProposal.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.mxe.MetadataChangeProposal.Builder();
  }
  
  /** Creates a new MetadataChangeProposal RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.mxe.MetadataChangeProposal.Builder newBuilder(com.linkedin.pegasus2avro.mxe.MetadataChangeProposal.Builder other) {
    return new com.linkedin.pegasus2avro.mxe.MetadataChangeProposal.Builder(other);
  }
  
  /** Creates a new MetadataChangeProposal RecordBuilder by copying an existing MetadataChangeProposal instance */
  public static com.linkedin.pegasus2avro.mxe.MetadataChangeProposal.Builder newBuilder(com.linkedin.pegasus2avro.mxe.MetadataChangeProposal other) {
    return new com.linkedin.pegasus2avro.mxe.MetadataChangeProposal.Builder(other);
  }
  
  /**
   * RecordBuilder for MetadataChangeProposal instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MetadataChangeProposal>
    implements org.apache.avro.data.RecordBuilder<MetadataChangeProposal> {

    private com.linkedin.events.KafkaAuditHeader auditHeader;
    private java.lang.String entityType;
    private java.lang.String entityUrn;
    private com.linkedin.pegasus2avro.mxe.GenericAspect entityKeyAspect;
    private com.linkedin.pegasus2avro.events.metadata.ChangeType changeType;
    private java.lang.String aspectName;
    private com.linkedin.pegasus2avro.mxe.GenericAspect aspect;
    private com.linkedin.pegasus2avro.mxe.SystemMetadata systemMetadata;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.mxe.MetadataChangeProposal.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.mxe.MetadataChangeProposal.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.auditHeader)) {
        this.auditHeader = data().deepCopy(fields()[0].schema(), other.auditHeader);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.entityType)) {
        this.entityType = data().deepCopy(fields()[1].schema(), other.entityType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.entityUrn)) {
        this.entityUrn = data().deepCopy(fields()[2].schema(), other.entityUrn);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.entityKeyAspect)) {
        this.entityKeyAspect = data().deepCopy(fields()[3].schema(), other.entityKeyAspect);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.changeType)) {
        this.changeType = data().deepCopy(fields()[4].schema(), other.changeType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.aspectName)) {
        this.aspectName = data().deepCopy(fields()[5].schema(), other.aspectName);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.aspect)) {
        this.aspect = data().deepCopy(fields()[6].schema(), other.aspect);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.systemMetadata)) {
        this.systemMetadata = data().deepCopy(fields()[7].schema(), other.systemMetadata);
        fieldSetFlags()[7] = true;
      }
    }
    
    /** Creates a Builder by copying an existing MetadataChangeProposal instance */
    private Builder(com.linkedin.pegasus2avro.mxe.MetadataChangeProposal other) {
            super(com.linkedin.pegasus2avro.mxe.MetadataChangeProposal.SCHEMA$);
      if (isValidValue(fields()[0], other.auditHeader)) {
        this.auditHeader = data().deepCopy(fields()[0].schema(), other.auditHeader);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.entityType)) {
        this.entityType = data().deepCopy(fields()[1].schema(), other.entityType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.entityUrn)) {
        this.entityUrn = data().deepCopy(fields()[2].schema(), other.entityUrn);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.entityKeyAspect)) {
        this.entityKeyAspect = data().deepCopy(fields()[3].schema(), other.entityKeyAspect);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.changeType)) {
        this.changeType = data().deepCopy(fields()[4].schema(), other.changeType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.aspectName)) {
        this.aspectName = data().deepCopy(fields()[5].schema(), other.aspectName);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.aspect)) {
        this.aspect = data().deepCopy(fields()[6].schema(), other.aspect);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.systemMetadata)) {
        this.systemMetadata = data().deepCopy(fields()[7].schema(), other.systemMetadata);
        fieldSetFlags()[7] = true;
      }
    }

    /** Gets the value of the 'auditHeader' field */
    public com.linkedin.events.KafkaAuditHeader getAuditHeader() {
      return auditHeader;
    }
    
    /** Sets the value of the 'auditHeader' field */
    public com.linkedin.pegasus2avro.mxe.MetadataChangeProposal.Builder setAuditHeader(com.linkedin.events.KafkaAuditHeader value) {
      validate(fields()[0], value);
      this.auditHeader = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'auditHeader' field has been set */
    public boolean hasAuditHeader() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'auditHeader' field */
    public com.linkedin.pegasus2avro.mxe.MetadataChangeProposal.Builder clearAuditHeader() {
      auditHeader = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'entityType' field */
    public java.lang.String getEntityType() {
      return entityType;
    }
    
    /** Sets the value of the 'entityType' field */
    public com.linkedin.pegasus2avro.mxe.MetadataChangeProposal.Builder setEntityType(java.lang.String value) {
      validate(fields()[1], value);
      this.entityType = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'entityType' field has been set */
    public boolean hasEntityType() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'entityType' field */
    public com.linkedin.pegasus2avro.mxe.MetadataChangeProposal.Builder clearEntityType() {
      entityType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'entityUrn' field */
    public java.lang.String getEntityUrn() {
      return entityUrn;
    }
    
    /** Sets the value of the 'entityUrn' field */
    public com.linkedin.pegasus2avro.mxe.MetadataChangeProposal.Builder setEntityUrn(java.lang.String value) {
      validate(fields()[2], value);
      this.entityUrn = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'entityUrn' field has been set */
    public boolean hasEntityUrn() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'entityUrn' field */
    public com.linkedin.pegasus2avro.mxe.MetadataChangeProposal.Builder clearEntityUrn() {
      entityUrn = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'entityKeyAspect' field */
    public com.linkedin.pegasus2avro.mxe.GenericAspect getEntityKeyAspect() {
      return entityKeyAspect;
    }
    
    /** Sets the value of the 'entityKeyAspect' field */
    public com.linkedin.pegasus2avro.mxe.MetadataChangeProposal.Builder setEntityKeyAspect(com.linkedin.pegasus2avro.mxe.GenericAspect value) {
      validate(fields()[3], value);
      this.entityKeyAspect = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'entityKeyAspect' field has been set */
    public boolean hasEntityKeyAspect() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'entityKeyAspect' field */
    public com.linkedin.pegasus2avro.mxe.MetadataChangeProposal.Builder clearEntityKeyAspect() {
      entityKeyAspect = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'changeType' field */
    public com.linkedin.pegasus2avro.events.metadata.ChangeType getChangeType() {
      return changeType;
    }
    
    /** Sets the value of the 'changeType' field */
    public com.linkedin.pegasus2avro.mxe.MetadataChangeProposal.Builder setChangeType(com.linkedin.pegasus2avro.events.metadata.ChangeType value) {
      validate(fields()[4], value);
      this.changeType = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'changeType' field has been set */
    public boolean hasChangeType() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'changeType' field */
    public com.linkedin.pegasus2avro.mxe.MetadataChangeProposal.Builder clearChangeType() {
      changeType = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'aspectName' field */
    public java.lang.String getAspectName() {
      return aspectName;
    }
    
    /** Sets the value of the 'aspectName' field */
    public com.linkedin.pegasus2avro.mxe.MetadataChangeProposal.Builder setAspectName(java.lang.String value) {
      validate(fields()[5], value);
      this.aspectName = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'aspectName' field has been set */
    public boolean hasAspectName() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'aspectName' field */
    public com.linkedin.pegasus2avro.mxe.MetadataChangeProposal.Builder clearAspectName() {
      aspectName = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'aspect' field */
    public com.linkedin.pegasus2avro.mxe.GenericAspect getAspect() {
      return aspect;
    }
    
    /** Sets the value of the 'aspect' field */
    public com.linkedin.pegasus2avro.mxe.MetadataChangeProposal.Builder setAspect(com.linkedin.pegasus2avro.mxe.GenericAspect value) {
      validate(fields()[6], value);
      this.aspect = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'aspect' field has been set */
    public boolean hasAspect() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'aspect' field */
    public com.linkedin.pegasus2avro.mxe.MetadataChangeProposal.Builder clearAspect() {
      aspect = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'systemMetadata' field */
    public com.linkedin.pegasus2avro.mxe.SystemMetadata getSystemMetadata() {
      return systemMetadata;
    }
    
    /** Sets the value of the 'systemMetadata' field */
    public com.linkedin.pegasus2avro.mxe.MetadataChangeProposal.Builder setSystemMetadata(com.linkedin.pegasus2avro.mxe.SystemMetadata value) {
      validate(fields()[7], value);
      this.systemMetadata = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'systemMetadata' field has been set */
    public boolean hasSystemMetadata() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'systemMetadata' field */
    public com.linkedin.pegasus2avro.mxe.MetadataChangeProposal.Builder clearSystemMetadata() {
      systemMetadata = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    public MetadataChangeProposal build() {
      try {
        MetadataChangeProposal record = new MetadataChangeProposal();
        record.auditHeader = fieldSetFlags()[0] ? this.auditHeader : (com.linkedin.events.KafkaAuditHeader) defaultValue(fields()[0]);
        record.entityType = fieldSetFlags()[1] ? this.entityType : (java.lang.String) defaultValue(fields()[1]);
        record.entityUrn = fieldSetFlags()[2] ? this.entityUrn : (java.lang.String) defaultValue(fields()[2]);
        record.entityKeyAspect = fieldSetFlags()[3] ? this.entityKeyAspect : (com.linkedin.pegasus2avro.mxe.GenericAspect) defaultValue(fields()[3]);
        record.changeType = fieldSetFlags()[4] ? this.changeType : (com.linkedin.pegasus2avro.events.metadata.ChangeType) defaultValue(fields()[4]);
        record.aspectName = fieldSetFlags()[5] ? this.aspectName : (java.lang.String) defaultValue(fields()[5]);
        record.aspect = fieldSetFlags()[6] ? this.aspect : (com.linkedin.pegasus2avro.mxe.GenericAspect) defaultValue(fields()[6]);
        record.systemMetadata = fieldSetFlags()[7] ? this.systemMetadata : (com.linkedin.pegasus2avro.mxe.SystemMetadata) defaultValue(fields()[7]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
