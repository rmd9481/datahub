/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.metadata.graph;  
@SuppressWarnings("all")
/** A list of lineage information associated with a source Entity */
@org.apache.avro.specific.AvroGenerated
public class EntityLineageResult extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EntityLineageResult\",\"namespace\":\"com.linkedin.pegasus2avro.metadata.graph\",\"doc\":\"A list of lineage information associated with a source Entity\",\"fields\":[{\"name\":\"start\",\"type\":\"int\",\"doc\":\"Start offset of the result set\"},{\"name\":\"count\",\"type\":\"int\",\"doc\":\"Number of results in the returned result set\"},{\"name\":\"total\",\"type\":\"int\",\"doc\":\"Total number of results in the result set\"},{\"name\":\"filtered\",\"type\":[\"int\",\"null\"],\"doc\":\"The number of results that were filtered out of the page (soft-deleted or non-existent)\",\"default\":0},{\"name\":\"relationships\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"LineageRelationship\",\"doc\":\"Metadata about a lineage relationship between two entities\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The type of the relationship\"},{\"name\":\"entity\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Entity that is related via lineage\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"paths\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}},\"doc\":\"Optional list of entities between the source and destination node.\\nThere can be multiple paths from the source to the destination.\",\"default\":[]},{\"name\":\"path\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"doc\":\"Optional list of entities between the source and destination node\",\"default\":[],\"deprecated\":true},{\"name\":\"degree\",\"type\":\"int\",\"doc\":\"Degree of relationship (number of hops to get to entity)\",\"default\":1},{\"name\":\"createdOn\",\"type\":[\"null\",\"long\"],\"doc\":\"Timestamp for when this lineage relationship was created. Could be null.\",\"default\":null},{\"name\":\"createdActor\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Urn of the actor that created this lineage relationship. Could be null.\",\"default\":null,\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"updatedOn\",\"type\":[\"null\",\"long\"],\"doc\":\"Timestamp for when this lineage relationship was last updated. Could be null.\",\"default\":null},{\"name\":\"updatedActor\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Urn of the actor that last updated this lineage relationship. Could be null.\",\"default\":null,\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"isManual\",\"type\":[\"null\",\"boolean\"],\"doc\":\"Whether this lineage edge is a manual edge.\",\"default\":null}]}},\"doc\":\"Relationships in the result set\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Start offset of the result set */
  @Deprecated public int start;
  /** Number of results in the returned result set */
  @Deprecated public int count;
  /** Total number of results in the result set */
  @Deprecated public int total;
  /** The number of results that were filtered out of the page (soft-deleted or non-existent) */
  @Deprecated public java.lang.Integer filtered;
  /** Relationships in the result set */
  @Deprecated public java.util.List<com.linkedin.pegasus2avro.metadata.graph.LineageRelationship> relationships;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public EntityLineageResult() {}

  /**
   * All-args constructor.
   */
  public EntityLineageResult(java.lang.Integer start, java.lang.Integer count, java.lang.Integer total, java.lang.Integer filtered, java.util.List<com.linkedin.pegasus2avro.metadata.graph.LineageRelationship> relationships) {
    this.start = start;
    this.count = count;
    this.total = total;
    this.filtered = filtered;
    this.relationships = relationships;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return start;
    case 1: return count;
    case 2: return total;
    case 3: return filtered;
    case 4: return relationships;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: start = (java.lang.Integer)value$; break;
    case 1: count = (java.lang.Integer)value$; break;
    case 2: total = (java.lang.Integer)value$; break;
    case 3: filtered = (java.lang.Integer)value$; break;
    case 4: relationships = (java.util.List<com.linkedin.pegasus2avro.metadata.graph.LineageRelationship>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'start' field.
   * Start offset of the result set   */
  public java.lang.Integer getStart() {
    return start;
  }

  /**
   * Sets the value of the 'start' field.
   * Start offset of the result set   * @param value the value to set.
   */
  public void setStart(java.lang.Integer value) {
    this.start = value;
  }

  /**
   * Gets the value of the 'count' field.
   * Number of results in the returned result set   */
  public java.lang.Integer getCount() {
    return count;
  }

  /**
   * Sets the value of the 'count' field.
   * Number of results in the returned result set   * @param value the value to set.
   */
  public void setCount(java.lang.Integer value) {
    this.count = value;
  }

  /**
   * Gets the value of the 'total' field.
   * Total number of results in the result set   */
  public java.lang.Integer getTotal() {
    return total;
  }

  /**
   * Sets the value of the 'total' field.
   * Total number of results in the result set   * @param value the value to set.
   */
  public void setTotal(java.lang.Integer value) {
    this.total = value;
  }

  /**
   * Gets the value of the 'filtered' field.
   * The number of results that were filtered out of the page (soft-deleted or non-existent)   */
  public java.lang.Integer getFiltered() {
    return filtered;
  }

  /**
   * Sets the value of the 'filtered' field.
   * The number of results that were filtered out of the page (soft-deleted or non-existent)   * @param value the value to set.
   */
  public void setFiltered(java.lang.Integer value) {
    this.filtered = value;
  }

  /**
   * Gets the value of the 'relationships' field.
   * Relationships in the result set   */
  public java.util.List<com.linkedin.pegasus2avro.metadata.graph.LineageRelationship> getRelationships() {
    return relationships;
  }

  /**
   * Sets the value of the 'relationships' field.
   * Relationships in the result set   * @param value the value to set.
   */
  public void setRelationships(java.util.List<com.linkedin.pegasus2avro.metadata.graph.LineageRelationship> value) {
    this.relationships = value;
  }

  /** Creates a new EntityLineageResult RecordBuilder */
  public static com.linkedin.pegasus2avro.metadata.graph.EntityLineageResult.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.metadata.graph.EntityLineageResult.Builder();
  }
  
  /** Creates a new EntityLineageResult RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.metadata.graph.EntityLineageResult.Builder newBuilder(com.linkedin.pegasus2avro.metadata.graph.EntityLineageResult.Builder other) {
    return new com.linkedin.pegasus2avro.metadata.graph.EntityLineageResult.Builder(other);
  }
  
  /** Creates a new EntityLineageResult RecordBuilder by copying an existing EntityLineageResult instance */
  public static com.linkedin.pegasus2avro.metadata.graph.EntityLineageResult.Builder newBuilder(com.linkedin.pegasus2avro.metadata.graph.EntityLineageResult other) {
    return new com.linkedin.pegasus2avro.metadata.graph.EntityLineageResult.Builder(other);
  }
  
  /**
   * RecordBuilder for EntityLineageResult instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EntityLineageResult>
    implements org.apache.avro.data.RecordBuilder<EntityLineageResult> {

    private int start;
    private int count;
    private int total;
    private java.lang.Integer filtered;
    private java.util.List<com.linkedin.pegasus2avro.metadata.graph.LineageRelationship> relationships;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.metadata.graph.EntityLineageResult.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.metadata.graph.EntityLineageResult.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.start)) {
        this.start = data().deepCopy(fields()[0].schema(), other.start);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.count)) {
        this.count = data().deepCopy(fields()[1].schema(), other.count);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.total)) {
        this.total = data().deepCopy(fields()[2].schema(), other.total);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.filtered)) {
        this.filtered = data().deepCopy(fields()[3].schema(), other.filtered);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.relationships)) {
        this.relationships = data().deepCopy(fields()[4].schema(), other.relationships);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing EntityLineageResult instance */
    private Builder(com.linkedin.pegasus2avro.metadata.graph.EntityLineageResult other) {
            super(com.linkedin.pegasus2avro.metadata.graph.EntityLineageResult.SCHEMA$);
      if (isValidValue(fields()[0], other.start)) {
        this.start = data().deepCopy(fields()[0].schema(), other.start);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.count)) {
        this.count = data().deepCopy(fields()[1].schema(), other.count);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.total)) {
        this.total = data().deepCopy(fields()[2].schema(), other.total);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.filtered)) {
        this.filtered = data().deepCopy(fields()[3].schema(), other.filtered);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.relationships)) {
        this.relationships = data().deepCopy(fields()[4].schema(), other.relationships);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'start' field */
    public java.lang.Integer getStart() {
      return start;
    }
    
    /** Sets the value of the 'start' field */
    public com.linkedin.pegasus2avro.metadata.graph.EntityLineageResult.Builder setStart(int value) {
      validate(fields()[0], value);
      this.start = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'start' field has been set */
    public boolean hasStart() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'start' field */
    public com.linkedin.pegasus2avro.metadata.graph.EntityLineageResult.Builder clearStart() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'count' field */
    public java.lang.Integer getCount() {
      return count;
    }
    
    /** Sets the value of the 'count' field */
    public com.linkedin.pegasus2avro.metadata.graph.EntityLineageResult.Builder setCount(int value) {
      validate(fields()[1], value);
      this.count = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'count' field has been set */
    public boolean hasCount() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'count' field */
    public com.linkedin.pegasus2avro.metadata.graph.EntityLineageResult.Builder clearCount() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'total' field */
    public java.lang.Integer getTotal() {
      return total;
    }
    
    /** Sets the value of the 'total' field */
    public com.linkedin.pegasus2avro.metadata.graph.EntityLineageResult.Builder setTotal(int value) {
      validate(fields()[2], value);
      this.total = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'total' field has been set */
    public boolean hasTotal() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'total' field */
    public com.linkedin.pegasus2avro.metadata.graph.EntityLineageResult.Builder clearTotal() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'filtered' field */
    public java.lang.Integer getFiltered() {
      return filtered;
    }
    
    /** Sets the value of the 'filtered' field */
    public com.linkedin.pegasus2avro.metadata.graph.EntityLineageResult.Builder setFiltered(java.lang.Integer value) {
      validate(fields()[3], value);
      this.filtered = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'filtered' field has been set */
    public boolean hasFiltered() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'filtered' field */
    public com.linkedin.pegasus2avro.metadata.graph.EntityLineageResult.Builder clearFiltered() {
      filtered = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'relationships' field */
    public java.util.List<com.linkedin.pegasus2avro.metadata.graph.LineageRelationship> getRelationships() {
      return relationships;
    }
    
    /** Sets the value of the 'relationships' field */
    public com.linkedin.pegasus2avro.metadata.graph.EntityLineageResult.Builder setRelationships(java.util.List<com.linkedin.pegasus2avro.metadata.graph.LineageRelationship> value) {
      validate(fields()[4], value);
      this.relationships = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'relationships' field has been set */
    public boolean hasRelationships() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'relationships' field */
    public com.linkedin.pegasus2avro.metadata.graph.EntityLineageResult.Builder clearRelationships() {
      relationships = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public EntityLineageResult build() {
      try {
        EntityLineageResult record = new EntityLineageResult();
        record.start = fieldSetFlags()[0] ? this.start : (java.lang.Integer) defaultValue(fields()[0]);
        record.count = fieldSetFlags()[1] ? this.count : (java.lang.Integer) defaultValue(fields()[1]);
        record.total = fieldSetFlags()[2] ? this.total : (java.lang.Integer) defaultValue(fields()[2]);
        record.filtered = fieldSetFlags()[3] ? this.filtered : (java.lang.Integer) defaultValue(fields()[3]);
        record.relationships = fieldSetFlags()[4] ? this.relationships : (java.util.List<com.linkedin.pegasus2avro.metadata.graph.LineageRelationship>) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
