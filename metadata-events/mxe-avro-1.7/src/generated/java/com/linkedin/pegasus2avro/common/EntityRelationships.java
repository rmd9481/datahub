/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.common;  
@SuppressWarnings("all")
/** Downstream lineage of a dataset */
@org.apache.avro.specific.AvroGenerated
public class EntityRelationships extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EntityRelationships\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"Downstream lineage of a dataset\",\"fields\":[{\"name\":\"relationships\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"EntityRelationship\",\"doc\":\"Downstream lineage information about a dataset including the source reporting the lineage\",\"fields\":[{\"name\":\"created\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"AuditStamp\",\"doc\":\"Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage.\",\"fields\":[{\"name\":\"time\",\"type\":\"long\",\"doc\":\"When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent.\"},{\"name\":\"actor\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change.\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"impersonator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor.\",\"default\":null,\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"message\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually.\",\"default\":null}]}],\"doc\":\"Audit stamp containing who reported the lineage and when\",\"default\":null},{\"name\":\"entity\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The downstream dataset the lineage points to\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The type of the relationship\"}]}},\"doc\":\"List of related entities\"},{\"name\":\"start\",\"type\":\"int\",\"doc\":\"The start of the result set\"},{\"name\":\"count\",\"type\":\"int\",\"doc\":\"The start of the result set\"},{\"name\":\"total\",\"type\":\"int\",\"doc\":\"Total number of edges found.\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** List of related entities */
  @Deprecated public java.util.List<com.linkedin.pegasus2avro.common.EntityRelationship> relationships;
  /** The start of the result set */
  @Deprecated public int start;
  /** The start of the result set */
  @Deprecated public int count;
  /** Total number of edges found. */
  @Deprecated public int total;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public EntityRelationships() {}

  /**
   * All-args constructor.
   */
  public EntityRelationships(java.util.List<com.linkedin.pegasus2avro.common.EntityRelationship> relationships, java.lang.Integer start, java.lang.Integer count, java.lang.Integer total) {
    this.relationships = relationships;
    this.start = start;
    this.count = count;
    this.total = total;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return relationships;
    case 1: return start;
    case 2: return count;
    case 3: return total;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: relationships = (java.util.List<com.linkedin.pegasus2avro.common.EntityRelationship>)value$; break;
    case 1: start = (java.lang.Integer)value$; break;
    case 2: count = (java.lang.Integer)value$; break;
    case 3: total = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'relationships' field.
   * List of related entities   */
  public java.util.List<com.linkedin.pegasus2avro.common.EntityRelationship> getRelationships() {
    return relationships;
  }

  /**
   * Sets the value of the 'relationships' field.
   * List of related entities   * @param value the value to set.
   */
  public void setRelationships(java.util.List<com.linkedin.pegasus2avro.common.EntityRelationship> value) {
    this.relationships = value;
  }

  /**
   * Gets the value of the 'start' field.
   * The start of the result set   */
  public java.lang.Integer getStart() {
    return start;
  }

  /**
   * Sets the value of the 'start' field.
   * The start of the result set   * @param value the value to set.
   */
  public void setStart(java.lang.Integer value) {
    this.start = value;
  }

  /**
   * Gets the value of the 'count' field.
   * The start of the result set   */
  public java.lang.Integer getCount() {
    return count;
  }

  /**
   * Sets the value of the 'count' field.
   * The start of the result set   * @param value the value to set.
   */
  public void setCount(java.lang.Integer value) {
    this.count = value;
  }

  /**
   * Gets the value of the 'total' field.
   * Total number of edges found.   */
  public java.lang.Integer getTotal() {
    return total;
  }

  /**
   * Sets the value of the 'total' field.
   * Total number of edges found.   * @param value the value to set.
   */
  public void setTotal(java.lang.Integer value) {
    this.total = value;
  }

  /** Creates a new EntityRelationships RecordBuilder */
  public static com.linkedin.pegasus2avro.common.EntityRelationships.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.common.EntityRelationships.Builder();
  }
  
  /** Creates a new EntityRelationships RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.common.EntityRelationships.Builder newBuilder(com.linkedin.pegasus2avro.common.EntityRelationships.Builder other) {
    return new com.linkedin.pegasus2avro.common.EntityRelationships.Builder(other);
  }
  
  /** Creates a new EntityRelationships RecordBuilder by copying an existing EntityRelationships instance */
  public static com.linkedin.pegasus2avro.common.EntityRelationships.Builder newBuilder(com.linkedin.pegasus2avro.common.EntityRelationships other) {
    return new com.linkedin.pegasus2avro.common.EntityRelationships.Builder(other);
  }
  
  /**
   * RecordBuilder for EntityRelationships instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EntityRelationships>
    implements org.apache.avro.data.RecordBuilder<EntityRelationships> {

    private java.util.List<com.linkedin.pegasus2avro.common.EntityRelationship> relationships;
    private int start;
    private int count;
    private int total;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.common.EntityRelationships.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.common.EntityRelationships.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.relationships)) {
        this.relationships = data().deepCopy(fields()[0].schema(), other.relationships);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.start)) {
        this.start = data().deepCopy(fields()[1].schema(), other.start);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.count)) {
        this.count = data().deepCopy(fields()[2].schema(), other.count);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.total)) {
        this.total = data().deepCopy(fields()[3].schema(), other.total);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing EntityRelationships instance */
    private Builder(com.linkedin.pegasus2avro.common.EntityRelationships other) {
            super(com.linkedin.pegasus2avro.common.EntityRelationships.SCHEMA$);
      if (isValidValue(fields()[0], other.relationships)) {
        this.relationships = data().deepCopy(fields()[0].schema(), other.relationships);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.start)) {
        this.start = data().deepCopy(fields()[1].schema(), other.start);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.count)) {
        this.count = data().deepCopy(fields()[2].schema(), other.count);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.total)) {
        this.total = data().deepCopy(fields()[3].schema(), other.total);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'relationships' field */
    public java.util.List<com.linkedin.pegasus2avro.common.EntityRelationship> getRelationships() {
      return relationships;
    }
    
    /** Sets the value of the 'relationships' field */
    public com.linkedin.pegasus2avro.common.EntityRelationships.Builder setRelationships(java.util.List<com.linkedin.pegasus2avro.common.EntityRelationship> value) {
      validate(fields()[0], value);
      this.relationships = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'relationships' field has been set */
    public boolean hasRelationships() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'relationships' field */
    public com.linkedin.pegasus2avro.common.EntityRelationships.Builder clearRelationships() {
      relationships = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'start' field */
    public java.lang.Integer getStart() {
      return start;
    }
    
    /** Sets the value of the 'start' field */
    public com.linkedin.pegasus2avro.common.EntityRelationships.Builder setStart(int value) {
      validate(fields()[1], value);
      this.start = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'start' field has been set */
    public boolean hasStart() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'start' field */
    public com.linkedin.pegasus2avro.common.EntityRelationships.Builder clearStart() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'count' field */
    public java.lang.Integer getCount() {
      return count;
    }
    
    /** Sets the value of the 'count' field */
    public com.linkedin.pegasus2avro.common.EntityRelationships.Builder setCount(int value) {
      validate(fields()[2], value);
      this.count = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'count' field has been set */
    public boolean hasCount() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'count' field */
    public com.linkedin.pegasus2avro.common.EntityRelationships.Builder clearCount() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'total' field */
    public java.lang.Integer getTotal() {
      return total;
    }
    
    /** Sets the value of the 'total' field */
    public com.linkedin.pegasus2avro.common.EntityRelationships.Builder setTotal(int value) {
      validate(fields()[3], value);
      this.total = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'total' field has been set */
    public boolean hasTotal() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'total' field */
    public com.linkedin.pegasus2avro.common.EntityRelationships.Builder clearTotal() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public EntityRelationships build() {
      try {
        EntityRelationships record = new EntityRelationships();
        record.relationships = fieldSetFlags()[0] ? this.relationships : (java.util.List<com.linkedin.pegasus2avro.common.EntityRelationship>) defaultValue(fields()[0]);
        record.start = fieldSetFlags()[1] ? this.start : (java.lang.Integer) defaultValue(fields()[1]);
        record.count = fieldSetFlags()[2] ? this.count : (java.lang.Integer) defaultValue(fields()[2]);
        record.total = fieldSetFlags()[3] ? this.total : (java.lang.Integer) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
