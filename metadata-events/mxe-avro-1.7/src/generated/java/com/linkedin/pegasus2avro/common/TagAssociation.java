/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.common;  
@SuppressWarnings("all")
/** Properties of an applied tag. For now, just an Urn. In the future we can extend this with other properties, e.g.
propagation parameters. */
@org.apache.avro.specific.AvroGenerated
public class TagAssociation extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TagAssociation\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"Properties of an applied tag. For now, just an Urn. In the future we can extend this with other properties, e.g.\\npropagation parameters.\",\"fields\":[{\"name\":\"tag\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Urn of the applied tag\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.TagUrn\"}},{\"name\":\"context\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Additional context about the association\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Urn of the applied tag */
  @Deprecated public java.lang.String tag;
  /** Additional context about the association */
  @Deprecated public java.lang.String context;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public TagAssociation() {}

  /**
   * All-args constructor.
   */
  public TagAssociation(java.lang.String tag, java.lang.String context) {
    this.tag = tag;
    this.context = context;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return tag;
    case 1: return context;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: tag = (java.lang.String)value$; break;
    case 1: context = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'tag' field.
   * Urn of the applied tag   */
  public java.lang.String getTag() {
    return tag;
  }

  /**
   * Sets the value of the 'tag' field.
   * Urn of the applied tag   * @param value the value to set.
   */
  public void setTag(java.lang.String value) {
    this.tag = value;
  }

  /**
   * Gets the value of the 'context' field.
   * Additional context about the association   */
  public java.lang.String getContext() {
    return context;
  }

  /**
   * Sets the value of the 'context' field.
   * Additional context about the association   * @param value the value to set.
   */
  public void setContext(java.lang.String value) {
    this.context = value;
  }

  /** Creates a new TagAssociation RecordBuilder */
  public static com.linkedin.pegasus2avro.common.TagAssociation.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.common.TagAssociation.Builder();
  }
  
  /** Creates a new TagAssociation RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.common.TagAssociation.Builder newBuilder(com.linkedin.pegasus2avro.common.TagAssociation.Builder other) {
    return new com.linkedin.pegasus2avro.common.TagAssociation.Builder(other);
  }
  
  /** Creates a new TagAssociation RecordBuilder by copying an existing TagAssociation instance */
  public static com.linkedin.pegasus2avro.common.TagAssociation.Builder newBuilder(com.linkedin.pegasus2avro.common.TagAssociation other) {
    return new com.linkedin.pegasus2avro.common.TagAssociation.Builder(other);
  }
  
  /**
   * RecordBuilder for TagAssociation instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TagAssociation>
    implements org.apache.avro.data.RecordBuilder<TagAssociation> {

    private java.lang.String tag;
    private java.lang.String context;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.common.TagAssociation.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.common.TagAssociation.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.tag)) {
        this.tag = data().deepCopy(fields()[0].schema(), other.tag);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.context)) {
        this.context = data().deepCopy(fields()[1].schema(), other.context);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing TagAssociation instance */
    private Builder(com.linkedin.pegasus2avro.common.TagAssociation other) {
            super(com.linkedin.pegasus2avro.common.TagAssociation.SCHEMA$);
      if (isValidValue(fields()[0], other.tag)) {
        this.tag = data().deepCopy(fields()[0].schema(), other.tag);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.context)) {
        this.context = data().deepCopy(fields()[1].schema(), other.context);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'tag' field */
    public java.lang.String getTag() {
      return tag;
    }
    
    /** Sets the value of the 'tag' field */
    public com.linkedin.pegasus2avro.common.TagAssociation.Builder setTag(java.lang.String value) {
      validate(fields()[0], value);
      this.tag = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'tag' field has been set */
    public boolean hasTag() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'tag' field */
    public com.linkedin.pegasus2avro.common.TagAssociation.Builder clearTag() {
      tag = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'context' field */
    public java.lang.String getContext() {
      return context;
    }
    
    /** Sets the value of the 'context' field */
    public com.linkedin.pegasus2avro.common.TagAssociation.Builder setContext(java.lang.String value) {
      validate(fields()[1], value);
      this.context = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'context' field has been set */
    public boolean hasContext() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'context' field */
    public com.linkedin.pegasus2avro.common.TagAssociation.Builder clearContext() {
      context = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public TagAssociation build() {
      try {
        TagAssociation record = new TagAssociation();
        record.tag = fieldSetFlags()[0] ? this.tag : (java.lang.String) defaultValue(fields()[0]);
        record.context = fieldSetFlags()[1] ? this.context : (java.lang.String) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
