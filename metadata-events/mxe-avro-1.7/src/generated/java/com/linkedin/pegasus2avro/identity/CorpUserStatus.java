/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.identity;  
@SuppressWarnings("all")
/** The status of the user, e.g. provisioned, active, suspended, etc. */
@org.apache.avro.specific.AvroGenerated
public class CorpUserStatus extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CorpUserStatus\",\"namespace\":\"com.linkedin.pegasus2avro.identity\",\"doc\":\"The status of the user, e.g. provisioned, active, suspended, etc.\",\"fields\":[{\"name\":\"status\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Status of the user, e.g. PROVISIONED / ACTIVE / SUSPENDED\",\"Searchable\":{\"fieldType\":\"KEYWORD\"}},{\"name\":\"lastModified\",\"type\":{\"type\":\"record\",\"name\":\"AuditStamp\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage.\",\"fields\":[{\"name\":\"time\",\"type\":\"long\",\"doc\":\"When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent.\"},{\"name\":\"actor\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change.\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"impersonator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor.\",\"default\":null,\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"message\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually.\",\"default\":null}]},\"doc\":\"Audit stamp containing who last modified the status and when.\"}],\"Aspect\":{\"name\":\"corpUserStatus\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Status of the user, e.g. PROVISIONED / ACTIVE / SUSPENDED */
  @Deprecated public java.lang.String status;
  /** Audit stamp containing who last modified the status and when. */
  @Deprecated public com.linkedin.pegasus2avro.common.AuditStamp lastModified;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public CorpUserStatus() {}

  /**
   * All-args constructor.
   */
  public CorpUserStatus(java.lang.String status, com.linkedin.pegasus2avro.common.AuditStamp lastModified) {
    this.status = status;
    this.lastModified = lastModified;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return status;
    case 1: return lastModified;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: status = (java.lang.String)value$; break;
    case 1: lastModified = (com.linkedin.pegasus2avro.common.AuditStamp)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'status' field.
   * Status of the user, e.g. PROVISIONED / ACTIVE / SUSPENDED   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * Status of the user, e.g. PROVISIONED / ACTIVE / SUSPENDED   * @param value the value to set.
   */
  public void setStatus(java.lang.String value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'lastModified' field.
   * Audit stamp containing who last modified the status and when.   */
  public com.linkedin.pegasus2avro.common.AuditStamp getLastModified() {
    return lastModified;
  }

  /**
   * Sets the value of the 'lastModified' field.
   * Audit stamp containing who last modified the status and when.   * @param value the value to set.
   */
  public void setLastModified(com.linkedin.pegasus2avro.common.AuditStamp value) {
    this.lastModified = value;
  }

  /** Creates a new CorpUserStatus RecordBuilder */
  public static com.linkedin.pegasus2avro.identity.CorpUserStatus.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.identity.CorpUserStatus.Builder();
  }
  
  /** Creates a new CorpUserStatus RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.identity.CorpUserStatus.Builder newBuilder(com.linkedin.pegasus2avro.identity.CorpUserStatus.Builder other) {
    return new com.linkedin.pegasus2avro.identity.CorpUserStatus.Builder(other);
  }
  
  /** Creates a new CorpUserStatus RecordBuilder by copying an existing CorpUserStatus instance */
  public static com.linkedin.pegasus2avro.identity.CorpUserStatus.Builder newBuilder(com.linkedin.pegasus2avro.identity.CorpUserStatus other) {
    return new com.linkedin.pegasus2avro.identity.CorpUserStatus.Builder(other);
  }
  
  /**
   * RecordBuilder for CorpUserStatus instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CorpUserStatus>
    implements org.apache.avro.data.RecordBuilder<CorpUserStatus> {

    private java.lang.String status;
    private com.linkedin.pegasus2avro.common.AuditStamp lastModified;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.identity.CorpUserStatus.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.identity.CorpUserStatus.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.status)) {
        this.status = data().deepCopy(fields()[0].schema(), other.status);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.lastModified)) {
        this.lastModified = data().deepCopy(fields()[1].schema(), other.lastModified);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing CorpUserStatus instance */
    private Builder(com.linkedin.pegasus2avro.identity.CorpUserStatus other) {
            super(com.linkedin.pegasus2avro.identity.CorpUserStatus.SCHEMA$);
      if (isValidValue(fields()[0], other.status)) {
        this.status = data().deepCopy(fields()[0].schema(), other.status);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.lastModified)) {
        this.lastModified = data().deepCopy(fields()[1].schema(), other.lastModified);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'status' field */
    public java.lang.String getStatus() {
      return status;
    }
    
    /** Sets the value of the 'status' field */
    public com.linkedin.pegasus2avro.identity.CorpUserStatus.Builder setStatus(java.lang.String value) {
      validate(fields()[0], value);
      this.status = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'status' field has been set */
    public boolean hasStatus() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'status' field */
    public com.linkedin.pegasus2avro.identity.CorpUserStatus.Builder clearStatus() {
      status = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'lastModified' field */
    public com.linkedin.pegasus2avro.common.AuditStamp getLastModified() {
      return lastModified;
    }
    
    /** Sets the value of the 'lastModified' field */
    public com.linkedin.pegasus2avro.identity.CorpUserStatus.Builder setLastModified(com.linkedin.pegasus2avro.common.AuditStamp value) {
      validate(fields()[1], value);
      this.lastModified = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'lastModified' field has been set */
    public boolean hasLastModified() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'lastModified' field */
    public com.linkedin.pegasus2avro.identity.CorpUserStatus.Builder clearLastModified() {
      lastModified = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public CorpUserStatus build() {
      try {
        CorpUserStatus record = new CorpUserStatus();
        record.status = fieldSetFlags()[0] ? this.status : (java.lang.String) defaultValue(fields()[0]);
        record.lastModified = fieldSetFlags()[1] ? this.lastModified : (com.linkedin.pegasus2avro.common.AuditStamp) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
