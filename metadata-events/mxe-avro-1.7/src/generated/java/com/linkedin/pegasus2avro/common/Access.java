/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.common;  
@SuppressWarnings("all")
/** Aspect used for associating roles to a dataset or any asset */
@org.apache.avro.specific.AvroGenerated
public class Access extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Access\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"Aspect used for associating roles to a dataset or any asset\",\"fields\":[{\"name\":\"roles\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"RoleAssociation\",\"doc\":\"Properties of an applied Role. For now, just an Urn\",\"fields\":[{\"name\":\"urn\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Urn of the External Role\",\"Relationship\":{\"entityTypes\":[\"role\"],\"name\":\"AssociatedWith\"},\"Searchable\":{\"addToFilters\":true,\"fieldName\":\"roles\",\"fieldType\":\"URN\",\"filterNameOverride\":\"Role\",\"hasValuesFieldName\":\"hasRoles\"},\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}}]}}],\"doc\":\"List of Roles which needs to be associated\",\"default\":null}],\"Aspect\":{\"name\":\"access\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** List of Roles which needs to be associated */
  @Deprecated public java.util.List<com.linkedin.pegasus2avro.common.RoleAssociation> roles;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Access() {}

  /**
   * All-args constructor.
   */
  public Access(java.util.List<com.linkedin.pegasus2avro.common.RoleAssociation> roles) {
    this.roles = roles;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return roles;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: roles = (java.util.List<com.linkedin.pegasus2avro.common.RoleAssociation>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'roles' field.
   * List of Roles which needs to be associated   */
  public java.util.List<com.linkedin.pegasus2avro.common.RoleAssociation> getRoles() {
    return roles;
  }

  /**
   * Sets the value of the 'roles' field.
   * List of Roles which needs to be associated   * @param value the value to set.
   */
  public void setRoles(java.util.List<com.linkedin.pegasus2avro.common.RoleAssociation> value) {
    this.roles = value;
  }

  /** Creates a new Access RecordBuilder */
  public static com.linkedin.pegasus2avro.common.Access.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.common.Access.Builder();
  }
  
  /** Creates a new Access RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.common.Access.Builder newBuilder(com.linkedin.pegasus2avro.common.Access.Builder other) {
    return new com.linkedin.pegasus2avro.common.Access.Builder(other);
  }
  
  /** Creates a new Access RecordBuilder by copying an existing Access instance */
  public static com.linkedin.pegasus2avro.common.Access.Builder newBuilder(com.linkedin.pegasus2avro.common.Access other) {
    return new com.linkedin.pegasus2avro.common.Access.Builder(other);
  }
  
  /**
   * RecordBuilder for Access instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Access>
    implements org.apache.avro.data.RecordBuilder<Access> {

    private java.util.List<com.linkedin.pegasus2avro.common.RoleAssociation> roles;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.common.Access.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.common.Access.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.roles)) {
        this.roles = data().deepCopy(fields()[0].schema(), other.roles);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Access instance */
    private Builder(com.linkedin.pegasus2avro.common.Access other) {
            super(com.linkedin.pegasus2avro.common.Access.SCHEMA$);
      if (isValidValue(fields()[0], other.roles)) {
        this.roles = data().deepCopy(fields()[0].schema(), other.roles);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'roles' field */
    public java.util.List<com.linkedin.pegasus2avro.common.RoleAssociation> getRoles() {
      return roles;
    }
    
    /** Sets the value of the 'roles' field */
    public com.linkedin.pegasus2avro.common.Access.Builder setRoles(java.util.List<com.linkedin.pegasus2avro.common.RoleAssociation> value) {
      validate(fields()[0], value);
      this.roles = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'roles' field has been set */
    public boolean hasRoles() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'roles' field */
    public com.linkedin.pegasus2avro.common.Access.Builder clearRoles() {
      roles = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public Access build() {
      try {
        Access record = new Access();
        record.roles = fieldSetFlags()[0] ? this.roles : (java.util.List<com.linkedin.pegasus2avro.common.RoleAssociation>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
