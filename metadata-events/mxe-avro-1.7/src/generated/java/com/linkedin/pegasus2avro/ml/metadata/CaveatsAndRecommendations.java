/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.ml.metadata;  
@SuppressWarnings("all")
/** This section should list additional concerns that were not covered in the previous sections. For example, did the results suggest any further testing? Were there any relevant groups that were not represented in the evaluation dataset? Are there additional recommendations for model use? */
@org.apache.avro.specific.AvroGenerated
public class CaveatsAndRecommendations extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CaveatsAndRecommendations\",\"namespace\":\"com.linkedin.pegasus2avro.ml.metadata\",\"doc\":\"This section should list additional concerns that were not covered in the previous sections. For example, did the results suggest any further testing? Were there any relevant groups that were not represented in the evaluation dataset? Are there additional recommendations for model use?\",\"fields\":[{\"name\":\"caveats\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CaveatDetails\",\"doc\":\"This section should list additional concerns that were not covered in the previous sections. For example, did the results suggest any further testing? Were there any relevant groups that were not represented in the evaluation dataset? Are there additional recommendations for model use?\",\"fields\":[{\"name\":\"needsFurtherTesting\",\"type\":[\"null\",\"boolean\"],\"doc\":\"Did the results suggest any further testing?\",\"default\":null},{\"name\":\"caveatDescription\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Caveat Description\\nFor ex: Given gender classes are binary (male/not male), which we include as male/female. Further work needed to evaluate across a spectrum of genders.\",\"default\":null},{\"name\":\"groupsNotRepresented\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"Relevant groups that were not represented in the evaluation dataset?\",\"default\":null}]}],\"doc\":\"This section should list additional concerns that were not covered in the previous sections. For example, did the results suggest any further testing? Were there any relevant groups that were not represented in the evaluation dataset?\",\"default\":null},{\"name\":\"recommendations\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Recommendations on where this MLModel should be used.\",\"default\":null},{\"name\":\"idealDatasetCharacteristics\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"Ideal characteristics of an evaluation dataset for this MLModel\",\"default\":null}],\"Aspect\":{\"name\":\"mlModelCaveatsAndRecommendations\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** This section should list additional concerns that were not covered in the previous sections. For example, did the results suggest any further testing? Were there any relevant groups that were not represented in the evaluation dataset? */
  @Deprecated public com.linkedin.pegasus2avro.ml.metadata.CaveatDetails caveats;
  /** Recommendations on where this MLModel should be used. */
  @Deprecated public java.lang.String recommendations;
  /** Ideal characteristics of an evaluation dataset for this MLModel */
  @Deprecated public java.util.List<java.lang.String> idealDatasetCharacteristics;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public CaveatsAndRecommendations() {}

  /**
   * All-args constructor.
   */
  public CaveatsAndRecommendations(com.linkedin.pegasus2avro.ml.metadata.CaveatDetails caveats, java.lang.String recommendations, java.util.List<java.lang.String> idealDatasetCharacteristics) {
    this.caveats = caveats;
    this.recommendations = recommendations;
    this.idealDatasetCharacteristics = idealDatasetCharacteristics;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return caveats;
    case 1: return recommendations;
    case 2: return idealDatasetCharacteristics;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: caveats = (com.linkedin.pegasus2avro.ml.metadata.CaveatDetails)value$; break;
    case 1: recommendations = (java.lang.String)value$; break;
    case 2: idealDatasetCharacteristics = (java.util.List<java.lang.String>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'caveats' field.
   * This section should list additional concerns that were not covered in the previous sections. For example, did the results suggest any further testing? Were there any relevant groups that were not represented in the evaluation dataset?   */
  public com.linkedin.pegasus2avro.ml.metadata.CaveatDetails getCaveats() {
    return caveats;
  }

  /**
   * Sets the value of the 'caveats' field.
   * This section should list additional concerns that were not covered in the previous sections. For example, did the results suggest any further testing? Were there any relevant groups that were not represented in the evaluation dataset?   * @param value the value to set.
   */
  public void setCaveats(com.linkedin.pegasus2avro.ml.metadata.CaveatDetails value) {
    this.caveats = value;
  }

  /**
   * Gets the value of the 'recommendations' field.
   * Recommendations on where this MLModel should be used.   */
  public java.lang.String getRecommendations() {
    return recommendations;
  }

  /**
   * Sets the value of the 'recommendations' field.
   * Recommendations on where this MLModel should be used.   * @param value the value to set.
   */
  public void setRecommendations(java.lang.String value) {
    this.recommendations = value;
  }

  /**
   * Gets the value of the 'idealDatasetCharacteristics' field.
   * Ideal characteristics of an evaluation dataset for this MLModel   */
  public java.util.List<java.lang.String> getIdealDatasetCharacteristics() {
    return idealDatasetCharacteristics;
  }

  /**
   * Sets the value of the 'idealDatasetCharacteristics' field.
   * Ideal characteristics of an evaluation dataset for this MLModel   * @param value the value to set.
   */
  public void setIdealDatasetCharacteristics(java.util.List<java.lang.String> value) {
    this.idealDatasetCharacteristics = value;
  }

  /** Creates a new CaveatsAndRecommendations RecordBuilder */
  public static com.linkedin.pegasus2avro.ml.metadata.CaveatsAndRecommendations.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.ml.metadata.CaveatsAndRecommendations.Builder();
  }
  
  /** Creates a new CaveatsAndRecommendations RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.ml.metadata.CaveatsAndRecommendations.Builder newBuilder(com.linkedin.pegasus2avro.ml.metadata.CaveatsAndRecommendations.Builder other) {
    return new com.linkedin.pegasus2avro.ml.metadata.CaveatsAndRecommendations.Builder(other);
  }
  
  /** Creates a new CaveatsAndRecommendations RecordBuilder by copying an existing CaveatsAndRecommendations instance */
  public static com.linkedin.pegasus2avro.ml.metadata.CaveatsAndRecommendations.Builder newBuilder(com.linkedin.pegasus2avro.ml.metadata.CaveatsAndRecommendations other) {
    return new com.linkedin.pegasus2avro.ml.metadata.CaveatsAndRecommendations.Builder(other);
  }
  
  /**
   * RecordBuilder for CaveatsAndRecommendations instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CaveatsAndRecommendations>
    implements org.apache.avro.data.RecordBuilder<CaveatsAndRecommendations> {

    private com.linkedin.pegasus2avro.ml.metadata.CaveatDetails caveats;
    private java.lang.String recommendations;
    private java.util.List<java.lang.String> idealDatasetCharacteristics;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.ml.metadata.CaveatsAndRecommendations.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.ml.metadata.CaveatsAndRecommendations.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.caveats)) {
        this.caveats = data().deepCopy(fields()[0].schema(), other.caveats);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.recommendations)) {
        this.recommendations = data().deepCopy(fields()[1].schema(), other.recommendations);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.idealDatasetCharacteristics)) {
        this.idealDatasetCharacteristics = data().deepCopy(fields()[2].schema(), other.idealDatasetCharacteristics);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing CaveatsAndRecommendations instance */
    private Builder(com.linkedin.pegasus2avro.ml.metadata.CaveatsAndRecommendations other) {
            super(com.linkedin.pegasus2avro.ml.metadata.CaveatsAndRecommendations.SCHEMA$);
      if (isValidValue(fields()[0], other.caveats)) {
        this.caveats = data().deepCopy(fields()[0].schema(), other.caveats);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.recommendations)) {
        this.recommendations = data().deepCopy(fields()[1].schema(), other.recommendations);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.idealDatasetCharacteristics)) {
        this.idealDatasetCharacteristics = data().deepCopy(fields()[2].schema(), other.idealDatasetCharacteristics);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'caveats' field */
    public com.linkedin.pegasus2avro.ml.metadata.CaveatDetails getCaveats() {
      return caveats;
    }
    
    /** Sets the value of the 'caveats' field */
    public com.linkedin.pegasus2avro.ml.metadata.CaveatsAndRecommendations.Builder setCaveats(com.linkedin.pegasus2avro.ml.metadata.CaveatDetails value) {
      validate(fields()[0], value);
      this.caveats = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'caveats' field has been set */
    public boolean hasCaveats() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'caveats' field */
    public com.linkedin.pegasus2avro.ml.metadata.CaveatsAndRecommendations.Builder clearCaveats() {
      caveats = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'recommendations' field */
    public java.lang.String getRecommendations() {
      return recommendations;
    }
    
    /** Sets the value of the 'recommendations' field */
    public com.linkedin.pegasus2avro.ml.metadata.CaveatsAndRecommendations.Builder setRecommendations(java.lang.String value) {
      validate(fields()[1], value);
      this.recommendations = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'recommendations' field has been set */
    public boolean hasRecommendations() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'recommendations' field */
    public com.linkedin.pegasus2avro.ml.metadata.CaveatsAndRecommendations.Builder clearRecommendations() {
      recommendations = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'idealDatasetCharacteristics' field */
    public java.util.List<java.lang.String> getIdealDatasetCharacteristics() {
      return idealDatasetCharacteristics;
    }
    
    /** Sets the value of the 'idealDatasetCharacteristics' field */
    public com.linkedin.pegasus2avro.ml.metadata.CaveatsAndRecommendations.Builder setIdealDatasetCharacteristics(java.util.List<java.lang.String> value) {
      validate(fields()[2], value);
      this.idealDatasetCharacteristics = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'idealDatasetCharacteristics' field has been set */
    public boolean hasIdealDatasetCharacteristics() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'idealDatasetCharacteristics' field */
    public com.linkedin.pegasus2avro.ml.metadata.CaveatsAndRecommendations.Builder clearIdealDatasetCharacteristics() {
      idealDatasetCharacteristics = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public CaveatsAndRecommendations build() {
      try {
        CaveatsAndRecommendations record = new CaveatsAndRecommendations();
        record.caveats = fieldSetFlags()[0] ? this.caveats : (com.linkedin.pegasus2avro.ml.metadata.CaveatDetails) defaultValue(fields()[0]);
        record.recommendations = fieldSetFlags()[1] ? this.recommendations : (java.lang.String) defaultValue(fields()[1]);
        record.idealDatasetCharacteristics = fieldSetFlags()[2] ? this.idealDatasetCharacteristics : (java.util.List<java.lang.String>) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
