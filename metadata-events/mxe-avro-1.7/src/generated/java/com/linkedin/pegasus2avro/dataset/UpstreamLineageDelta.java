/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.dataset;  
@SuppressWarnings("all")
/** Describes a delta change to a dataset upstream lineage */
@org.apache.avro.specific.AvroGenerated
public class UpstreamLineageDelta extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UpstreamLineageDelta\",\"namespace\":\"com.linkedin.pegasus2avro.dataset\",\"doc\":\"Describes a delta change to a dataset upstream lineage\",\"fields\":[{\"name\":\"upstreamsToUpdate\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Upstream\",\"doc\":\"Upstream lineage information about a dataset including the source reporting the lineage\",\"fields\":[{\"name\":\"auditStamp\",\"type\":{\"type\":\"record\",\"name\":\"AuditStamp\",\"namespace\":\"com.linkedin.pegasus2avro.common\",\"doc\":\"Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage.\",\"fields\":[{\"name\":\"time\",\"type\":\"long\",\"doc\":\"When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent.\"},{\"name\":\"actor\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change.\",\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"impersonator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor.\",\"default\":null,\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.Urn\"}},{\"name\":\"message\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually.\",\"default\":null}]},\"doc\":\"Audit stamp containing who reported the lineage and when.\",\"default\":{\"actor\":\"urn:li:corpuser:unknown\",\"impersonator\":null,\"time\":0,\"message\":null}},{\"name\":\"created\",\"type\":[\"null\",\"com.linkedin.pegasus2avro.common.AuditStamp\"],\"doc\":\"Audit stamp containing who created the lineage and when.\",\"default\":null},{\"name\":\"dataset\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The upstream dataset the lineage points to\",\"Relationship\":{\"createdActor\":\"upstreams/*/created/actor\",\"createdOn\":\"upstreams/*/created/time\",\"entityTypes\":[\"dataset\"],\"isLineage\":true,\"name\":\"DownstreamOf\",\"properties\":\"upstreams/*/properties\",\"updatedActor\":\"upstreams/*/auditStamp/actor\",\"updatedOn\":\"upstreams/*/auditStamp/time\"},\"Searchable\":{\"fieldName\":\"upstreams\",\"fieldType\":\"URN\",\"queryByDefault\":false},\"java\":{\"class\":\"com.linkedin.pegasus2avro.common.urn.DatasetUrn\"}},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"DatasetLineageType\",\"doc\":\"The various types of supported dataset lineage\",\"symbols\":[\"COPY\",\"TRANSFORMED\",\"VIEW\"],\"symbolDocs\":{\"COPY\":\"Direct copy without modification\",\"TRANSFORMED\":\"Transformed data with modification (format or content change)\",\"VIEW\":\"Represents a view defined on the sources e.g. Hive view defined on underlying hive tables or a Hive table pointing to a HDFS dataset or DALI view defined on multiple sources\"}},\"doc\":\"The type of the lineage\"},{\"name\":\"properties\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}],\"doc\":\"A generic properties bag that allows us to store specific information on this graph edge.\",\"default\":null}]}},\"doc\":\"The list of upstream lineages to be updated for a dataset\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The list of upstream lineages to be updated for a dataset */
  @Deprecated public java.util.List<com.linkedin.pegasus2avro.dataset.Upstream> upstreamsToUpdate;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public UpstreamLineageDelta() {}

  /**
   * All-args constructor.
   */
  public UpstreamLineageDelta(java.util.List<com.linkedin.pegasus2avro.dataset.Upstream> upstreamsToUpdate) {
    this.upstreamsToUpdate = upstreamsToUpdate;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return upstreamsToUpdate;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: upstreamsToUpdate = (java.util.List<com.linkedin.pegasus2avro.dataset.Upstream>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'upstreamsToUpdate' field.
   * The list of upstream lineages to be updated for a dataset   */
  public java.util.List<com.linkedin.pegasus2avro.dataset.Upstream> getUpstreamsToUpdate() {
    return upstreamsToUpdate;
  }

  /**
   * Sets the value of the 'upstreamsToUpdate' field.
   * The list of upstream lineages to be updated for a dataset   * @param value the value to set.
   */
  public void setUpstreamsToUpdate(java.util.List<com.linkedin.pegasus2avro.dataset.Upstream> value) {
    this.upstreamsToUpdate = value;
  }

  /** Creates a new UpstreamLineageDelta RecordBuilder */
  public static com.linkedin.pegasus2avro.dataset.UpstreamLineageDelta.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.dataset.UpstreamLineageDelta.Builder();
  }
  
  /** Creates a new UpstreamLineageDelta RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.dataset.UpstreamLineageDelta.Builder newBuilder(com.linkedin.pegasus2avro.dataset.UpstreamLineageDelta.Builder other) {
    return new com.linkedin.pegasus2avro.dataset.UpstreamLineageDelta.Builder(other);
  }
  
  /** Creates a new UpstreamLineageDelta RecordBuilder by copying an existing UpstreamLineageDelta instance */
  public static com.linkedin.pegasus2avro.dataset.UpstreamLineageDelta.Builder newBuilder(com.linkedin.pegasus2avro.dataset.UpstreamLineageDelta other) {
    return new com.linkedin.pegasus2avro.dataset.UpstreamLineageDelta.Builder(other);
  }
  
  /**
   * RecordBuilder for UpstreamLineageDelta instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UpstreamLineageDelta>
    implements org.apache.avro.data.RecordBuilder<UpstreamLineageDelta> {

    private java.util.List<com.linkedin.pegasus2avro.dataset.Upstream> upstreamsToUpdate;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.dataset.UpstreamLineageDelta.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.dataset.UpstreamLineageDelta.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.upstreamsToUpdate)) {
        this.upstreamsToUpdate = data().deepCopy(fields()[0].schema(), other.upstreamsToUpdate);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing UpstreamLineageDelta instance */
    private Builder(com.linkedin.pegasus2avro.dataset.UpstreamLineageDelta other) {
            super(com.linkedin.pegasus2avro.dataset.UpstreamLineageDelta.SCHEMA$);
      if (isValidValue(fields()[0], other.upstreamsToUpdate)) {
        this.upstreamsToUpdate = data().deepCopy(fields()[0].schema(), other.upstreamsToUpdate);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'upstreamsToUpdate' field */
    public java.util.List<com.linkedin.pegasus2avro.dataset.Upstream> getUpstreamsToUpdate() {
      return upstreamsToUpdate;
    }
    
    /** Sets the value of the 'upstreamsToUpdate' field */
    public com.linkedin.pegasus2avro.dataset.UpstreamLineageDelta.Builder setUpstreamsToUpdate(java.util.List<com.linkedin.pegasus2avro.dataset.Upstream> value) {
      validate(fields()[0], value);
      this.upstreamsToUpdate = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'upstreamsToUpdate' field has been set */
    public boolean hasUpstreamsToUpdate() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'upstreamsToUpdate' field */
    public com.linkedin.pegasus2avro.dataset.UpstreamLineageDelta.Builder clearUpstreamsToUpdate() {
      upstreamsToUpdate = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public UpstreamLineageDelta build() {
      try {
        UpstreamLineageDelta record = new UpstreamLineageDelta();
        record.upstreamsToUpdate = fieldSetFlags()[0] ? this.upstreamsToUpdate : (java.util.List<com.linkedin.pegasus2avro.dataset.Upstream>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
