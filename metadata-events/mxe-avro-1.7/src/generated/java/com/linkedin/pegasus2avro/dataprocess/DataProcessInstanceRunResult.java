/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.dataprocess;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class DataProcessInstanceRunResult extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DataProcessInstanceRunResult\",\"namespace\":\"com.linkedin.pegasus2avro.dataprocess\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"RunResultType\",\"symbols\":[\"SUCCESS\",\"FAILURE\",\"SKIPPED\",\"UP_FOR_RETRY\"],\"symbolDocs\":{\"FAILURE\":\" The Run Failed\",\"SKIPPED\":\" The Run Skipped\",\"SUCCESS\":\" The Run Succeeded\",\"UP_FOR_RETRY\":\" The Run Failed and will Retry\"}},\"doc\":\" The final result, e.g. SUCCESS, FAILURE, SKIPPED, or UP_FOR_RETRY.\"},{\"name\":\"nativeResultType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"It identifies the system where the native result comes from like Airflow, Azkaban, etc..\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /**  The final result, e.g. SUCCESS, FAILURE, SKIPPED, or UP_FOR_RETRY. */
  @Deprecated public com.linkedin.pegasus2avro.dataprocess.RunResultType type;
  /** It identifies the system where the native result comes from like Airflow, Azkaban, etc.. */
  @Deprecated public java.lang.String nativeResultType;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public DataProcessInstanceRunResult() {}

  /**
   * All-args constructor.
   */
  public DataProcessInstanceRunResult(com.linkedin.pegasus2avro.dataprocess.RunResultType type, java.lang.String nativeResultType) {
    this.type = type;
    this.nativeResultType = nativeResultType;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return type;
    case 1: return nativeResultType;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: type = (com.linkedin.pegasus2avro.dataprocess.RunResultType)value$; break;
    case 1: nativeResultType = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'type' field.
   *  The final result, e.g. SUCCESS, FAILURE, SKIPPED, or UP_FOR_RETRY.   */
  public com.linkedin.pegasus2avro.dataprocess.RunResultType getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   *  The final result, e.g. SUCCESS, FAILURE, SKIPPED, or UP_FOR_RETRY.   * @param value the value to set.
   */
  public void setType(com.linkedin.pegasus2avro.dataprocess.RunResultType value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'nativeResultType' field.
   * It identifies the system where the native result comes from like Airflow, Azkaban, etc..   */
  public java.lang.String getNativeResultType() {
    return nativeResultType;
  }

  /**
   * Sets the value of the 'nativeResultType' field.
   * It identifies the system where the native result comes from like Airflow, Azkaban, etc..   * @param value the value to set.
   */
  public void setNativeResultType(java.lang.String value) {
    this.nativeResultType = value;
  }

  /** Creates a new DataProcessInstanceRunResult RecordBuilder */
  public static com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceRunResult.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceRunResult.Builder();
  }
  
  /** Creates a new DataProcessInstanceRunResult RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceRunResult.Builder newBuilder(com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceRunResult.Builder other) {
    return new com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceRunResult.Builder(other);
  }
  
  /** Creates a new DataProcessInstanceRunResult RecordBuilder by copying an existing DataProcessInstanceRunResult instance */
  public static com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceRunResult.Builder newBuilder(com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceRunResult other) {
    return new com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceRunResult.Builder(other);
  }
  
  /**
   * RecordBuilder for DataProcessInstanceRunResult instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DataProcessInstanceRunResult>
    implements org.apache.avro.data.RecordBuilder<DataProcessInstanceRunResult> {

    private com.linkedin.pegasus2avro.dataprocess.RunResultType type;
    private java.lang.String nativeResultType;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceRunResult.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceRunResult.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.nativeResultType)) {
        this.nativeResultType = data().deepCopy(fields()[1].schema(), other.nativeResultType);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing DataProcessInstanceRunResult instance */
    private Builder(com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceRunResult other) {
            super(com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceRunResult.SCHEMA$);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.nativeResultType)) {
        this.nativeResultType = data().deepCopy(fields()[1].schema(), other.nativeResultType);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'type' field */
    public com.linkedin.pegasus2avro.dataprocess.RunResultType getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceRunResult.Builder setType(com.linkedin.pegasus2avro.dataprocess.RunResultType value) {
      validate(fields()[0], value);
      this.type = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'type' field */
    public com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceRunResult.Builder clearType() {
      type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'nativeResultType' field */
    public java.lang.String getNativeResultType() {
      return nativeResultType;
    }
    
    /** Sets the value of the 'nativeResultType' field */
    public com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceRunResult.Builder setNativeResultType(java.lang.String value) {
      validate(fields()[1], value);
      this.nativeResultType = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'nativeResultType' field has been set */
    public boolean hasNativeResultType() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'nativeResultType' field */
    public com.linkedin.pegasus2avro.dataprocess.DataProcessInstanceRunResult.Builder clearNativeResultType() {
      nativeResultType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public DataProcessInstanceRunResult build() {
      try {
        DataProcessInstanceRunResult record = new DataProcessInstanceRunResult();
        record.type = fieldSetFlags()[0] ? this.type : (com.linkedin.pegasus2avro.dataprocess.RunResultType) defaultValue(fields()[0]);
        record.nativeResultType = fieldSetFlags()[1] ? this.nativeResultType : (java.lang.String) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
