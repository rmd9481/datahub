/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.pegasus2avro.identity;  
@SuppressWarnings("all")
/** Carries information about which roles a user is assigned to. */
@org.apache.avro.specific.AvroGenerated
public class RoleMembership extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RoleMembership\",\"namespace\":\"com.linkedin.pegasus2avro.identity\",\"doc\":\"Carries information about which roles a user is assigned to.\",\"fields\":[{\"name\":\"roles\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"Relationship\":{\"/*\":{\"entityTypes\":[\"dataHubRole\"],\"name\":\"IsMemberOfRole\"}}}],\"Aspect\":{\"name\":\"roleMembership\"}}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.util.List<java.lang.String> roles;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public RoleMembership() {}

  /**
   * All-args constructor.
   */
  public RoleMembership(java.util.List<java.lang.String> roles) {
    this.roles = roles;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return roles;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: roles = (java.util.List<java.lang.String>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'roles' field.
   */
  public java.util.List<java.lang.String> getRoles() {
    return roles;
  }

  /**
   * Sets the value of the 'roles' field.
   * @param value the value to set.
   */
  public void setRoles(java.util.List<java.lang.String> value) {
    this.roles = value;
  }

  /** Creates a new RoleMembership RecordBuilder */
  public static com.linkedin.pegasus2avro.identity.RoleMembership.Builder newBuilder() {
    return new com.linkedin.pegasus2avro.identity.RoleMembership.Builder();
  }
  
  /** Creates a new RoleMembership RecordBuilder by copying an existing Builder */
  public static com.linkedin.pegasus2avro.identity.RoleMembership.Builder newBuilder(com.linkedin.pegasus2avro.identity.RoleMembership.Builder other) {
    return new com.linkedin.pegasus2avro.identity.RoleMembership.Builder(other);
  }
  
  /** Creates a new RoleMembership RecordBuilder by copying an existing RoleMembership instance */
  public static com.linkedin.pegasus2avro.identity.RoleMembership.Builder newBuilder(com.linkedin.pegasus2avro.identity.RoleMembership other) {
    return new com.linkedin.pegasus2avro.identity.RoleMembership.Builder(other);
  }
  
  /**
   * RecordBuilder for RoleMembership instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RoleMembership>
    implements org.apache.avro.data.RecordBuilder<RoleMembership> {

    private java.util.List<java.lang.String> roles;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.pegasus2avro.identity.RoleMembership.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.pegasus2avro.identity.RoleMembership.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.roles)) {
        this.roles = data().deepCopy(fields()[0].schema(), other.roles);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing RoleMembership instance */
    private Builder(com.linkedin.pegasus2avro.identity.RoleMembership other) {
            super(com.linkedin.pegasus2avro.identity.RoleMembership.SCHEMA$);
      if (isValidValue(fields()[0], other.roles)) {
        this.roles = data().deepCopy(fields()[0].schema(), other.roles);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'roles' field */
    public java.util.List<java.lang.String> getRoles() {
      return roles;
    }
    
    /** Sets the value of the 'roles' field */
    public com.linkedin.pegasus2avro.identity.RoleMembership.Builder setRoles(java.util.List<java.lang.String> value) {
      validate(fields()[0], value);
      this.roles = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'roles' field has been set */
    public boolean hasRoles() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'roles' field */
    public com.linkedin.pegasus2avro.identity.RoleMembership.Builder clearRoles() {
      roles = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public RoleMembership build() {
      try {
        RoleMembership record = new RoleMembership();
        record.roles = fieldSetFlags()[0] ? this.roles : (java.util.List<java.lang.String>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
